{
  "resourceType": "Bundle",
  "type": "transaction",
  "entry": [
    {
      "fullUrl": "urn:uuid:12d816f9-021e-4c25-aa9f-8a9e8271fc39",
      "request": {
        "method": "POST",
        "url": "Binary"
      },
      "resource": {
        "resourceType": "Binary",
        "contentType": "text/typescript",
        "data": ""
      }
    },
    {
      "fullUrl": "urn:uuid:8361e380-2a00-4736-b84c-c20576e696e6",
      "request": {
        "method": "POST",
        "url": "Binary"
      },
      "resource": {
        "resourceType": "Binary",
        "contentType": "text/javascript",
        "data": ""
      }
    },
    {
      "request": {
        "method": "PUT",
        "url": "$bot-sync-patient-reference"
      },
      "resource": {
        "resourceType": "Bot",
        "id": "$bot-sync-patient-id",
        "name": "sync-patient",
        "identifier": [
          {
            "system": "http://example-bots.org",
            "value": "sync-patient"
          }
        ],
        "runtimeVersion": "awslambda",
        "sourceCode": {
          "contentType": "text/typescript",
          "url": "urn:uuid:12d816f9-021e-4c25-aa9f-8a9e8271fc39"
        },
        "executableCode": {
          "contentType": "text/javascript",
          "url": "urn:uuid:8361e380-2a00-4736-b84c-c20576e696e6"
        }
      }
    }
  ]
}