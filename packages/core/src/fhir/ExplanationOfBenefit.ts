/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { Address } from './Address';
import { Attachment } from './Attachment';
import { CodeableConcept } from './CodeableConcept';
import { Coding } from './Coding';
import { Extension } from './Extension';
import { Identifier } from './Identifier';
import { Meta } from './Meta';
import { Money } from './Money';
import { Narrative } from './Narrative';
import { Period } from './Period';
import { Quantity } from './Quantity';
import { Reference } from './Reference';
import { Resource } from './Resource';

/**
 * This resource provides: the claim details; adjudication details from
 * the processing of a Claim; and optionally account balance information,
 * for informing the subscriber of the benefits provided.
 */
export interface ExplanationOfBenefit {

  /**
   * This is a ExplanationOfBenefit resource
   */
  readonly resourceType: 'ExplanationOfBenefit';

  /**
   * The logical id of the resource, as used in the URL for the resource.
   * Once assigned, this value never changes.
   */
  readonly id?: string;

  /**
   * The metadata about the resource. This is content that is maintained by
   * the infrastructure. Changes to the content might not always be
   * associated with version changes to the resource.
   */
  readonly meta?: Meta;

  /**
   * A reference to a set of rules that were followed when the resource was
   * constructed, and which must be understood when processing the content.
   * Often, this is a reference to an implementation guide that defines the
   * special rules along with other profiles etc.
   */
  readonly implicitRules?: string;

  /**
   * The base language in which the resource is written.
   */
  readonly language?: string;

  /**
   * A human-readable narrative that contains a summary of the resource and
   * can be used to represent the content of the resource to a human. The
   * narrative need not encode all the structured data, but is required to
   * contain sufficient detail to make it &quot;clinically safe&quot; for a human to
   * just read the narrative. Resource definitions may define what content
   * should be represented in the narrative to ensure clinical safety.
   */
  readonly text?: Narrative;

  /**
   * These resources do not have an independent existence apart from the
   * resource that contains them - they cannot be identified independently,
   * and nor can they have their own independent transaction scope.
   */
  readonly contained?: Resource[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the resource and that modifies the
   * understanding of the element that contains it and/or the understanding
   * of the containing element's descendants. Usually modifier elements
   * provide negation or qualification. To make the use of extensions safe
   * and manageable, there is a strict set of governance applied to the
   * definition and use of extensions. Though any implementer is allowed to
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension. Applications processing a
   * resource are required to check for modifier extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A unique identifier assigned to this explanation of benefit.
   */
  readonly identifier?: Identifier[];

  /**
   * The status of the resource instance.
   */
  readonly status?: string;

  /**
   * The category of claim, e.g. oral, pharmacy, vision, institutional,
   * professional.
   */
  readonly type?: CodeableConcept;

  /**
   * A finer grained suite of claim type codes which may convey additional
   * information such as Inpatient vs Outpatient and/or a specialty
   * service.
   */
  readonly subType?: CodeableConcept;

  /**
   * A code to indicate whether the nature of the request is: to request
   * adjudication of products and services previously rendered; or
   * requesting authorization and adjudication for provision in the future;
   * or requesting the non-binding adjudication of the listed products and
   * services which could be provided in the future.
   */
  readonly use?: string;

  /**
   * The party to whom the professional services and/or products have been
   * supplied or are being considered and for whom actual for forecast
   * reimbursement is sought.
   */
  readonly patient?: Reference;

  /**
   * The period for which charges are being submitted.
   */
  readonly billablePeriod?: Period;

  /**
   * The date this resource was created.
   */
  readonly created?: string;

  /**
   * Individual who created the claim, predetermination or
   * preauthorization.
   */
  readonly enterer?: Reference;

  /**
   * The party responsible for authorization, adjudication and
   * reimbursement.
   */
  readonly insurer?: Reference;

  /**
   * The provider which is responsible for the claim, predetermination or
   * preauthorization.
   */
  readonly provider?: Reference;

  /**
   * The provider-required urgency of processing the request. Typical
   * values include: stat, routine deferred.
   */
  readonly priority?: CodeableConcept;

  /**
   * A code to indicate whether and for whom funds are to be reserved for
   * future claims.
   */
  readonly fundsReserveRequested?: CodeableConcept;

  /**
   * A code, used only on a response to a preauthorization, to indicate
   * whether the benefits payable have been reserved and for whom.
   */
  readonly fundsReserve?: CodeableConcept;

  /**
   * Other claims which are related to this claim such as prior submissions
   * or claims for related services or for the same event.
   */
  readonly related?: ExplanationOfBenefitRelated[];

  /**
   * Prescription to support the dispensing of pharmacy, device or vision
   * products.
   */
  readonly prescription?: Reference;

  /**
   * Original prescription which has been superseded by this prescription
   * to support the dispensing of pharmacy services, medications or
   * products.
   */
  readonly originalPrescription?: Reference;

  /**
   * The party to be reimbursed for cost of the products and services
   * according to the terms of the policy.
   */
  readonly payee?: ExplanationOfBenefitPayee;

  /**
   * A reference to a referral resource.
   */
  readonly referral?: Reference;

  /**
   * Facility where the services were provided.
   */
  readonly facility?: Reference;

  /**
   * The business identifier for the instance of the adjudication request:
   * claim predetermination or preauthorization.
   */
  readonly claim?: Reference;

  /**
   * The business identifier for the instance of the adjudication response:
   * claim, predetermination or preauthorization response.
   */
  readonly claimResponse?: Reference;

  /**
   * The outcome of the claim, predetermination, or preauthorization
   * processing.
   */
  readonly outcome?: string;

  /**
   * A human readable description of the status of the adjudication.
   */
  readonly disposition?: string;

  /**
   * Reference from the Insurer which is used in later communications which
   * refers to this adjudication.
   */
  readonly preAuthRef?: string[];

  /**
   * The timeframe during which the supplied preauthorization reference may
   * be quoted on claims to obtain the adjudication as provided.
   */
  readonly preAuthRefPeriod?: Period[];

  /**
   * The members of the team who provided the products and services.
   */
  readonly careTeam?: ExplanationOfBenefitCareTeam[];

  /**
   * Additional information codes regarding exceptions, special
   * considerations, the condition, situation, prior or concurrent issues.
   */
  readonly supportingInfo?: ExplanationOfBenefitSupportingInfo[];

  /**
   * Information about diagnoses relevant to the claim items.
   */
  readonly diagnosis?: ExplanationOfBenefitDiagnosis[];

  /**
   * Procedures performed on the patient relevant to the billing items with
   * the claim.
   */
  readonly procedure?: ExplanationOfBenefitProcedure[];

  /**
   * This indicates the relative order of a series of EOBs related to
   * different coverages for the same suite of services.
   */
  readonly precedence?: number;

  /**
   * Financial instruments for reimbursement for the health care products
   * and services specified on the claim.
   */
  readonly insurance?: ExplanationOfBenefitInsurance[];

  /**
   * Details of a accident which resulted in injuries which required the
   * products and services listed in the claim.
   */
  readonly accident?: ExplanationOfBenefitAccident;

  /**
   * A claim line. Either a simple (a product or service) or a 'group' of
   * details which can also be a simple items or groups of sub-details.
   */
  readonly item?: ExplanationOfBenefitItem[];

  /**
   * The first-tier service adjudications for payor added product or
   * service lines.
   */
  readonly addItem?: ExplanationOfBenefitAddItem[];

  /**
   * The adjudication results which are presented at the header level
   * rather than at the line-item or add-item levels.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];

  /**
   * Categorized monetary totals for the adjudication.
   */
  readonly total?: ExplanationOfBenefitTotal[];

  /**
   * Payment details for the adjudication of the claim.
   */
  readonly payment?: ExplanationOfBenefitPayment;

  /**
   * A code for the form to be used for printing the content.
   */
  readonly formCode?: CodeableConcept;

  /**
   * The actual form, by reference or inclusion, for printing the content
   * or an EOB.
   */
  readonly form?: Attachment;

  /**
   * A note that describes or explains adjudication results in a human
   * readable form.
   */
  readonly processNote?: ExplanationOfBenefitProcessNote[];

  /**
   * The term of the benefits documented in this response.
   */
  readonly benefitPeriod?: Period;

  /**
   * Balance by Benefit Category.
   */
  readonly benefitBalance?: ExplanationOfBenefitBenefitBalance[];
}

/**
 * Details of a accident which resulted in injuries which required the
 * products and services listed in the claim.
 */
export interface ExplanationOfBenefitAccident {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Date of an accident event  related to the products and services
   * contained in the claim.
   */
  readonly date?: string;

  /**
   * The type or context of the accident event for the purposes of
   * selection of potential insurance coverages and determination of
   * coordination between insurers.
   */
  readonly type?: CodeableConcept;

  /**
   * The physical location of the accident event.
   */
  readonly locationAddress?: Address;

  /**
   * The physical location of the accident event.
   */
  readonly locationReference?: Reference;
}

/**
 * The first-tier service adjudications for payor added product or
 * service lines.
 */
export interface ExplanationOfBenefitAddItem {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Claim items which this service line is intended to replace.
   */
  readonly itemSequence?: number[];

  /**
   * The sequence number of the details within the claim item which this
   * line is intended to replace.
   */
  readonly detailSequence?: number[];

  /**
   * The sequence number of the sub-details woithin the details within the
   * claim item which this line is intended to replace.
   */
  readonly subDetailSequence?: number[];

  /**
   * The providers who are authorized for the services rendered to the
   * patient.
   */
  readonly provider?: Reference[];

  /**
   * When the value is a group code then this item collects a set of
   * related claim details, otherwise this contains the product, service,
   * drug or other billing code for the item.
   */
  readonly productOrService?: CodeableConcept;

  /**
   * Item typification or modifiers codes to convey additional context for
   * the product or service.
   */
  readonly modifier?: CodeableConcept[];

  /**
   * Identifies the program under which this may be recovered.
   */
  readonly programCode?: CodeableConcept[];

  /**
   * The date or dates when the service or product was supplied, performed
   * or completed.
   */
  readonly servicedDate?: string;

  /**
   * The date or dates when the service or product was supplied, performed
   * or completed.
   */
  readonly servicedPeriod?: Period;

  /**
   * Where the product or service was provided.
   */
  readonly locationCodeableConcept?: CodeableConcept;

  /**
   * Where the product or service was provided.
   */
  readonly locationAddress?: Address;

  /**
   * Where the product or service was provided.
   */
  readonly locationReference?: Reference;

  /**
   * The number of repetitions of a service or product.
   */
  readonly quantity?: Quantity;

  /**
   * If the item is not a group then this is the fee for the product or
   * service, otherwise this is the total of the fees for the details of
   * the group.
   */
  readonly unitPrice?: Money;

  /**
   * A real number that represents a multiplier used in determining the
   * overall value of services delivered and/or goods received. The concept
   * of a Factor allows for a discount or surcharge multiplier to be
   * applied to a monetary amount.
   */
  readonly factor?: number;

  /**
   * The quantity times the unit price for an additional service or product
   * or charge.
   */
  readonly net?: Money;

  /**
   * Physical service site on the patient (limb, tooth, etc.).
   */
  readonly bodySite?: CodeableConcept;

  /**
   * A region or surface of the bodySite, e.g. limb region or tooth
   * surface(s).
   */
  readonly subSite?: CodeableConcept[];

  /**
   * The numbers associated with notes below which apply to the
   * adjudication of this item.
   */
  readonly noteNumber?: number[];

  /**
   * The adjudication results.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];

  /**
   * The second-tier service adjudications for payor added services.
   */
  readonly detail?: ExplanationOfBenefitAddItemDetail[];
}

/**
 * The second-tier service adjudications for payor added services.
 */
export interface ExplanationOfBenefitAddItemDetail {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * When the value is a group code then this item collects a set of
   * related claim details, otherwise this contains the product, service,
   * drug or other billing code for the item.
   */
  readonly productOrService?: CodeableConcept;

  /**
   * Item typification or modifiers codes to convey additional context for
   * the product or service.
   */
  readonly modifier?: CodeableConcept[];

  /**
   * The number of repetitions of a service or product.
   */
  readonly quantity?: Quantity;

  /**
   * If the item is not a group then this is the fee for the product or
   * service, otherwise this is the total of the fees for the details of
   * the group.
   */
  readonly unitPrice?: Money;

  /**
   * A real number that represents a multiplier used in determining the
   * overall value of services delivered and/or goods received. The concept
   * of a Factor allows for a discount or surcharge multiplier to be
   * applied to a monetary amount.
   */
  readonly factor?: number;

  /**
   * The quantity times the unit price for an additional service or product
   * or charge.
   */
  readonly net?: Money;

  /**
   * The numbers associated with notes below which apply to the
   * adjudication of this item.
   */
  readonly noteNumber?: number[];

  /**
   * The adjudication results.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];

  /**
   * The third-tier service adjudications for payor added services.
   */
  readonly subDetail?: ExplanationOfBenefitAddItemDetailSubDetail[];
}

/**
 * The third-tier service adjudications for payor added services.
 */
export interface ExplanationOfBenefitAddItemDetailSubDetail {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * When the value is a group code then this item collects a set of
   * related claim details, otherwise this contains the product, service,
   * drug or other billing code for the item.
   */
  readonly productOrService?: CodeableConcept;

  /**
   * Item typification or modifiers codes to convey additional context for
   * the product or service.
   */
  readonly modifier?: CodeableConcept[];

  /**
   * The number of repetitions of a service or product.
   */
  readonly quantity?: Quantity;

  /**
   * If the item is not a group then this is the fee for the product or
   * service, otherwise this is the total of the fees for the details of
   * the group.
   */
  readonly unitPrice?: Money;

  /**
   * A real number that represents a multiplier used in determining the
   * overall value of services delivered and/or goods received. The concept
   * of a Factor allows for a discount or surcharge multiplier to be
   * applied to a monetary amount.
   */
  readonly factor?: number;

  /**
   * The quantity times the unit price for an additional service or product
   * or charge.
   */
  readonly net?: Money;

  /**
   * The numbers associated with notes below which apply to the
   * adjudication of this item.
   */
  readonly noteNumber?: number[];

  /**
   * The adjudication results.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];
}

/**
 * Balance by Benefit Category.
 */
export interface ExplanationOfBenefitBenefitBalance {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Code to identify the general type of benefits under which products and
   * services are provided.
   */
  readonly category?: CodeableConcept;

  /**
   * True if the indicated class of service is excluded from the plan,
   * missing or False indicates the product or service is included in the
   * coverage.
   */
  readonly excluded?: boolean;

  /**
   * A short name or tag for the benefit.
   */
  readonly name?: string;

  /**
   * A richer description of the benefit or services covered.
   */
  readonly description?: string;

  /**
   * Is a flag to indicate whether the benefits refer to in-network
   * providers or out-of-network providers.
   */
  readonly network?: CodeableConcept;

  /**
   * Indicates if the benefits apply to an individual or to the family.
   */
  readonly unit?: CodeableConcept;

  /**
   * The term or period of the values such as 'maximum lifetime benefit' or
   * 'maximum annual visits'.
   */
  readonly term?: CodeableConcept;

  /**
   * Benefits Used to date.
   */
  readonly financial?: ExplanationOfBenefitBenefitBalanceFinancial[];
}

/**
 * Benefits Used to date.
 */
export interface ExplanationOfBenefitBenefitBalanceFinancial {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Classification of benefit being provided.
   */
  readonly type?: CodeableConcept;

  /**
   * The quantity of the benefit which is permitted under the coverage.
   */
  readonly allowedUnsignedInt?: number;

  /**
   * The quantity of the benefit which is permitted under the coverage.
   */
  readonly allowedString?: string;

  /**
   * The quantity of the benefit which is permitted under the coverage.
   */
  readonly allowedMoney?: Money;

  /**
   * The quantity of the benefit which have been consumed to date.
   */
  readonly usedUnsignedInt?: number;

  /**
   * The quantity of the benefit which have been consumed to date.
   */
  readonly usedMoney?: Money;
}

/**
 * The members of the team who provided the products and services.
 */
export interface ExplanationOfBenefitCareTeam {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A number to uniquely identify care team entries.
   */
  readonly sequence?: number;

  /**
   * Member of the team who provided the product or service.
   */
  readonly provider?: Reference;

  /**
   * The party who is billing and/or responsible for the claimed products
   * or services.
   */
  readonly responsible?: boolean;

  /**
   * The lead, assisting or supervising practitioner and their discipline
   * if a multidisciplinary team.
   */
  readonly role?: CodeableConcept;

  /**
   * The qualification of the practitioner which is applicable for this
   * service.
   */
  readonly qualification?: CodeableConcept;
}

/**
 * Information about diagnoses relevant to the claim items.
 */
export interface ExplanationOfBenefitDiagnosis {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A number to uniquely identify diagnosis entries.
   */
  readonly sequence?: number;

  /**
   * The nature of illness or problem in a coded form or as a reference to
   * an external defined Condition.
   */
  readonly diagnosisCodeableConcept?: CodeableConcept;

  /**
   * The nature of illness or problem in a coded form or as a reference to
   * an external defined Condition.
   */
  readonly diagnosisReference?: Reference;

  /**
   * When the condition was observed or the relative ranking.
   */
  readonly type?: CodeableConcept[];

  /**
   * Indication of whether the diagnosis was present on admission to a
   * facility.
   */
  readonly onAdmission?: CodeableConcept;

  /**
   * A package billing code or bundle code used to group products and
   * services to a particular health condition (such as heart attack) which
   * is based on a predetermined grouping code system.
   */
  readonly packageCode?: CodeableConcept;
}

/**
 * Financial instruments for reimbursement for the health care products
 * and services specified on the claim.
 */
export interface ExplanationOfBenefitInsurance {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A flag to indicate that this Coverage is to be used for adjudication
   * of this claim when set to true.
   */
  readonly focal?: boolean;

  /**
   * Reference to the insurance card level information contained in the
   * Coverage resource. The coverage issuing insurer will use these details
   * to locate the patient's actual coverage within the insurer's
   * information system.
   */
  readonly coverage?: Reference;

  /**
   * Reference numbers previously provided by the insurer to the provider
   * to be quoted on subsequent claims containing services or products
   * related to the prior authorization.
   */
  readonly preAuthRef?: string[];
}

/**
 * A claim line. Either a simple (a product or service) or a 'group' of
 * details which can also be a simple items or groups of sub-details.
 */
export interface ExplanationOfBenefitItem {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A number to uniquely identify item entries.
   */
  readonly sequence?: number;

  /**
   * Care team members related to this service or product.
   */
  readonly careTeamSequence?: number[];

  /**
   * Diagnoses applicable for this service or product.
   */
  readonly diagnosisSequence?: number[];

  /**
   * Procedures applicable for this service or product.
   */
  readonly procedureSequence?: number[];

  /**
   * Exceptions, special conditions and supporting information applicable
   * for this service or product.
   */
  readonly informationSequence?: number[];

  /**
   * The type of revenue or cost center providing the product and/or
   * service.
   */
  readonly revenue?: CodeableConcept;

  /**
   * Code to identify the general type of benefits under which products and
   * services are provided.
   */
  readonly category?: CodeableConcept;

  /**
   * When the value is a group code then this item collects a set of
   * related claim details, otherwise this contains the product, service,
   * drug or other billing code for the item.
   */
  readonly productOrService?: CodeableConcept;

  /**
   * Item typification or modifiers codes to convey additional context for
   * the product or service.
   */
  readonly modifier?: CodeableConcept[];

  /**
   * Identifies the program under which this may be recovered.
   */
  readonly programCode?: CodeableConcept[];

  /**
   * The date or dates when the service or product was supplied, performed
   * or completed.
   */
  readonly servicedDate?: string;

  /**
   * The date or dates when the service or product was supplied, performed
   * or completed.
   */
  readonly servicedPeriod?: Period;

  /**
   * Where the product or service was provided.
   */
  readonly locationCodeableConcept?: CodeableConcept;

  /**
   * Where the product or service was provided.
   */
  readonly locationAddress?: Address;

  /**
   * Where the product or service was provided.
   */
  readonly locationReference?: Reference;

  /**
   * The number of repetitions of a service or product.
   */
  readonly quantity?: Quantity;

  /**
   * If the item is not a group then this is the fee for the product or
   * service, otherwise this is the total of the fees for the details of
   * the group.
   */
  readonly unitPrice?: Money;

  /**
   * A real number that represents a multiplier used in determining the
   * overall value of services delivered and/or goods received. The concept
   * of a Factor allows for a discount or surcharge multiplier to be
   * applied to a monetary amount.
   */
  readonly factor?: number;

  /**
   * The quantity times the unit price for an additional service or product
   * or charge.
   */
  readonly net?: Money;

  /**
   * Unique Device Identifiers associated with this line item.
   */
  readonly udi?: Reference[];

  /**
   * Physical service site on the patient (limb, tooth, etc.).
   */
  readonly bodySite?: CodeableConcept;

  /**
   * A region or surface of the bodySite, e.g. limb region or tooth
   * surface(s).
   */
  readonly subSite?: CodeableConcept[];

  /**
   * A billed item may include goods or services provided in multiple
   * encounters.
   */
  readonly encounter?: Reference[];

  /**
   * The numbers associated with notes below which apply to the
   * adjudication of this item.
   */
  readonly noteNumber?: number[];

  /**
   * If this item is a group then the values here are a summary of the
   * adjudication of the detail items. If this item is a simple product or
   * service then this is the result of the adjudication of this item.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];

  /**
   * Second-tier of goods and services.
   */
  readonly detail?: ExplanationOfBenefitItemDetail[];
}

/**
 * If this item is a group then the values here are a summary of the
 * adjudication of the detail items. If this item is a simple product or
 * service then this is the result of the adjudication of this item.
 */
export interface ExplanationOfBenefitItemAdjudication {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A code to indicate the information type of this adjudication record.
   * Information types may include: the value submitted, maximum values or
   * percentages allowed or payable under the plan, amounts that the
   * patient is responsible for in-aggregate or pertaining to this item,
   * amounts paid by other coverages, and the benefit payable for this
   * item.
   */
  readonly category?: CodeableConcept;

  /**
   * A code supporting the understanding of the adjudication result and
   * explaining variance from expected amount.
   */
  readonly reason?: CodeableConcept;

  /**
   * Monetary amount associated with the category.
   */
  readonly amount?: Money;

  /**
   * A non-monetary value associated with the category. Mutually exclusive
   * to the amount element above.
   */
  readonly value?: number;
}

/**
 * Second-tier of goods and services.
 */
export interface ExplanationOfBenefitItemDetail {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A claim detail line. Either a simple (a product or service) or a
   * 'group' of sub-details which are simple items.
   */
  readonly sequence?: number;

  /**
   * The type of revenue or cost center providing the product and/or
   * service.
   */
  readonly revenue?: CodeableConcept;

  /**
   * Code to identify the general type of benefits under which products and
   * services are provided.
   */
  readonly category?: CodeableConcept;

  /**
   * When the value is a group code then this item collects a set of
   * related claim details, otherwise this contains the product, service,
   * drug or other billing code for the item.
   */
  readonly productOrService?: CodeableConcept;

  /**
   * Item typification or modifiers codes to convey additional context for
   * the product or service.
   */
  readonly modifier?: CodeableConcept[];

  /**
   * Identifies the program under which this may be recovered.
   */
  readonly programCode?: CodeableConcept[];

  /**
   * The number of repetitions of a service or product.
   */
  readonly quantity?: Quantity;

  /**
   * If the item is not a group then this is the fee for the product or
   * service, otherwise this is the total of the fees for the details of
   * the group.
   */
  readonly unitPrice?: Money;

  /**
   * A real number that represents a multiplier used in determining the
   * overall value of services delivered and/or goods received. The concept
   * of a Factor allows for a discount or surcharge multiplier to be
   * applied to a monetary amount.
   */
  readonly factor?: number;

  /**
   * The quantity times the unit price for an additional service or product
   * or charge.
   */
  readonly net?: Money;

  /**
   * Unique Device Identifiers associated with this line item.
   */
  readonly udi?: Reference[];

  /**
   * The numbers associated with notes below which apply to the
   * adjudication of this item.
   */
  readonly noteNumber?: number[];

  /**
   * The adjudication results.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];

  /**
   * Third-tier of goods and services.
   */
  readonly subDetail?: ExplanationOfBenefitItemDetailSubDetail[];
}

/**
 * Third-tier of goods and services.
 */
export interface ExplanationOfBenefitItemDetailSubDetail {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A claim detail line. Either a simple (a product or service) or a
   * 'group' of sub-details which are simple items.
   */
  readonly sequence?: number;

  /**
   * The type of revenue or cost center providing the product and/or
   * service.
   */
  readonly revenue?: CodeableConcept;

  /**
   * Code to identify the general type of benefits under which products and
   * services are provided.
   */
  readonly category?: CodeableConcept;

  /**
   * When the value is a group code then this item collects a set of
   * related claim details, otherwise this contains the product, service,
   * drug or other billing code for the item.
   */
  readonly productOrService?: CodeableConcept;

  /**
   * Item typification or modifiers codes to convey additional context for
   * the product or service.
   */
  readonly modifier?: CodeableConcept[];

  /**
   * Identifies the program under which this may be recovered.
   */
  readonly programCode?: CodeableConcept[];

  /**
   * The number of repetitions of a service or product.
   */
  readonly quantity?: Quantity;

  /**
   * If the item is not a group then this is the fee for the product or
   * service, otherwise this is the total of the fees for the details of
   * the group.
   */
  readonly unitPrice?: Money;

  /**
   * A real number that represents a multiplier used in determining the
   * overall value of services delivered and/or goods received. The concept
   * of a Factor allows for a discount or surcharge multiplier to be
   * applied to a monetary amount.
   */
  readonly factor?: number;

  /**
   * The quantity times the unit price for an additional service or product
   * or charge.
   */
  readonly net?: Money;

  /**
   * Unique Device Identifiers associated with this line item.
   */
  readonly udi?: Reference[];

  /**
   * The numbers associated with notes below which apply to the
   * adjudication of this item.
   */
  readonly noteNumber?: number[];

  /**
   * The adjudication results.
   */
  readonly adjudication?: ExplanationOfBenefitItemAdjudication[];
}

/**
 * The party to be reimbursed for cost of the products and services
 * according to the terms of the policy.
 */
export interface ExplanationOfBenefitPayee {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Type of Party to be reimbursed: Subscriber, provider, other.
   */
  readonly type?: CodeableConcept;

  /**
   * Reference to the individual or organization to whom any payment will
   * be made.
   */
  readonly party?: Reference;
}

/**
 * Payment details for the adjudication of the claim.
 */
export interface ExplanationOfBenefitPayment {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Whether this represents partial or complete payment of the benefits
   * payable.
   */
  readonly type?: CodeableConcept;

  /**
   * Total amount of all adjustments to this payment included in this
   * transaction which are not related to this claim's adjudication.
   */
  readonly adjustment?: Money;

  /**
   * Reason for the payment adjustment.
   */
  readonly adjustmentReason?: CodeableConcept;

  /**
   * Estimated date the payment will be issued or the actual issue date of
   * payment.
   */
  readonly date?: string;

  /**
   * Benefits payable less any payment adjustment.
   */
  readonly amount?: Money;

  /**
   * Issuer's unique identifier for the payment instrument.
   */
  readonly identifier?: Identifier;
}

/**
 * Procedures performed on the patient relevant to the billing items with
 * the claim.
 */
export interface ExplanationOfBenefitProcedure {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A number to uniquely identify procedure entries.
   */
  readonly sequence?: number;

  /**
   * When the condition was observed or the relative ranking.
   */
  readonly type?: CodeableConcept[];

  /**
   * Date and optionally time the procedure was performed.
   */
  readonly date?: string;

  /**
   * The code or reference to a Procedure resource which identifies the
   * clinical intervention performed.
   */
  readonly procedureCodeableConcept?: CodeableConcept;

  /**
   * The code or reference to a Procedure resource which identifies the
   * clinical intervention performed.
   */
  readonly procedureReference?: Reference;

  /**
   * Unique Device Identifiers associated with this line item.
   */
  readonly udi?: Reference[];
}

/**
 * A note that describes or explains adjudication results in a human
 * readable form.
 */
export interface ExplanationOfBenefitProcessNote {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A number to uniquely identify a note entry.
   */
  readonly number?: number;

  /**
   * The business purpose of the note text.
   */
  readonly type?: string;

  /**
   * The explanation or description associated with the processing.
   */
  readonly text?: string;

  /**
   * A code to define the language used in the text of the note.
   */
  readonly language?: CodeableConcept;
}

/**
 * Other claims which are related to this claim such as prior submissions
 * or claims for related services or for the same event.
 */
export interface ExplanationOfBenefitRelated {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * Reference to a related claim.
   */
  readonly claim?: Reference;

  /**
   * A code to convey how the claims are related.
   */
  readonly relationship?: CodeableConcept;

  /**
   * An alternate organizational reference to the case or file to which
   * this particular claim pertains.
   */
  readonly reference?: Identifier;
}

/**
 * Additional information codes regarding exceptions, special
 * considerations, the condition, situation, prior or concurrent issues.
 */
export interface ExplanationOfBenefitSupportingInfo {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A number to uniquely identify supporting information entries.
   */
  readonly sequence?: number;

  /**
   * The general class of the information supplied: information; exception;
   * accident, employment; onset, etc.
   */
  readonly category?: CodeableConcept;

  /**
   * System and code pertaining to the specific information regarding
   * special conditions relating to the setting, treatment or patient  for
   * which care is sought.
   */
  readonly code?: CodeableConcept;

  /**
   * The date when or period to which this information refers.
   */
  readonly timingDate?: string;

  /**
   * The date when or period to which this information refers.
   */
  readonly timingPeriod?: Period;

  /**
   * Additional data or information such as resources, documents, images
   * etc. including references to the data or the actual inclusion of the
   * data.
   */
  readonly valueBoolean?: boolean;

  /**
   * Additional data or information such as resources, documents, images
   * etc. including references to the data or the actual inclusion of the
   * data.
   */
  readonly valueString?: string;

  /**
   * Additional data or information such as resources, documents, images
   * etc. including references to the data or the actual inclusion of the
   * data.
   */
  readonly valueQuantity?: Quantity;

  /**
   * Additional data or information such as resources, documents, images
   * etc. including references to the data or the actual inclusion of the
   * data.
   */
  readonly valueAttachment?: Attachment;

  /**
   * Additional data or information such as resources, documents, images
   * etc. including references to the data or the actual inclusion of the
   * data.
   */
  readonly valueReference?: Reference;

  /**
   * Provides the reason in the situation where a reason code is required
   * in addition to the content.
   */
  readonly reason?: Coding;
}

/**
 * Categorized monetary totals for the adjudication.
 */
export interface ExplanationOfBenefitTotal {

  /**
   * Unique id for the element within a resource (for internal references).
   * This may be any string value that does not contain spaces.
   */
  readonly id?: string;

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element. To make the use of extensions
   * safe and manageable, there is a strict set of governance  applied to
   * the definition and use of extensions. Though any implementer can
   * define an extension, there is a set of requirements that SHALL be met
   * as part of the definition of the extension.
   */
  readonly extension?: Extension[];

  /**
   * May be used to represent additional information that is not part of
   * the basic definition of the element and that modifies the
   * understanding of the element in which it is contained and/or the
   * understanding of the containing element's descendants. Usually
   * modifier elements provide negation or qualification. To make the use
   * of extensions safe and manageable, there is a strict set of governance
   * applied to the definition and use of extensions. Though any
   * implementer can define an extension, there is a set of requirements
   * that SHALL be met as part of the definition of the extension.
   * Applications processing a resource are required to check for modifier
   * extensions.
   *
   * Modifier extensions SHALL NOT change the meaning of any elements on
   * Resource or DomainResource (including cannot change the meaning of
   * modifierExtension itself).
   */
  readonly modifierExtension?: Extension[];

  /**
   * A code to indicate the information type of this adjudication record.
   * Information types may include: the value submitted, maximum values or
   * percentages allowed or payable under the plan, amounts that the
   * patient is responsible for in aggregate or pertaining to this item,
   * amounts paid by other coverages, and the benefit payable for this
   * item.
   */
  readonly category?: CodeableConcept;

  /**
   * Monetary total amount associated with the category.
   */
  readonly amount?: Money;
}
