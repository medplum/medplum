/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

export async function up(knex) {

  await knex.schema.createTable('Account', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('name', 128);
    t.string('owner', 128);
    t.string('patient', 128);
    t.date('period');
    t.string('status', 128);
    t.specificType('subject', 'varchar(128)[]');
    t.string('type', 128);
  });

  await knex.schema.createTable('Account_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ActivityDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('ActivityDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AdverseEvent', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('actuality', 128);
    t.specificType('category', 'varchar(128)[]');
    t.date('date');
    t.string('event', 128);
    t.string('location', 128);
    t.string('recorder', 128);
    t.string('resultingcondition', 128);
    t.string('seriousness', 128);
    t.string('severity', 128);
    t.specificType('study', 'varchar(128)[]');
    t.string('subject', 128);
    t.string('substance', 128);
  });

  await knex.schema.createTable('AdverseEvent_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AllergyIntolerance', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('asserter', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('clinicalStatus', 128);
    t.string('code', 128);
    t.string('criticality', 128);
    t.date('date');
    t.date('lastDate');
    t.string('manifestation', 128);
    t.date('onset');
    t.string('patient', 128);
    t.string('recorder', 128);
    t.string('route', 128);
    t.string('severity', 128);
    t.string('type', 128);
    t.string('verificationStatus', 128);
  });

  await knex.schema.createTable('AllergyIntolerance_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Appointment', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('actor', 128);
    t.string('appointmentType', 128);
    t.string('basedOn', 128);
    t.date('date');
    t.string('location', 128);
    t.string('partStatus', 128);
    t.string('patient', 128);
    t.string('practitioner', 128);
    t.string('reasonCode', 128);
    t.string('reasonReference', 128);
    t.string('serviceCategory', 128);
    t.string('serviceType', 128);
    t.specificType('slot', 'varchar(128)[]');
    t.specificType('specialty', 'varchar(128)[]');
    t.string('status', 128);
    t.string('supportingInfo', 128);
  });

  await knex.schema.createTable('Appointment_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AppointmentResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('actor', 128);
    t.string('appointment', 128);
    t.string('location', 128);
    t.string('partStatus', 128);
    t.string('patient', 128);
    t.string('practitioner', 128);
  });

  await knex.schema.createTable('AppointmentResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('AuditEvent', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('action', 128);
    t.string('address', 128);
    t.specificType('agent', 'varchar(128)[]');
    t.string('agentName', 128);
    t.string('agentRole', 128);
    t.string('altid', 128);
    t.date('date');
    t.specificType('entity', 'varchar(128)[]');
    t.string('entityName', 128);
    t.string('entityRole', 128);
    t.string('entityType', 128);
    t.string('outcome', 128);
    t.string('patient', 128);
    t.string('policy', 128);
    t.string('site', 128);
    t.string('source', 128);
    t.specificType('subtype', 'varchar(128)[]');
    t.string('type', 128);
  });

  await knex.schema.createTable('AuditEvent_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Basic', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('author', 128);
    t.string('code', 128);
    t.date('created');
    t.string('patient', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('Basic_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Binary', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('Binary_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('BiologicallyDerivedProduct', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('BiologicallyDerivedProduct_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('BodyStructure', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('location', 128);
    t.string('morphology', 128);
    t.string('patient', 128);
  });

  await knex.schema.createTable('BodyStructure_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Bundle', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composition', 128);
    t.string('message', 128);
    t.date('timestamp');
    t.string('type', 128);
  });

  await knex.schema.createTable('Bundle_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CapabilityStatement', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.string('fhirversion', 128);
    t.specificType('format', 'varchar(128)[]');
    t.string('guide', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('mode', 128);
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('resource', 128);
    t.string('resourceProfile', 128);
    t.string('securityService', 128);
    t.string('software', 128);
    t.string('status', 128);
    t.string('supportedProfile', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('CapabilityStatement_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CarePlan', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('activityCode', 128);
    t.date('activityDate');
    t.string('activityReference', 128);
    t.string('basedOn', 128);
    t.string('careTeam', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('condition', 128);
    t.string('encounter', 128);
    t.specificType('goal', 'varchar(128)[]');
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.string('intent', 128);
    t.string('partOf', 128);
    t.string('performer', 128);
    t.specificType('replaces', 'varchar(128)[]');
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('CarePlan_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CareTeam', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('encounter', 128);
    t.specificType('participant', 'varchar(128)[]');
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('CareTeam_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CatalogEntry', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('CatalogEntry_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ChargeItem', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.specificType('account', 'varchar(128)[]');
    t.string('code', 128);
    t.string('context', 128);
    t.date('enteredDate');
    t.string('enterer', 128);
    t.string('factorOverride', 128);
    t.date('occurrence');
    t.string('patient', 128);
    t.string('performerActor', 128);
    t.string('performerFunction', 128);
    t.string('performingOrganization', 128);
    t.string('priceOverride', 128);
    t.string('quantity', 128);
    t.string('requestingOrganization', 128);
    t.specificType('service', 'varchar(128)[]');
    t.string('subject', 128);
  });

  await knex.schema.createTable('ChargeItem_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ChargeItemDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('ChargeItemDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Claim', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('careTeam', 128);
    t.date('created');
    t.string('detailUdi', 128);
    t.string('encounter', 128);
    t.string('enterer', 128);
    t.string('facility', 128);
    t.string('insurer', 128);
    t.string('itemUdi', 128);
    t.string('patient', 128);
    t.string('payee', 128);
    t.string('priority', 128);
    t.string('procedureUdi', 128);
    t.string('provider', 128);
    t.string('status', 128);
    t.string('subdetailUdi', 128);
    t.string('use', 128);
  });

  await knex.schema.createTable('Claim_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ClaimResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('created');
    t.string('disposition', 128);
    t.string('insurer', 128);
    t.string('outcome', 128);
    t.string('patient', 128);
    t.date('paymentDate');
    t.string('request', 128);
    t.string('requestor', 128);
    t.string('status', 128);
    t.string('use', 128);
  });

  await knex.schema.createTable('ClaimResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ClinicalImpression', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('assessor', 128);
    t.string('encounter', 128);
    t.string('findingCode', 128);
    t.string('findingRef', 128);
    t.specificType('investigation', 'varchar(128)[]');
    t.string('previous', 128);
    t.specificType('problem', 'varchar(128)[]');
    t.string('status', 128);
    t.string('subject', 128);
    t.string('supportingInfo', 128);
  });

  await knex.schema.createTable('ClinicalImpression_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CodeSystem', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('code', 128);
    t.string('contentMode', 128);
    t.string('language', 128);
    t.string('supplements', 128);
    t.string('system', 128);
  });

  await knex.schema.createTable('CodeSystem_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Communication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('basedOn', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('encounter', 128);
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.specificType('medium', 'varchar(128)[]');
    t.string('partOf', 128);
    t.string('patient', 128);
    t.date('received');
    t.specificType('recipient', 'varchar(128)[]');
    t.string('sender', 128);
    t.date('sent');
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('Communication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CommunicationRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('authored');
    t.string('basedOn', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('encounter', 128);
    t.string('groupIdentifier', 128);
    t.specificType('medium', 'varchar(128)[]');
    t.date('occurrence');
    t.string('patient', 128);
    t.string('priority', 128);
    t.specificType('recipient', 'varchar(128)[]');
    t.specificType('replaces', 'varchar(128)[]');
    t.string('requester', 128);
    t.string('sender', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('CommunicationRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CompartmentDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('code', 128);
    t.specificType('resource', 'varchar(128)[]');
  });

  await knex.schema.createTable('CompartmentDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Composition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('type', 128);
    t.specificType('attester', 'varchar(128)[]');
    t.specificType('author', 'varchar(128)[]');
    t.specificType('category', 'varchar(128)[]');
    t.string('confidentiality', 128);
    t.string('context', 128);
    t.string('encounter', 128);
    t.string('entry', 128);
    t.date('period');
    t.string('relatedId', 128);
    t.string('relatedRef', 128);
    t.specificType('section', 'varchar(128)[]');
    t.string('status', 128);
    t.string('subject', 128);
    t.string('title', 128);
  });

  await knex.schema.createTable('Composition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ConceptMap', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('dependson', 128);
    t.string('other', 128);
    t.string('product', 128);
    t.string('source', 128);
    t.string('sourceCode', 128);
    t.string('sourceSystem', 128);
    t.string('sourceUri', 128);
    t.string('target', 128);
    t.string('targetCode', 128);
    t.string('targetSystem', 128);
    t.string('targetUri', 128);
  });

  await knex.schema.createTable('ConceptMap_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Condition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('abatementAge', 128);
    t.date('abatementDate');
    t.string('abatementString', 128);
    t.string('asserter', 128);
    t.string('bodySite', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('clinicalStatus', 128);
    t.string('encounter', 128);
    t.specificType('evidence', 'varchar(128)[]');
    t.string('evidenceDetail', 128);
    t.string('onsetAge', 128);
    t.date('onsetDate');
    t.string('onsetInfo', 128);
    t.date('recordedDate');
    t.string('severity', 128);
    t.specificType('stage', 'varchar(128)[]');
    t.string('subject', 128);
    t.string('verificationStatus', 128);
  });

  await knex.schema.createTable('Condition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Consent', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('action', 128);
    t.string('actor', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('consentor', 128);
    t.string('data', 128);
    t.specificType('organization', 'varchar(128)[]');
    t.date('period');
    t.string('purpose', 128);
    t.string('scope', 128);
    t.string('securityLabel', 128);
    t.string('sourceReference', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('Consent_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Contract', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('authority', 'varchar(128)[]');
    t.specificType('domain', 'varchar(128)[]');
    t.string('instantiates', 128);
    t.date('issued');
    t.string('patient', 128);
    t.specificType('signer', 'varchar(128)[]');
    t.string('status', 128);
    t.specificType('subject', 'varchar(128)[]');
    t.string('url', 128);
  });

  await knex.schema.createTable('Contract_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Coverage', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('beneficiary', 128);
    t.string('classType', 128);
    t.string('classValue', 128);
    t.string('dependent', 128);
    t.string('patient', 128);
    t.specificType('payor', 'varchar(128)[]');
    t.string('policyHolder', 128);
    t.string('status', 128);
    t.string('subscriber', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('Coverage_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CoverageEligibilityRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('created');
    t.string('enterer', 128);
    t.string('facility', 128);
    t.string('patient', 128);
    t.string('provider', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('CoverageEligibilityRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('CoverageEligibilityResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('created');
    t.string('disposition', 128);
    t.string('insurer', 128);
    t.string('outcome', 128);
    t.string('patient', 128);
    t.string('request', 128);
    t.string('requestor', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('CoverageEligibilityResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DetectedIssue', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('author', 128);
    t.string('code', 128);
    t.date('identified');
    t.specificType('implicated', 'varchar(128)[]');
  });

  await knex.schema.createTable('DetectedIssue_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Device', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('deviceName', 128);
    t.string('location', 128);
    t.string('manufacturer', 128);
    t.string('model', 128);
    t.string('organization', 128);
    t.string('patient', 128);
    t.string('status', 128);
    t.string('type', 128);
    t.string('udiCarrier', 128);
    t.string('udiDi', 128);
    t.string('url', 128);
  });

  await knex.schema.createTable('Device_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('parent', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('DeviceDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceMetric', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('category', 128);
    t.string('parent', 128);
    t.string('source', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('DeviceMetric_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('encounter', 128);
    t.date('authoredOn');
    t.string('basedOn', 128);
    t.string('device', 128);
    t.date('eventDate');
    t.string('groupIdentifier', 128);
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.specificType('insurance', 'varchar(128)[]');
    t.string('intent', 128);
    t.string('performer', 128);
    t.string('priorRequest', 128);
    t.string('requester', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('DeviceRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DeviceUseStatement', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('device', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('DeviceUseStatement_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DiagnosticReport', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.date('date');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('basedOn', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('conclusion', 128);
    t.date('issued');
    t.specificType('media', 'varchar(128)[]');
    t.specificType('performer', 'varchar(128)[]');
    t.specificType('result', 'varchar(128)[]');
    t.string('resultsInterpreter', 128);
    t.specificType('specimen', 'varchar(128)[]');
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('DiagnosticReport_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DocumentManifest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('type', 128);
    t.specificType('author', 'varchar(128)[]');
    t.date('created');
    t.string('description', 128);
    t.string('item', 128);
    t.specificType('recipient', 'varchar(128)[]');
    t.string('relatedId', 128);
    t.string('relatedRef', 128);
    t.string('source', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('DocumentManifest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('DocumentReference', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('type', 128);
    t.string('encounter', 128);
    t.string('authenticator', 128);
    t.specificType('author', 'varchar(128)[]');
    t.specificType('category', 'varchar(128)[]');
    t.string('contenttype', 128);
    t.string('custodian', 128);
    t.date('date');
    t.string('description', 128);
    t.string('event', 128);
    t.string('facility', 128);
    t.string('format', 128);
    t.string('language', 128);
    t.string('location', 128);
    t.date('period');
    t.string('related', 128);
    t.string('relatesto', 128);
    t.string('relation', 128);
    t.string('securityLabel', 128);
    t.string('setting', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.string('relationship', 128);
  });

  await knex.schema.createTable('DocumentReference_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EffectEvidenceSynthesis', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('EffectEvidenceSynthesis_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Encounter', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.specificType('type', 'varchar(128)[]');
    t.specificType('account', 'varchar(128)[]');
    t.specificType('appointment', 'varchar(128)[]');
    t.string('basedOn', 128);
    t.string('class', 128);
    t.specificType('diagnosis', 'varchar(128)[]');
    t.string('episodeOfCare', 128);
    t.string('length', 128);
    t.specificType('location', 'varchar(128)[]');
    t.date('locationPeriod');
    t.string('partOf', 128);
    t.specificType('participant', 'varchar(128)[]');
    t.string('participantType', 128);
    t.string('practitioner', 128);
    t.string('reasonCode', 128);
    t.string('reasonReference', 128);
    t.string('serviceProvider', 128);
    t.string('specialArrangement', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('Encounter_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Endpoint', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('connectionType', 128);
    t.string('name', 128);
    t.string('organization', 128);
    t.string('payloadType', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('Endpoint_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EnrollmentRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('EnrollmentRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EnrollmentResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('request', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('EnrollmentResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EpisodeOfCare', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.specificType('type', 'varchar(128)[]');
    t.string('careManager', 128);
    t.string('condition', 128);
    t.string('incomingReferral', 128);
    t.string('organization', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('EpisodeOfCare_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EventDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('EventDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Evidence', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('Evidence_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('EvidenceVariable', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('EvidenceVariable_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ExampleScenario', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('ExampleScenario_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ExplanationOfBenefit', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('careTeam', 128);
    t.string('claim', 128);
    t.string('coverage', 128);
    t.date('created');
    t.string('detailUdi', 128);
    t.string('disposition', 128);
    t.string('encounter', 128);
    t.string('enterer', 128);
    t.string('facility', 128);
    t.string('itemUdi', 128);
    t.string('patient', 128);
    t.string('payee', 128);
    t.string('procedureUdi', 128);
    t.string('provider', 128);
    t.string('status', 128);
    t.string('subdetailUdi', 128);
  });

  await knex.schema.createTable('ExplanationOfBenefit_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('FamilyMemberHistory', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.date('date');
    t.string('patient', 128);
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.string('relationship', 128);
    t.string('sex', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('FamilyMemberHistory_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Flag', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('author', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('Flag_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Goal', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('achievementStatus', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('lifecycleStatus', 128);
    t.date('startDate');
    t.string('subject', 128);
    t.date('targetDate');
  });

  await knex.schema.createTable('Goal_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('GraphDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('start', 128);
  });

  await knex.schema.createTable('GraphDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Group', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('actual', 128);
    t.specificType('characteristic', 'varchar(128)[]');
    t.string('code', 128);
    t.string('exclude', 128);
    t.string('managingEntity', 128);
    t.specificType('member', 'varchar(128)[]');
    t.string('type', 128);
    t.string('value', 128);
    t.string('characteristicValue', 128);
  });

  await knex.schema.createTable('Group_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('GuidanceResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('patient', 128);
    t.string('request', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('GuidanceResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('HealthcareService', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.specificType('characteristic', 'varchar(128)[]');
    t.string('coverageArea', 128);
    t.specificType('endpoint', 'varchar(128)[]');
    t.specificType('location', 'varchar(128)[]');
    t.string('name', 128);
    t.string('organization', 128);
    t.specificType('program', 'varchar(128)[]');
    t.string('serviceCategory', 128);
    t.string('serviceType', 128);
    t.specificType('specialty', 'varchar(128)[]');
  });

  await knex.schema.createTable('HealthcareService_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImagingStudy', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('basedon', 128);
    t.string('bodysite', 128);
    t.string('dicomClass', 128);
    t.string('encounter', 128);
    t.specificType('endpoint', 'varchar(128)[]');
    t.string('instance', 128);
    t.specificType('interpreter', 'varchar(128)[]');
    t.specificType('modality', 'varchar(128)[]');
    t.string('performer', 128);
    t.string('reason', 128);
    t.string('referrer', 128);
    t.specificType('series', 'varchar(128)[]');
    t.date('started');
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('ImagingStudy_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Immunization', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('location', 128);
    t.string('lotNumber', 128);
    t.string('manufacturer', 128);
    t.specificType('performer', 'varchar(128)[]');
    t.specificType('reaction', 'varchar(128)[]');
    t.date('reactionDate');
    t.string('reasonCode', 128);
    t.string('reasonReference', 128);
    t.string('series', 128);
    t.string('status', 128);
    t.string('statusReason', 128);
    t.string('targetDisease', 128);
    t.string('vaccineCode', 128);
  });

  await knex.schema.createTable('Immunization_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImmunizationEvaluation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('doseStatus', 128);
    t.string('immunizationEvent', 128);
    t.string('patient', 128);
    t.string('status', 128);
    t.string('targetDisease', 128);
  });

  await knex.schema.createTable('ImmunizationEvaluation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImmunizationRecommendation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('information', 128);
    t.string('patient', 128);
    t.string('status', 128);
    t.string('support', 128);
    t.string('targetDisease', 128);
    t.string('vaccineType', 128);
  });

  await knex.schema.createTable('ImmunizationRecommendation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ImplementationGuide', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('dependsOn', 128);
    t.string('experimental', 128);
    t.specificType('global', 'varchar(128)[]');
    t.string('resource', 128);
  });

  await knex.schema.createTable('ImplementationGuide_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('InsurancePlan', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('administeredBy', 128);
    t.specificType('endpoint', 'varchar(128)[]');
    t.string('name', 128);
    t.string('ownedBy', 128);
    t.string('phonetic', 128);
    t.string('status', 128);
    t.specificType('type', 'varchar(128)[]');
  });

  await knex.schema.createTable('InsurancePlan_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Invoice', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('account', 128);
    t.date('date');
    t.string('issuer', 128);
    t.specificType('participant', 'varchar(128)[]');
    t.string('participantRole', 128);
    t.string('patient', 128);
    t.string('recipient', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.string('totalgross', 128);
    t.string('totalnet', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('Invoice_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Library', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('contentType', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('type', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('Library_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Linkage', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('author', 128);
    t.specificType('item', 'varchar(128)[]');
    t.string('source', 128);
  });

  await knex.schema.createTable('Linkage_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('List', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.date('date');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('emptyReason', 128);
    t.string('item', 128);
    t.string('notes', 128);
    t.string('source', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.string('title', 128);
  });

  await knex.schema.createTable('List_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Location', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('endpoint', 'varchar(128)[]');
    t.string('name', 128);
    t.string('near', 128);
    t.string('operationalStatus', 128);
    t.string('organization', 128);
    t.string('partof', 128);
    t.string('status', 128);
    t.specificType('type', 'varchar(128)[]');
  });

  await knex.schema.createTable('Location_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Measure', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('Measure_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MeasureReport', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('evaluatedResource', 128);
    t.string('measure', 128);
    t.string('patient', 128);
    t.date('period');
    t.string('reporter', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('MeasureReport_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Media', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('basedOn', 128);
    t.date('created');
    t.string('device', 128);
    t.string('encounter', 128);
    t.string('modality', 128);
    t.string('operator', 128);
    t.string('patient', 128);
    t.string('site', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.string('type', 128);
    t.string('view', 128);
  });

  await knex.schema.createTable('Media_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Medication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('code', 128);
    t.date('expirationDate');
    t.string('form', 128);
    t.specificType('ingredient', 'varchar(128)[]');
    t.string('ingredientCode', 128);
    t.string('lotNumber', 128);
    t.string('manufacturer', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('Medication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationAdministration', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('context', 128);
    t.specificType('device', 'varchar(128)[]');
    t.date('effectiveTime');
    t.string('medication', 128);
    t.specificType('performer', 'varchar(128)[]');
    t.string('reasonGiven', 128);
    t.string('reasonNotGiven', 128);
    t.string('request', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('MedicationAdministration_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationDispense', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('medication', 128);
    t.string('status', 128);
    t.string('context', 128);
    t.string('destination', 128);
    t.specificType('performer', 'varchar(128)[]');
    t.string('prescription', 128);
    t.specificType('receiver', 'varchar(128)[]');
    t.string('responsibleparty', 128);
    t.string('subject', 128);
    t.string('type', 128);
    t.date('whenhandedover');
    t.date('whenprepared');
  });

  await knex.schema.createTable('MedicationDispense_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationKnowledge', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('classification', 128);
    t.string('classificationType', 128);
    t.string('code', 128);
    t.string('doseform', 128);
    t.specificType('ingredient', 'varchar(128)[]');
    t.string('ingredientCode', 128);
    t.string('manufacturer', 128);
    t.string('monitoringProgramName', 128);
    t.string('monitoringProgramType', 128);
    t.specificType('monograph', 'varchar(128)[]');
    t.string('monographType', 128);
    t.string('sourceCost', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('MedicationKnowledge_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('medication', 128);
    t.string('status', 128);
    t.date('authoredon');
    t.specificType('category', 'varchar(128)[]');
    t.date('date');
    t.string('encounter', 128);
    t.string('intendedDispenser', 128);
    t.string('intendedPerformer', 128);
    t.string('intendedPerformertype', 128);
    t.string('intent', 128);
    t.string('priority', 128);
    t.string('requester', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('MedicationRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicationStatement', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('medication', 128);
    t.string('status', 128);
    t.string('category', 128);
    t.string('context', 128);
    t.date('effective');
    t.string('partOf', 128);
    t.string('source', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('MedicationStatement_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProduct', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('name', 'varchar(128)[]');
    t.string('nameLanguage', 128);
  });

  await knex.schema.createTable('MedicinalProduct_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductAuthorization', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('country', 'varchar(128)[]');
    t.string('holder', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('MedicinalProductAuthorization_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductContraindication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'varchar(128)[]');
  });

  await knex.schema.createTable('MedicinalProductContraindication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductIndication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'varchar(128)[]');
  });

  await knex.schema.createTable('MedicinalProductIndication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductIngredient', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('MedicinalProductIngredient_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductInteraction', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'varchar(128)[]');
  });

  await knex.schema.createTable('MedicinalProductInteraction_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductManufactured', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('MedicinalProductManufactured_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductPackaged', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'varchar(128)[]');
  });

  await knex.schema.createTable('MedicinalProductPackaged_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductPharmaceutical', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('route', 128);
    t.string('targetSpecies', 128);
  });

  await knex.schema.createTable('MedicinalProductPharmaceutical_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MedicinalProductUndesirableEffect', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('subject', 'varchar(128)[]');
  });

  await knex.schema.createTable('MedicinalProductUndesirableEffect_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MessageDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('category', 128);
    t.string('event', 128);
    t.specificType('focus', 'varchar(128)[]');
    t.specificType('parent', 'varchar(128)[]');
  });

  await knex.schema.createTable('MessageDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MessageHeader', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('author', 128);
    t.string('code', 128);
    t.specificType('destination', 'varchar(128)[]');
    t.string('destinationUri', 128);
    t.string('enterer', 128);
    t.string('event', 128);
    t.specificType('focus', 'varchar(128)[]');
    t.string('receiver', 128);
    t.string('responseId', 128);
    t.string('responsible', 128);
    t.string('sender', 128);
    t.string('source', 128);
    t.string('sourceUri', 128);
    t.string('target', 128);
  });

  await knex.schema.createTable('MessageHeader_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('MolecularSequence', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('chromosome', 128);
    t.string('patient', 128);
    t.string('referenceseqid', 128);
    t.string('type', 128);
    t.string('variantEnd', 128);
    t.string('variantStart', 128);
    t.string('windowEnd', 128);
    t.string('windowStart', 128);
    t.string('chromosomeVariantCoordinate', 128);
    t.string('chromosomeWindowCoordinate', 128);
    t.string('referenceseqidVariantCoordinate', 128);
    t.string('referenceseqidWindowCoordinate', 128);
  });

  await knex.schema.createTable('MolecularSequence_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('NamingSystem', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.specificType('contact', 'varchar(128)[]');
    t.string('idType', 128);
    t.string('kind', 128);
    t.date('period');
    t.string('responsible', 128);
    t.string('telecom', 128);
    t.string('type', 128);
    t.string('value', 128);
  });

  await knex.schema.createTable('NamingSystem_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('NutritionOrder', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('additive', 128);
    t.date('datetime');
    t.string('formula', 128);
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.string('oraldiet', 128);
    t.string('provider', 128);
    t.string('status', 128);
    t.specificType('supplement', 'varchar(128)[]');
  });

  await knex.schema.createTable('NutritionOrder_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Observation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.date('date');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('basedOn', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('comboCode', 128);
    t.string('comboDataAbsentReason', 128);
    t.string('comboValueConcept', 128);
    t.string('comboValueQuantity', 128);
    t.string('componentCode', 128);
    t.string('componentDataAbsentReason', 128);
    t.string('componentValueConcept', 128);
    t.string('componentValueQuantity', 128);
    t.string('dataAbsentReason', 128);
    t.string('derivedFrom', 128);
    t.string('device', 128);
    t.specificType('focus', 'varchar(128)[]');
    t.string('hasMember', 128);
    t.string('method', 128);
    t.string('partOf', 128);
    t.specificType('performer', 'varchar(128)[]');
    t.string('specimen', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.string('valueConcept', 128);
    t.date('valueDate');
    t.string('valueQuantity', 128);
    t.string('valueString', 128);
    t.string('codeValueConcept', 128);
    t.string('codeValueDate', 128);
    t.string('codeValueQuantity', 128);
    t.string('codeValueString', 128);
    t.string('comboCodeValueConcept', 128);
    t.string('comboCodeValueQuantity', 128);
    t.string('componentCodeValueConcept', 128);
    t.string('componentCodeValueQuantity', 128);
  });

  await knex.schema.createTable('Observation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ObservationDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('ObservationDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('OperationDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('base', 128);
    t.string('code', 128);
    t.string('inputProfile', 128);
    t.string('instance', 128);
    t.string('kind', 128);
    t.string('outputProfile', 128);
    t.string('system', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('OperationDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('OperationOutcome', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('OperationOutcome_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Organization', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.specificType('endpoint', 'varchar(128)[]');
    t.string('name', 128);
    t.string('partof', 128);
    t.string('phonetic', 128);
    t.specificType('type', 'varchar(128)[]');
  });

  await knex.schema.createTable('Organization_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('OrganizationAffiliation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.date('date');
    t.specificType('endpoint', 'varchar(128)[]');
    t.specificType('location', 'varchar(128)[]');
    t.specificType('network', 'varchar(128)[]');
    t.string('participatingOrganization', 128);
    t.string('primaryOrganization', 128);
    t.string('role', 128);
    t.string('service', 128);
    t.specificType('specialty', 'varchar(128)[]');
  });

  await knex.schema.createTable('OrganizationAffiliation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Parameters', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('Parameters_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Patient', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.boolean('active');
    t.date('birthdate');
    t.date('deathDate');
    t.string('deceased', 128);
    t.string('gender', 128);
    t.string('generalPractitioner', 128);
    t.string('language', 128);
    t.specificType('link', 'varchar(128)[]');
    t.string('organization', 128);
    t.string('phonetic', 128);
  });

  await knex.schema.createTable('Patient_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PaymentNotice', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.date('created');
    t.string('paymentStatus', 128);
    t.string('provider', 128);
    t.string('request', 128);
    t.string('response', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('PaymentNotice_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PaymentReconciliation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.date('created');
    t.string('disposition', 128);
    t.string('outcome', 128);
    t.string('paymentIssuer', 128);
    t.string('request', 128);
    t.string('requestor', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('PaymentReconciliation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Person', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('birthdate');
    t.string('gender', 128);
    t.string('phonetic', 128);
    t.specificType('link', 'varchar(128)[]');
    t.string('organization', 128);
    t.string('patient', 128);
    t.string('practitioner', 128);
    t.string('relatedperson', 128);
  });

  await knex.schema.createTable('Person_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PlanDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('definition', 128);
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('type', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('PlanDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Practitioner', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('gender', 128);
    t.string('phonetic', 128);
    t.boolean('active');
    t.specificType('communication', 'varchar(128)[]');
  });

  await knex.schema.createTable('Practitioner_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PractitionerRole', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
    t.date('date');
    t.specificType('endpoint', 'varchar(128)[]');
    t.specificType('location', 'varchar(128)[]');
    t.string('organization', 128);
    t.string('practitioner', 128);
    t.string('role', 128);
    t.string('service', 128);
    t.specificType('specialty', 'varchar(128)[]');
  });

  await knex.schema.createTable('PractitionerRole_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Procedure', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.date('date');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('basedOn', 128);
    t.string('category', 128);
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.string('location', 128);
    t.string('partOf', 128);
    t.specificType('performer', 'varchar(128)[]');
    t.string('reasonCode', 128);
    t.string('reasonReference', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('Procedure_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Provenance', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.specificType('agent', 'varchar(128)[]');
    t.string('agentRole', 128);
    t.string('agentType', 128);
    t.specificType('entity', 'varchar(128)[]');
    t.string('location', 128);
    t.string('patient', 128);
    t.date('recorded');
    t.string('signatureType', 128);
    t.specificType('target', 'varchar(128)[]');
    t.date('when');
  });

  await knex.schema.createTable('Provenance_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Questionnaire', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('code', 'varchar(128)[]');
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('definition', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('subjectType', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('Questionnaire_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('QuestionnaireResponse', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('author', 128);
    t.date('authored');
    t.string('basedOn', 128);
    t.string('encounter', 128);
    t.string('partOf', 128);
    t.string('patient', 128);
    t.string('questionnaire', 128);
    t.string('source', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('QuestionnaireResponse_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RelatedPerson', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('birthdate');
    t.string('gender', 128);
    t.string('phonetic', 128);
    t.boolean('active');
    t.string('patient', 128);
    t.specificType('relationship', 'varchar(128)[]');
  });

  await knex.schema.createTable('RelatedPerson_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RequestGroup', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('author', 128);
    t.date('authored');
    t.string('code', 128);
    t.string('encounter', 128);
    t.string('groupIdentifier', 128);
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.string('intent', 128);
    t.string('participant', 128);
    t.string('patient', 128);
    t.string('priority', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('RequestGroup_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('ResearchDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchElementDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('composedOf', 128);
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('dependsOn', 128);
    t.string('derivedFrom', 128);
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('predecessor', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('successor', 128);
    t.string('title', 128);
    t.specificType('topic', 'varchar(128)[]');
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('ResearchElementDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchStudy', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('category', 'varchar(128)[]');
    t.date('date');
    t.specificType('focus', 'varchar(128)[]');
    t.specificType('keyword', 'varchar(128)[]');
    t.specificType('location', 'varchar(128)[]');
    t.string('partof', 128);
    t.string('principalinvestigator', 128);
    t.specificType('protocol', 'varchar(128)[]');
    t.specificType('site', 'varchar(128)[]');
    t.string('sponsor', 128);
    t.string('status', 128);
    t.string('title', 128);
  });

  await knex.schema.createTable('ResearchStudy_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ResearchSubject', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('individual', 128);
    t.string('patient', 128);
    t.string('status', 128);
    t.string('study', 128);
  });

  await knex.schema.createTable('ResearchSubject_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RiskAssessment', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.string('condition', 128);
    t.string('method', 128);
    t.string('performer', 128);
    t.string('probability', 128);
    t.string('risk', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('RiskAssessment_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('RiskEvidenceSynthesis', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.date('effective');
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('RiskEvidenceSynthesis_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Schedule', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.boolean('active');
    t.specificType('actor', 'varchar(128)[]');
    t.date('date');
    t.string('serviceCategory', 128);
    t.string('serviceType', 128);
    t.specificType('specialty', 'varchar(128)[]');
  });

  await knex.schema.createTable('Schedule_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SearchParameter', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.specificType('base', 'varchar(128)[]');
    t.string('code', 128);
    t.specificType('component', 'varchar(128)[]');
    t.string('derivedFrom', 128);
    t.specificType('target', 'varchar(128)[]');
    t.string('type', 128);
  });

  await knex.schema.createTable('SearchParameter_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ServiceRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('code', 128);
    t.string('patient', 128);
    t.string('encounter', 128);
    t.date('authored');
    t.string('basedOn', 128);
    t.string('bodySite', 128);
    t.specificType('category', 'varchar(128)[]');
    t.string('instantiatesCanonical', 128);
    t.string('instantiatesUri', 128);
    t.string('intent', 128);
    t.date('occurrence');
    t.specificType('performer', 'varchar(128)[]');
    t.string('performerType', 128);
    t.string('priority', 128);
    t.specificType('replaces', 'varchar(128)[]');
    t.string('requester', 128);
    t.string('requisition', 128);
    t.specificType('specimen', 'varchar(128)[]');
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('ServiceRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Slot', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('appointmentType', 128);
    t.string('schedule', 128);
    t.string('serviceCategory', 128);
    t.string('serviceType', 128);
    t.specificType('specialty', 'varchar(128)[]');
    t.date('start');
    t.string('status', 128);
  });

  await knex.schema.createTable('Slot_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Specimen', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('accession', 128);
    t.string('bodysite', 128);
    t.date('collected');
    t.string('collector', 128);
    t.specificType('container', 'varchar(128)[]');
    t.string('containerId', 128);
    t.specificType('parent', 'varchar(128)[]');
    t.string('patient', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('Specimen_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SpecimenDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('container', 128);
    t.string('type', 128);
  });

  await knex.schema.createTable('SpecimenDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('StructureDefinition', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('context', 'varchar(128)[]');
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('abstract', 128);
    t.string('base', 128);
    t.string('basePath', 128);
    t.string('derivation', 128);
    t.string('experimental', 128);
    t.string('extContext', 128);
    t.specificType('keyword', 'varchar(128)[]');
    t.string('kind', 128);
    t.string('path', 128);
    t.string('type', 128);
    t.string('valueset', 128);
  });

  await knex.schema.createTable('StructureDefinition_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('StructureMap', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('StructureMap_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Subscription', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('contact', 'varchar(128)[]');
    t.string('criteria', 128);
    t.string('payload', 128);
    t.string('status', 128);
    t.string('type', 128);
    t.string('url', 128);
  });

  await knex.schema.createTable('Subscription_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Substance', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('category', 'varchar(128)[]');
    t.string('code', 128);
    t.string('containerIdentifier', 128);
    t.date('expiry');
    t.string('quantity', 128);
    t.string('status', 128);
    t.string('substanceReference', 128);
  });

  await knex.schema.createTable('Substance_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceNucleicAcid', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceNucleicAcid_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstancePolymer', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstancePolymer_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceProtein', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceProtein_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceReferenceInformation', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceReferenceInformation_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceSourceMaterial', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('SubstanceSourceMaterial_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SubstanceSpecification', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('code', 'varchar(128)[]');
  });

  await knex.schema.createTable('SubstanceSpecification_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SupplyDelivery', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.specificType('receiver', 'varchar(128)[]');
    t.string('status', 128);
    t.string('supplier', 128);
  });

  await knex.schema.createTable('SupplyDelivery_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('SupplyRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.date('date');
    t.string('category', 128);
    t.string('requester', 128);
    t.string('status', 128);
    t.string('subject', 128);
    t.specificType('supplier', 'varchar(128)[]');
  });

  await knex.schema.createTable('SupplyRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Task', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.date('authoredOn');
    t.string('basedOn', 128);
    t.string('businessStatus', 128);
    t.string('code', 128);
    t.string('encounter', 128);
    t.string('focus', 128);
    t.string('groupIdentifier', 128);
    t.string('intent', 128);
    t.date('modified');
    t.string('owner', 128);
    t.string('partOf', 128);
    t.string('patient', 128);
    t.string('performer', 128);
    t.date('period');
    t.string('priority', 128);
    t.string('requester', 128);
    t.string('status', 128);
    t.string('subject', 128);
  });

  await knex.schema.createTable('Task_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('TerminologyCapabilities', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('TerminologyCapabilities_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('TestReport', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.date('issued');
    t.specificType('participant', 'varchar(128)[]');
    t.string('result', 128);
    t.string('tester', 128);
    t.string('testscript', 128);
  });

  await knex.schema.createTable('TestReport_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('TestScript', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('testscriptCapability', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
  });

  await knex.schema.createTable('TestScript_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ValueSet', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('context', 128);
    t.string('contextQuantity', 128);
    t.string('contextType', 128);
    t.date('date');
    t.string('description', 128);
    t.specificType('jurisdiction', 'varchar(128)[]');
    t.string('name', 128);
    t.string('publisher', 128);
    t.string('status', 128);
    t.string('title', 128);
    t.string('url', 128);
    t.string('version', 128);
    t.string('contextTypeQuantity', 128);
    t.string('contextTypeValue', 128);
    t.string('code', 128);
    t.string('expansion', 128);
    t.string('reference', 128);
  });

  await knex.schema.createTable('ValueSet_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('VerificationResult', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.specificType('target', 'varchar(128)[]');
  });

  await knex.schema.createTable('VerificationResult_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('VisionPrescription', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.uuid('patientCompartment');
    t.string('patient', 128);
    t.string('encounter', 128);
    t.date('datewritten');
    t.string('prescriber', 128);
    t.string('status', 128);
  });

  await knex.schema.createTable('VisionPrescription_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Project', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('name', 128);
  });

  await knex.schema.createTable('Project_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('ClientApplication', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('name', 128);
  });

  await knex.schema.createTable('ClientApplication_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('User', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('email', 128);
  });

  await knex.schema.createTable('User_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Login', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.string('code', 128);
    t.string('cookie', 128);
  });

  await knex.schema.createTable('Login_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('PasswordChangeRequest', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
  });

  await knex.schema.createTable('PasswordChangeRequest_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('JsonWebKey', t => {
    t.uuid('id').notNullable().primary();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
    t.uuid('project').notNullable();
    t.boolean('active');
  });

  await knex.schema.createTable('JsonWebKey_History', t => {
    t.uuid('versionId').notNullable().primary();
    t.uuid('id').notNullable();
    t.text('content').notNullable();
    t.dateTime('lastUpdated').notNullable();
  });

  await knex.schema.createTable('Address', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.string('address', 128).index();
    t.string('city', 64).index();
    t.string('country', 64).index();
    t.string('postalCode', 32).index();
    t.string('state', 32).index();
    t.string('use', 32).index();
  });

  await knex.schema.createTable('ContactPoint', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.string('system', 128).index();
    t.string('value', 128).index();
  });

  await knex.schema.createTable('Identifier', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.string('system', 128).index();
    t.string('value', 128).index();
  });

  await knex.schema.createTable('HumanName', t => {
    t.uuid('id').notNullable().primary();
    t.uuid('resourceId').notNullable().index();
    t.integer('index').notNullable();
    t.text('content').notNullable();
    t.string('name', 128).index();
    t.string('given', 128).index();
    t.string('family', 128).index();
  });

  await knex.schema.createTable('ValueSetElement', t => {
    t.uuid('id').notNullable().primary();
    t.string('system', 128).index();
    t.string('code', 128).index();
    t.string('display', 128).index();
  });
}

export async function down(knex) {
  await knex.schema.dropTable('Account');
  await knex.schema.dropTable('Account_History');
  await knex.schema.dropTable('ActivityDefinition');
  await knex.schema.dropTable('ActivityDefinition_History');
  await knex.schema.dropTable('AdverseEvent');
  await knex.schema.dropTable('AdverseEvent_History');
  await knex.schema.dropTable('AllergyIntolerance');
  await knex.schema.dropTable('AllergyIntolerance_History');
  await knex.schema.dropTable('Appointment');
  await knex.schema.dropTable('Appointment_History');
  await knex.schema.dropTable('AppointmentResponse');
  await knex.schema.dropTable('AppointmentResponse_History');
  await knex.schema.dropTable('AuditEvent');
  await knex.schema.dropTable('AuditEvent_History');
  await knex.schema.dropTable('Basic');
  await knex.schema.dropTable('Basic_History');
  await knex.schema.dropTable('Binary');
  await knex.schema.dropTable('Binary_History');
  await knex.schema.dropTable('BiologicallyDerivedProduct');
  await knex.schema.dropTable('BiologicallyDerivedProduct_History');
  await knex.schema.dropTable('BodyStructure');
  await knex.schema.dropTable('BodyStructure_History');
  await knex.schema.dropTable('Bundle');
  await knex.schema.dropTable('Bundle_History');
  await knex.schema.dropTable('CapabilityStatement');
  await knex.schema.dropTable('CapabilityStatement_History');
  await knex.schema.dropTable('CarePlan');
  await knex.schema.dropTable('CarePlan_History');
  await knex.schema.dropTable('CareTeam');
  await knex.schema.dropTable('CareTeam_History');
  await knex.schema.dropTable('CatalogEntry');
  await knex.schema.dropTable('CatalogEntry_History');
  await knex.schema.dropTable('ChargeItem');
  await knex.schema.dropTable('ChargeItem_History');
  await knex.schema.dropTable('ChargeItemDefinition');
  await knex.schema.dropTable('ChargeItemDefinition_History');
  await knex.schema.dropTable('Claim');
  await knex.schema.dropTable('Claim_History');
  await knex.schema.dropTable('ClaimResponse');
  await knex.schema.dropTable('ClaimResponse_History');
  await knex.schema.dropTable('ClinicalImpression');
  await knex.schema.dropTable('ClinicalImpression_History');
  await knex.schema.dropTable('CodeSystem');
  await knex.schema.dropTable('CodeSystem_History');
  await knex.schema.dropTable('Communication');
  await knex.schema.dropTable('Communication_History');
  await knex.schema.dropTable('CommunicationRequest');
  await knex.schema.dropTable('CommunicationRequest_History');
  await knex.schema.dropTable('CompartmentDefinition');
  await knex.schema.dropTable('CompartmentDefinition_History');
  await knex.schema.dropTable('Composition');
  await knex.schema.dropTable('Composition_History');
  await knex.schema.dropTable('ConceptMap');
  await knex.schema.dropTable('ConceptMap_History');
  await knex.schema.dropTable('Condition');
  await knex.schema.dropTable('Condition_History');
  await knex.schema.dropTable('Consent');
  await knex.schema.dropTable('Consent_History');
  await knex.schema.dropTable('Contract');
  await knex.schema.dropTable('Contract_History');
  await knex.schema.dropTable('Coverage');
  await knex.schema.dropTable('Coverage_History');
  await knex.schema.dropTable('CoverageEligibilityRequest');
  await knex.schema.dropTable('CoverageEligibilityRequest_History');
  await knex.schema.dropTable('CoverageEligibilityResponse');
  await knex.schema.dropTable('CoverageEligibilityResponse_History');
  await knex.schema.dropTable('DetectedIssue');
  await knex.schema.dropTable('DetectedIssue_History');
  await knex.schema.dropTable('Device');
  await knex.schema.dropTable('Device_History');
  await knex.schema.dropTable('DeviceDefinition');
  await knex.schema.dropTable('DeviceDefinition_History');
  await knex.schema.dropTable('DeviceMetric');
  await knex.schema.dropTable('DeviceMetric_History');
  await knex.schema.dropTable('DeviceRequest');
  await knex.schema.dropTable('DeviceRequest_History');
  await knex.schema.dropTable('DeviceUseStatement');
  await knex.schema.dropTable('DeviceUseStatement_History');
  await knex.schema.dropTable('DiagnosticReport');
  await knex.schema.dropTable('DiagnosticReport_History');
  await knex.schema.dropTable('DocumentManifest');
  await knex.schema.dropTable('DocumentManifest_History');
  await knex.schema.dropTable('DocumentReference');
  await knex.schema.dropTable('DocumentReference_History');
  await knex.schema.dropTable('EffectEvidenceSynthesis');
  await knex.schema.dropTable('EffectEvidenceSynthesis_History');
  await knex.schema.dropTable('Encounter');
  await knex.schema.dropTable('Encounter_History');
  await knex.schema.dropTable('Endpoint');
  await knex.schema.dropTable('Endpoint_History');
  await knex.schema.dropTable('EnrollmentRequest');
  await knex.schema.dropTable('EnrollmentRequest_History');
  await knex.schema.dropTable('EnrollmentResponse');
  await knex.schema.dropTable('EnrollmentResponse_History');
  await knex.schema.dropTable('EpisodeOfCare');
  await knex.schema.dropTable('EpisodeOfCare_History');
  await knex.schema.dropTable('EventDefinition');
  await knex.schema.dropTable('EventDefinition_History');
  await knex.schema.dropTable('Evidence');
  await knex.schema.dropTable('Evidence_History');
  await knex.schema.dropTable('EvidenceVariable');
  await knex.schema.dropTable('EvidenceVariable_History');
  await knex.schema.dropTable('ExampleScenario');
  await knex.schema.dropTable('ExampleScenario_History');
  await knex.schema.dropTable('ExplanationOfBenefit');
  await knex.schema.dropTable('ExplanationOfBenefit_History');
  await knex.schema.dropTable('FamilyMemberHistory');
  await knex.schema.dropTable('FamilyMemberHistory_History');
  await knex.schema.dropTable('Flag');
  await knex.schema.dropTable('Flag_History');
  await knex.schema.dropTable('Goal');
  await knex.schema.dropTable('Goal_History');
  await knex.schema.dropTable('GraphDefinition');
  await knex.schema.dropTable('GraphDefinition_History');
  await knex.schema.dropTable('Group');
  await knex.schema.dropTable('Group_History');
  await knex.schema.dropTable('GuidanceResponse');
  await knex.schema.dropTable('GuidanceResponse_History');
  await knex.schema.dropTable('HealthcareService');
  await knex.schema.dropTable('HealthcareService_History');
  await knex.schema.dropTable('ImagingStudy');
  await knex.schema.dropTable('ImagingStudy_History');
  await knex.schema.dropTable('Immunization');
  await knex.schema.dropTable('Immunization_History');
  await knex.schema.dropTable('ImmunizationEvaluation');
  await knex.schema.dropTable('ImmunizationEvaluation_History');
  await knex.schema.dropTable('ImmunizationRecommendation');
  await knex.schema.dropTable('ImmunizationRecommendation_History');
  await knex.schema.dropTable('ImplementationGuide');
  await knex.schema.dropTable('ImplementationGuide_History');
  await knex.schema.dropTable('InsurancePlan');
  await knex.schema.dropTable('InsurancePlan_History');
  await knex.schema.dropTable('Invoice');
  await knex.schema.dropTable('Invoice_History');
  await knex.schema.dropTable('Library');
  await knex.schema.dropTable('Library_History');
  await knex.schema.dropTable('Linkage');
  await knex.schema.dropTable('Linkage_History');
  await knex.schema.dropTable('List');
  await knex.schema.dropTable('List_History');
  await knex.schema.dropTable('Location');
  await knex.schema.dropTable('Location_History');
  await knex.schema.dropTable('Measure');
  await knex.schema.dropTable('Measure_History');
  await knex.schema.dropTable('MeasureReport');
  await knex.schema.dropTable('MeasureReport_History');
  await knex.schema.dropTable('Media');
  await knex.schema.dropTable('Media_History');
  await knex.schema.dropTable('Medication');
  await knex.schema.dropTable('Medication_History');
  await knex.schema.dropTable('MedicationAdministration');
  await knex.schema.dropTable('MedicationAdministration_History');
  await knex.schema.dropTable('MedicationDispense');
  await knex.schema.dropTable('MedicationDispense_History');
  await knex.schema.dropTable('MedicationKnowledge');
  await knex.schema.dropTable('MedicationKnowledge_History');
  await knex.schema.dropTable('MedicationRequest');
  await knex.schema.dropTable('MedicationRequest_History');
  await knex.schema.dropTable('MedicationStatement');
  await knex.schema.dropTable('MedicationStatement_History');
  await knex.schema.dropTable('MedicinalProduct');
  await knex.schema.dropTable('MedicinalProduct_History');
  await knex.schema.dropTable('MedicinalProductAuthorization');
  await knex.schema.dropTable('MedicinalProductAuthorization_History');
  await knex.schema.dropTable('MedicinalProductContraindication');
  await knex.schema.dropTable('MedicinalProductContraindication_History');
  await knex.schema.dropTable('MedicinalProductIndication');
  await knex.schema.dropTable('MedicinalProductIndication_History');
  await knex.schema.dropTable('MedicinalProductIngredient');
  await knex.schema.dropTable('MedicinalProductIngredient_History');
  await knex.schema.dropTable('MedicinalProductInteraction');
  await knex.schema.dropTable('MedicinalProductInteraction_History');
  await knex.schema.dropTable('MedicinalProductManufactured');
  await knex.schema.dropTable('MedicinalProductManufactured_History');
  await knex.schema.dropTable('MedicinalProductPackaged');
  await knex.schema.dropTable('MedicinalProductPackaged_History');
  await knex.schema.dropTable('MedicinalProductPharmaceutical');
  await knex.schema.dropTable('MedicinalProductPharmaceutical_History');
  await knex.schema.dropTable('MedicinalProductUndesirableEffect');
  await knex.schema.dropTable('MedicinalProductUndesirableEffect_History');
  await knex.schema.dropTable('MessageDefinition');
  await knex.schema.dropTable('MessageDefinition_History');
  await knex.schema.dropTable('MessageHeader');
  await knex.schema.dropTable('MessageHeader_History');
  await knex.schema.dropTable('MolecularSequence');
  await knex.schema.dropTable('MolecularSequence_History');
  await knex.schema.dropTable('NamingSystem');
  await knex.schema.dropTable('NamingSystem_History');
  await knex.schema.dropTable('NutritionOrder');
  await knex.schema.dropTable('NutritionOrder_History');
  await knex.schema.dropTable('Observation');
  await knex.schema.dropTable('Observation_History');
  await knex.schema.dropTable('ObservationDefinition');
  await knex.schema.dropTable('ObservationDefinition_History');
  await knex.schema.dropTable('OperationDefinition');
  await knex.schema.dropTable('OperationDefinition_History');
  await knex.schema.dropTable('OperationOutcome');
  await knex.schema.dropTable('OperationOutcome_History');
  await knex.schema.dropTable('Organization');
  await knex.schema.dropTable('Organization_History');
  await knex.schema.dropTable('OrganizationAffiliation');
  await knex.schema.dropTable('OrganizationAffiliation_History');
  await knex.schema.dropTable('Parameters');
  await knex.schema.dropTable('Parameters_History');
  await knex.schema.dropTable('Patient');
  await knex.schema.dropTable('Patient_History');
  await knex.schema.dropTable('PaymentNotice');
  await knex.schema.dropTable('PaymentNotice_History');
  await knex.schema.dropTable('PaymentReconciliation');
  await knex.schema.dropTable('PaymentReconciliation_History');
  await knex.schema.dropTable('Person');
  await knex.schema.dropTable('Person_History');
  await knex.schema.dropTable('PlanDefinition');
  await knex.schema.dropTable('PlanDefinition_History');
  await knex.schema.dropTable('Practitioner');
  await knex.schema.dropTable('Practitioner_History');
  await knex.schema.dropTable('PractitionerRole');
  await knex.schema.dropTable('PractitionerRole_History');
  await knex.schema.dropTable('Procedure');
  await knex.schema.dropTable('Procedure_History');
  await knex.schema.dropTable('Provenance');
  await knex.schema.dropTable('Provenance_History');
  await knex.schema.dropTable('Questionnaire');
  await knex.schema.dropTable('Questionnaire_History');
  await knex.schema.dropTable('QuestionnaireResponse');
  await knex.schema.dropTable('QuestionnaireResponse_History');
  await knex.schema.dropTable('RelatedPerson');
  await knex.schema.dropTable('RelatedPerson_History');
  await knex.schema.dropTable('RequestGroup');
  await knex.schema.dropTable('RequestGroup_History');
  await knex.schema.dropTable('ResearchDefinition');
  await knex.schema.dropTable('ResearchDefinition_History');
  await knex.schema.dropTable('ResearchElementDefinition');
  await knex.schema.dropTable('ResearchElementDefinition_History');
  await knex.schema.dropTable('ResearchStudy');
  await knex.schema.dropTable('ResearchStudy_History');
  await knex.schema.dropTable('ResearchSubject');
  await knex.schema.dropTable('ResearchSubject_History');
  await knex.schema.dropTable('RiskAssessment');
  await knex.schema.dropTable('RiskAssessment_History');
  await knex.schema.dropTable('RiskEvidenceSynthesis');
  await knex.schema.dropTable('RiskEvidenceSynthesis_History');
  await knex.schema.dropTable('Schedule');
  await knex.schema.dropTable('Schedule_History');
  await knex.schema.dropTable('SearchParameter');
  await knex.schema.dropTable('SearchParameter_History');
  await knex.schema.dropTable('ServiceRequest');
  await knex.schema.dropTable('ServiceRequest_History');
  await knex.schema.dropTable('Slot');
  await knex.schema.dropTable('Slot_History');
  await knex.schema.dropTable('Specimen');
  await knex.schema.dropTable('Specimen_History');
  await knex.schema.dropTable('SpecimenDefinition');
  await knex.schema.dropTable('SpecimenDefinition_History');
  await knex.schema.dropTable('StructureDefinition');
  await knex.schema.dropTable('StructureDefinition_History');
  await knex.schema.dropTable('StructureMap');
  await knex.schema.dropTable('StructureMap_History');
  await knex.schema.dropTable('Subscription');
  await knex.schema.dropTable('Subscription_History');
  await knex.schema.dropTable('Substance');
  await knex.schema.dropTable('Substance_History');
  await knex.schema.dropTable('SubstanceNucleicAcid');
  await knex.schema.dropTable('SubstanceNucleicAcid_History');
  await knex.schema.dropTable('SubstancePolymer');
  await knex.schema.dropTable('SubstancePolymer_History');
  await knex.schema.dropTable('SubstanceProtein');
  await knex.schema.dropTable('SubstanceProtein_History');
  await knex.schema.dropTable('SubstanceReferenceInformation');
  await knex.schema.dropTable('SubstanceReferenceInformation_History');
  await knex.schema.dropTable('SubstanceSourceMaterial');
  await knex.schema.dropTable('SubstanceSourceMaterial_History');
  await knex.schema.dropTable('SubstanceSpecification');
  await knex.schema.dropTable('SubstanceSpecification_History');
  await knex.schema.dropTable('SupplyDelivery');
  await knex.schema.dropTable('SupplyDelivery_History');
  await knex.schema.dropTable('SupplyRequest');
  await knex.schema.dropTable('SupplyRequest_History');
  await knex.schema.dropTable('Task');
  await knex.schema.dropTable('Task_History');
  await knex.schema.dropTable('TerminologyCapabilities');
  await knex.schema.dropTable('TerminologyCapabilities_History');
  await knex.schema.dropTable('TestReport');
  await knex.schema.dropTable('TestReport_History');
  await knex.schema.dropTable('TestScript');
  await knex.schema.dropTable('TestScript_History');
  await knex.schema.dropTable('ValueSet');
  await knex.schema.dropTable('ValueSet_History');
  await knex.schema.dropTable('VerificationResult');
  await knex.schema.dropTable('VerificationResult_History');
  await knex.schema.dropTable('VisionPrescription');
  await knex.schema.dropTable('VisionPrescription_History');
  await knex.schema.dropTable('Project');
  await knex.schema.dropTable('Project_History');
  await knex.schema.dropTable('ClientApplication');
  await knex.schema.dropTable('ClientApplication_History');
  await knex.schema.dropTable('User');
  await knex.schema.dropTable('User_History');
  await knex.schema.dropTable('Login');
  await knex.schema.dropTable('Login_History');
  await knex.schema.dropTable('PasswordChangeRequest');
  await knex.schema.dropTable('PasswordChangeRequest_History');
  await knex.schema.dropTable('JsonWebKey');
  await knex.schema.dropTable('JsonWebKey_History');
  await knex.schema.dropTable('Identifier');
}
