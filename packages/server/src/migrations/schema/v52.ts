/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { PoolClient } from 'pg';

export async function run(client: PoolClient): Promise<void> {
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ActivityDefinition_context_idx ON "ActivityDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS CapabilityStatement_context_idx ON "CapabilityStatement" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ChargeItemDefinition_context_idx ON "ChargeItemDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS CodeSystem_context_idx ON "CodeSystem" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS CommunicationRequest_priorityOrder_idx ON "CommunicationRequest"("priorityOrder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS CompartmentDefinition_context_idx ON "CompartmentDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ConceptMap_context_idx ON "ConceptMap" USING gin ("context")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS DeviceRequest_code_idx ON "DeviceRequest"("code")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS EffectEvidenceSynthesis_context_idx ON "EffectEvidenceSynthesis" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS EventDefinition_context_idx ON "EventDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS Evidence_context_idx ON "Evidence" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS EvidenceVariable_context_idx ON "EvidenceVariable" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ExampleScenario_context_idx ON "ExampleScenario" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS GraphDefinition_context_idx ON "GraphDefinition" USING gin ("context")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS Group_value_idx ON "Group" USING gin ("value")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ImplementationGuide_context_idx ON "ImplementationGuide" USING gin ("context")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS Library_context_idx ON "Library" USING gin ("context")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS Measure_context_idx ON "Measure" USING gin ("context")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS Medication_ingredientCode_idx ON "Medication" USING gin ("ingredientCode")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MedicationAdministration_code_idx ON "MedicationAdministration"("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MedicationDispense_code_idx ON "MedicationDispense"("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MedicationKnowledge_ingredientCode_idx ON "MedicationKnowledge" USING gin ("ingredientCode")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MedicationRequest_code_idx ON "MedicationRequest"("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MedicationRequest_priorityOrder_idx ON "MedicationRequest"("priorityOrder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MedicationStatement_code_idx ON "MedicationStatement"("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS MessageDefinition_context_idx ON "MessageDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS NamingSystem_context_idx ON "NamingSystem" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS Observation_componentValueConcept_idx ON "Observation" USING gin ("componentValueConcept")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS Observation_valueConcept_idx ON "Observation"("valueConcept")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS OperationDefinition_context_idx ON "OperationDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS PlanDefinition_context_idx ON "PlanDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS Questionnaire_context_idx ON "Questionnaire" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS RequestGroup_priorityOrder_idx ON "RequestGroup"("priorityOrder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ResearchDefinition_context_idx ON "ResearchDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ResearchElementDefinition_context_idx ON "ResearchElementDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS RiskEvidenceSynthesis_context_idx ON "RiskEvidenceSynthesis" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS SearchParameter_context_idx ON "SearchParameter" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ServiceRequest_priorityOrder_idx ON "ServiceRequest"("priorityOrder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS StructureDefinition_context_idx ON "StructureDefinition" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS StructureMap_context_idx ON "StructureMap" USING gin ("context")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS Task_priorityOrder_idx ON "Task"("priorityOrder")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS TerminologyCapabilities_context_idx ON "TerminologyCapabilities" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS TestScript_context_idx ON "TestScript" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS ValueSet_context_idx ON "ValueSet" USING gin ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS DomainConfiguration_Token_resourceId_idx ON "DomainConfiguration_Token"("resourceId")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS DomainConfiguration_Token_code_idx ON "DomainConfiguration_Token"("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS DomainConfiguration_Token_system_idx ON "DomainConfiguration_Token"("system")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS DomainConfiguration_Token_value_idx ON "DomainConfiguration_Token"("value")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS Agent_name_idx ON "Agent"("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS Agent_status_idx ON "Agent"("status")');
}
