/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { PoolClient } from 'pg';

export async function run(client: PoolClient): Promise<void> {
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_name_idx" ON "Account" ("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_owner_idx" ON "Account" ("owner")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_patient_idx" ON "Account" USING GIN("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_period_idx" ON "Account" ("period")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_status_idx" ON "Account" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_subject_idx" ON "Account" USING GIN("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_composedOf_idx" ON "ActivityDefinition" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_contextQuantity_idx" ON "ActivityDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_date_idx" ON "ActivityDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_dependsOn_idx" ON "ActivityDefinition" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_derivedFrom_idx" ON "ActivityDefinition" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_description_idx" ON "ActivityDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_effective_idx" ON "ActivityDefinition" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_name_idx" ON "ActivityDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_predecessor_idx" ON "ActivityDefinition" USING GIN("predecessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_publisher_idx" ON "ActivityDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_status_idx" ON "ActivityDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_successor_idx" ON "ActivityDefinition" USING GIN("successor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_title_idx" ON "ActivityDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_url_idx" ON "ActivityDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_version_idx" ON "ActivityDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_contextTypeQuantity_idx" ON "ActivityDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_contextTypeValue_idx" ON "ActivityDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_actuality_idx" ON "AdverseEvent" ("actuality")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_date_idx" ON "AdverseEvent" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_location_idx" ON "AdverseEvent" ("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_recorder_idx" ON "AdverseEvent" ("recorder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_resultingcondition_idx" ON "AdverseEvent" USING GIN("resultingcondition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_study_idx" ON "AdverseEvent" USING GIN("study")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_subject_idx" ON "AdverseEvent" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_substance_idx" ON "AdverseEvent" USING GIN("substance")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_asserter_idx" ON "AllergyIntolerance" ("asserter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_category_idx" ON "AllergyIntolerance" USING GIN("category")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_criticality_idx" ON "AllergyIntolerance" ("criticality")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_date_idx" ON "AllergyIntolerance" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_lastDate_idx" ON "AllergyIntolerance" ("lastDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_onset_idx" ON "AllergyIntolerance" USING GIN("onset")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_patient_idx" ON "AllergyIntolerance" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_recorder_idx" ON "AllergyIntolerance" ("recorder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_severity_idx" ON "AllergyIntolerance" USING GIN("severity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_type_idx" ON "AllergyIntolerance" ("type")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_actor_idx" ON "Appointment" USING GIN("actor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_basedOn_idx" ON "Appointment" USING GIN("basedOn")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_date_idx" ON "Appointment" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_location_idx" ON "Appointment" USING GIN("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_partStatus_idx" ON "Appointment" USING GIN("partStatus")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_patient_idx" ON "Appointment" USING GIN("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_practitioner_idx" ON "Appointment" USING GIN("practitioner")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_reasonReference_idx" ON "Appointment" USING GIN("reasonReference")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_slot_idx" ON "Appointment" USING GIN("slot")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_status_idx" ON "Appointment" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_supportingInfo_idx" ON "Appointment" USING GIN("supportingInfo")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_actor_idx" ON "AppointmentResponse" ("actor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_appointment_idx" ON "AppointmentResponse" ("appointment")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_location_idx" ON "AppointmentResponse" ("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_partStatus_idx" ON "AppointmentResponse" ("partStatus")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_patient_idx" ON "AppointmentResponse" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_practitioner_idx" ON "AppointmentResponse" ("practitioner")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_action_idx" ON "AuditEvent" ("action")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_address_idx" ON "AuditEvent" USING GIN("address")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_agent_idx" ON "AuditEvent" USING GIN("agent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_agentName_idx" ON "AuditEvent" USING GIN("agentName")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_altid_idx" ON "AuditEvent" USING GIN("altid")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_date_idx" ON "AuditEvent" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_entity_idx" ON "AuditEvent" USING GIN("entity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_entityName_idx" ON "AuditEvent" USING GIN("entityName")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_outcome_idx" ON "AuditEvent" ("outcome")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_patient_idx" ON "AuditEvent" USING GIN("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_policy_idx" ON "AuditEvent" USING GIN("policy")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_site_idx" ON "AuditEvent" ("site")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_source_idx" ON "AuditEvent" ("source")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic_author_idx" ON "Basic" ("author")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic_created_idx" ON "Basic" ("created")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic_patient_idx" ON "Basic" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic_subject_idx" ON "Basic" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure_patient_idx" ON "BodyStructure" ("patient")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle_composition_idx" ON "Bundle" ("composition")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle_message_idx" ON "Bundle" ("message")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle_timestamp_idx" ON "Bundle" ("timestamp")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle_type_idx" ON "Bundle" ("type")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_contextQuantity_idx" ON "CapabilityStatement" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_date_idx" ON "CapabilityStatement" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_description_idx" ON "CapabilityStatement" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_fhirversion_idx" ON "CapabilityStatement" ("fhirversion")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_format_idx" ON "CapabilityStatement" USING GIN("format")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_guide_idx" ON "CapabilityStatement" USING GIN("guide")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_mode_idx" ON "CapabilityStatement" USING GIN("mode")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_name_idx" ON "CapabilityStatement" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_publisher_idx" ON "CapabilityStatement" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_resource_idx" ON "CapabilityStatement" USING GIN("resource")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_resourceProfile_idx" ON "CapabilityStatement" USING GIN("resourceProfile")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_software_idx" ON "CapabilityStatement" ("software")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_status_idx" ON "CapabilityStatement" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_supportedProfile_idx" ON "CapabilityStatement" USING GIN("supportedProfile")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_title_idx" ON "CapabilityStatement" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_url_idx" ON "CapabilityStatement" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_version_idx" ON "CapabilityStatement" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_contextTypeQuantity_idx" ON "CapabilityStatement" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_contextTypeValue_idx" ON "CapabilityStatement" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_date_idx" ON "CarePlan" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_patient_idx" ON "CarePlan" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_activityDate_idx" ON "CarePlan" USING GIN("activityDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_activityReference_idx" ON "CarePlan" USING GIN("activityReference")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_basedOn_idx" ON "CarePlan" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_careTeam_idx" ON "CarePlan" USING GIN("careTeam")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_condition_idx" ON "CarePlan" USING GIN("condition")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_encounter_idx" ON "CarePlan" ("encounter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_goal_idx" ON "CarePlan" USING GIN("goal")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_instantiatesCanonical_idx" ON "CarePlan" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_instantiatesUri_idx" ON "CarePlan" USING GIN("instantiatesUri")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_intent_idx" ON "CarePlan" ("intent")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_partOf_idx" ON "CarePlan" USING GIN("partOf")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_performer_idx" ON "CarePlan" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_replaces_idx" ON "CarePlan" USING GIN("replaces")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_status_idx" ON "CarePlan" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_subject_idx" ON "CarePlan" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_date_idx" ON "CareTeam" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_patient_idx" ON "CareTeam" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_encounter_idx" ON "CareTeam" ("encounter")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_participant_idx" ON "CareTeam" USING GIN("participant")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_status_idx" ON "CareTeam" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_subject_idx" ON "CareTeam" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_account_idx" ON "ChargeItem" USING GIN("account")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_context_idx" ON "ChargeItem" ("context")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_enteredDate_idx" ON "ChargeItem" ("enteredDate")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_enterer_idx" ON "ChargeItem" ("enterer")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_factorOverride_idx" ON "ChargeItem" ("factorOverride")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_occurrence_idx" ON "ChargeItem" ("occurrence")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_patient_idx" ON "ChargeItem" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_performerActor_idx" ON "ChargeItem" USING GIN("performerActor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_performingOrganization_idx" ON "ChargeItem" ("performingOrganization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_priceOverride_idx" ON "ChargeItem" ("priceOverride")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_quantity_idx" ON "ChargeItem" ("quantity")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_requestingOrganization_idx" ON "ChargeItem" ("requestingOrganization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_service_idx" ON "ChargeItem" USING GIN("service")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_subject_idx" ON "ChargeItem" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_contextQuantity_idx" ON "ChargeItemDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_date_idx" ON "ChargeItemDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_description_idx" ON "ChargeItemDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_effective_idx" ON "ChargeItemDefinition" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_publisher_idx" ON "ChargeItemDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_status_idx" ON "ChargeItemDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_title_idx" ON "ChargeItemDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_url_idx" ON "ChargeItemDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_version_idx" ON "ChargeItemDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_contextTypeQuantity_idx" ON "ChargeItemDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_contextTypeValue_idx" ON "ChargeItemDefinition" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_careTeam_idx" ON "Claim" USING GIN("careTeam")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_created_idx" ON "Claim" ("created")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_detailUdi_idx" ON "Claim" USING GIN("detailUdi")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_encounter_idx" ON "Claim" USING GIN("encounter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_enterer_idx" ON "Claim" ("enterer")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_facility_idx" ON "Claim" ("facility")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_insurer_idx" ON "Claim" ("insurer")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_itemUdi_idx" ON "Claim" USING GIN("itemUdi")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_patient_idx" ON "Claim" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_payee_idx" ON "Claim" ("payee")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_procedureUdi_idx" ON "Claim" USING GIN("procedureUdi")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_provider_idx" ON "Claim" ("provider")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_status_idx" ON "Claim" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_subdetailUdi_idx" ON "Claim" USING GIN("subdetailUdi")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_use_idx" ON "Claim" ("use")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_created_idx" ON "ClaimResponse" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_disposition_idx" ON "ClaimResponse" ("disposition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_insurer_idx" ON "ClaimResponse" ("insurer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_outcome_idx" ON "ClaimResponse" ("outcome")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_patient_idx" ON "ClaimResponse" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_paymentDate_idx" ON "ClaimResponse" ("paymentDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_request_idx" ON "ClaimResponse" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_requestor_idx" ON "ClaimResponse" ("requestor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_status_idx" ON "ClaimResponse" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_use_idx" ON "ClaimResponse" ("use")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_date_idx" ON "ClinicalImpression" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_patient_idx" ON "ClinicalImpression" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_assessor_idx" ON "ClinicalImpression" ("assessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_encounter_idx" ON "ClinicalImpression" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_findingRef_idx" ON "ClinicalImpression" USING GIN("findingRef")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_investigation_idx" ON "ClinicalImpression" USING GIN("investigation")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_previous_idx" ON "ClinicalImpression" ("previous")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_problem_idx" ON "ClinicalImpression" USING GIN("problem")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_status_idx" ON "ClinicalImpression" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_subject_idx" ON "ClinicalImpression" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_supportingInfo_idx" ON "ClinicalImpression" USING GIN("supportingInfo")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_contextQuantity_idx" ON "CodeSystem" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_date_idx" ON "CodeSystem" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_description_idx" ON "CodeSystem" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_name_idx" ON "CodeSystem" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_publisher_idx" ON "CodeSystem" ("publisher")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_status_idx" ON "CodeSystem" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_title_idx" ON "CodeSystem" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_url_idx" ON "CodeSystem" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_version_idx" ON "CodeSystem" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_contextTypeQuantity_idx" ON "CodeSystem" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_contextTypeValue_idx" ON "CodeSystem" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_code_idx" ON "CodeSystem" USING GIN("code")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_contentMode_idx" ON "CodeSystem" ("contentMode")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_language_idx" ON "CodeSystem" USING GIN("language")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_supplements_idx" ON "CodeSystem" ("supplements")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_system_idx" ON "CodeSystem" ("system")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_basedOn_idx" ON "Communication" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_encounter_idx" ON "Communication" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_instantiatesCanonical_idx" ON "Communication" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_instantiatesUri_idx" ON "Communication" USING GIN("instantiatesUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_partOf_idx" ON "Communication" USING GIN("partOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_patient_idx" ON "Communication" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_received_idx" ON "Communication" ("received")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_recipient_idx" ON "Communication" USING GIN("recipient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_sender_idx" ON "Communication" ("sender")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_sent_idx" ON "Communication" ("sent")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_status_idx" ON "Communication" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_subject_idx" ON "Communication" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_authored_idx" ON "CommunicationRequest" ("authored")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_basedOn_idx" ON "CommunicationRequest" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_encounter_idx" ON "CommunicationRequest" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_groupIdentifier_idx" ON "CommunicationRequest" ("groupIdentifier")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_occurrence_idx" ON "CommunicationRequest" ("occurrence")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_patient_idx" ON "CommunicationRequest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_priority_idx" ON "CommunicationRequest" ("priority")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_recipient_idx" ON "CommunicationRequest" USING GIN("recipient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_replaces_idx" ON "CommunicationRequest" USING GIN("replaces")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_requester_idx" ON "CommunicationRequest" ("requester")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_sender_idx" ON "CommunicationRequest" ("sender")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_status_idx" ON "CommunicationRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_subject_idx" ON "CommunicationRequest" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_contextQuantity_idx" ON "CompartmentDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_date_idx" ON "CompartmentDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_description_idx" ON "CompartmentDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_name_idx" ON "CompartmentDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_publisher_idx" ON "CompartmentDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_status_idx" ON "CompartmentDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_url_idx" ON "CompartmentDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_version_idx" ON "CompartmentDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_contextTypeQuantity_idx" ON "CompartmentDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_contextTypeValue_idx" ON "CompartmentDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_code_idx" ON "CompartmentDefinition" ("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_resource_idx" ON "CompartmentDefinition" USING GIN("resource")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_date_idx" ON "Composition" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_patient_idx" ON "Composition" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_attester_idx" ON "Composition" USING GIN("attester")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_author_idx" ON "Composition" USING GIN("author")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_confidentiality_idx" ON "Composition" ("confidentiality")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_encounter_idx" ON "Composition" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_entry_idx" ON "Composition" USING GIN("entry")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_period_idx" ON "Composition" USING GIN("period")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_relatedId_idx" ON "Composition" USING GIN("relatedId")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_relatedRef_idx" ON "Composition" USING GIN("relatedRef")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_status_idx" ON "Composition" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_subject_idx" ON "Composition" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_title_idx" ON "Composition" ("title")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_contextQuantity_idx" ON "ConceptMap" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_date_idx" ON "ConceptMap" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_description_idx" ON "ConceptMap" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_name_idx" ON "ConceptMap" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_publisher_idx" ON "ConceptMap" ("publisher")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_status_idx" ON "ConceptMap" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_title_idx" ON "ConceptMap" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_url_idx" ON "ConceptMap" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_version_idx" ON "ConceptMap" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_contextTypeQuantity_idx" ON "ConceptMap" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_contextTypeValue_idx" ON "ConceptMap" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_dependson_idx" ON "ConceptMap" USING GIN("dependson")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_other_idx" ON "ConceptMap" USING GIN("other")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_product_idx" ON "ConceptMap" USING GIN("product")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_source_idx" ON "ConceptMap" ("source")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_sourceCode_idx" ON "ConceptMap" USING GIN("sourceCode")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_sourceSystem_idx" ON "ConceptMap" USING GIN("sourceSystem")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_sourceUri_idx" ON "ConceptMap" ("sourceUri")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_target_idx" ON "ConceptMap" ("target")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_targetCode_idx" ON "ConceptMap" USING GIN("targetCode")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_targetSystem_idx" ON "ConceptMap" USING GIN("targetSystem")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_targetUri_idx" ON "ConceptMap" ("targetUri")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_patient_idx" ON "Condition" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_abatementAge_idx" ON "Condition" ("abatementAge")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_abatementDate_idx" ON "Condition" ("abatementDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_abatementString_idx" ON "Condition" ("abatementString")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_asserter_idx" ON "Condition" ("asserter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_encounter_idx" ON "Condition" ("encounter")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_evidenceDetail_idx" ON "Condition" USING GIN("evidenceDetail")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_onsetAge_idx" ON "Condition" ("onsetAge")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_onsetDate_idx" ON "Condition" ("onsetDate")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_onsetInfo_idx" ON "Condition" ("onsetInfo")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_recordedDate_idx" ON "Condition" ("recordedDate")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_subject_idx" ON "Condition" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_date_idx" ON "Consent" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_patient_idx" ON "Consent" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_actor_idx" ON "Consent" USING GIN("actor")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_consentor_idx" ON "Consent" USING GIN("consentor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_data_idx" ON "Consent" USING GIN("data")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_organization_idx" ON "Consent" USING GIN("organization")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_period_idx" ON "Consent" ("period")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_sourceReference_idx" ON "Consent" ("sourceReference")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_status_idx" ON "Consent" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_authority_idx" ON "Contract" USING GIN("authority")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_domain_idx" ON "Contract" USING GIN("domain")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_instantiates_idx" ON "Contract" ("instantiates")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_issued_idx" ON "Contract" ("issued")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_patient_idx" ON "Contract" USING GIN("patient")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_signer_idx" ON "Contract" USING GIN("signer")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_status_idx" ON "Contract" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_subject_idx" ON "Contract" USING GIN("subject")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_url_idx" ON "Contract" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_beneficiary_idx" ON "Coverage" ("beneficiary")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_classValue_idx" ON "Coverage" USING GIN("classValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_dependent_idx" ON "Coverage" ("dependent")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_patient_idx" ON "Coverage" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_payor_idx" ON "Coverage" USING GIN("payor")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_policyHolder_idx" ON "Coverage" ("policyHolder")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_status_idx" ON "Coverage" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_subscriber_idx" ON "Coverage" ("subscriber")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_created_idx" ON "CoverageEligibilityRequest" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_enterer_idx" ON "CoverageEligibilityRequest" ("enterer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_facility_idx" ON "CoverageEligibilityRequest" ("facility")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_patient_idx" ON "CoverageEligibilityRequest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_provider_idx" ON "CoverageEligibilityRequest" ("provider")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_status_idx" ON "CoverageEligibilityRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_created_idx" ON "CoverageEligibilityResponse" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_disposition_idx" ON "CoverageEligibilityResponse" ("disposition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_insurer_idx" ON "CoverageEligibilityResponse" ("insurer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_outcome_idx" ON "CoverageEligibilityResponse" ("outcome")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_patient_idx" ON "CoverageEligibilityResponse" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_request_idx" ON "CoverageEligibilityResponse" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_requestor_idx" ON "CoverageEligibilityResponse" ("requestor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_status_idx" ON "CoverageEligibilityResponse" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue_patient_idx" ON "DetectedIssue" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue_author_idx" ON "DetectedIssue" ("author")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue_identified_idx" ON "DetectedIssue" ("identified")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue_implicated_idx" ON "DetectedIssue" USING GIN("implicated")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_deviceName_idx" ON "Device" USING GIN("deviceName")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_location_idx" ON "Device" ("location")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_manufacturer_idx" ON "Device" ("manufacturer")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_model_idx" ON "Device" ("model")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_organization_idx" ON "Device" ("organization")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_patient_idx" ON "Device" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_status_idx" ON "Device" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_udiCarrier_idx" ON "Device" USING GIN("udiCarrier")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_udiDi_idx" ON "Device" USING GIN("udiDi")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_url_idx" ON "Device" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition_parent_idx" ON "DeviceDefinition" ("parent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric_category_idx" ON "DeviceMetric" ("category")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric_parent_idx" ON "DeviceMetric" ("parent")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric_source_idx" ON "DeviceMetric" ("source")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_patient_idx" ON "DeviceRequest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_encounter_idx" ON "DeviceRequest" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_authoredOn_idx" ON "DeviceRequest" ("authoredOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_basedOn_idx" ON "DeviceRequest" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_device_idx" ON "DeviceRequest" ("device")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_eventDate_idx" ON "DeviceRequest" ("eventDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_groupIdentifier_idx" ON "DeviceRequest" ("groupIdentifier")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_instantiatesCanonical_idx" ON "DeviceRequest" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_instantiatesUri_idx" ON "DeviceRequest" USING GIN("instantiatesUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_insurance_idx" ON "DeviceRequest" USING GIN("insurance")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_intent_idx" ON "DeviceRequest" ("intent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_performer_idx" ON "DeviceRequest" ("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_priorRequest_idx" ON "DeviceRequest" USING GIN("priorRequest")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_requester_idx" ON "DeviceRequest" ("requester")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_status_idx" ON "DeviceRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_subject_idx" ON "DeviceRequest" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement_patient_idx" ON "DeviceUseStatement" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement_device_idx" ON "DeviceUseStatement" ("device")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement_subject_idx" ON "DeviceUseStatement" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_date_idx" ON "DiagnosticReport" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_patient_idx" ON "DiagnosticReport" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_encounter_idx" ON "DiagnosticReport" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_basedOn_idx" ON "DiagnosticReport" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_issued_idx" ON "DiagnosticReport" ("issued")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_media_idx" ON "DiagnosticReport" USING GIN("media")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_performer_idx" ON "DiagnosticReport" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_result_idx" ON "DiagnosticReport" USING GIN("result")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_resultsInterpreter_idx" ON "DiagnosticReport" USING GIN("resultsInterpreter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_specimen_idx" ON "DiagnosticReport" USING GIN("specimen")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_status_idx" ON "DiagnosticReport" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_subject_idx" ON "DiagnosticReport" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_patient_idx" ON "DocumentManifest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_author_idx" ON "DocumentManifest" USING GIN("author")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_created_idx" ON "DocumentManifest" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_description_idx" ON "DocumentManifest" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_item_idx" ON "DocumentManifest" USING GIN("item")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_recipient_idx" ON "DocumentManifest" USING GIN("recipient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_relatedId_idx" ON "DocumentManifest" USING GIN("relatedId")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_relatedRef_idx" ON "DocumentManifest" USING GIN("relatedRef")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_source_idx" ON "DocumentManifest" ("source")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_status_idx" ON "DocumentManifest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_subject_idx" ON "DocumentManifest" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_patient_idx" ON "DocumentReference" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_encounter_idx" ON "DocumentReference" USING GIN("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_authenticator_idx" ON "DocumentReference" ("authenticator")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_author_idx" ON "DocumentReference" USING GIN("author")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_contenttype_idx" ON "DocumentReference" USING GIN("contenttype")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_custodian_idx" ON "DocumentReference" ("custodian")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_date_idx" ON "DocumentReference" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_description_idx" ON "DocumentReference" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_language_idx" ON "DocumentReference" USING GIN("language")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_location_idx" ON "DocumentReference" USING GIN("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_period_idx" ON "DocumentReference" ("period")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_related_idx" ON "DocumentReference" USING GIN("related")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_relatesto_idx" ON "DocumentReference" USING GIN("relatesto")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_relation_idx" ON "DocumentReference" USING GIN("relation")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_status_idx" ON "DocumentReference" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_subject_idx" ON "DocumentReference" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_relationship_idx" ON "DocumentReference" USING GIN("relationship")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_contextQuantity_idx" ON "EffectEvidenceSynthesis" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_date_idx" ON "EffectEvidenceSynthesis" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_description_idx" ON "EffectEvidenceSynthesis" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_effective_idx" ON "EffectEvidenceSynthesis" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_name_idx" ON "EffectEvidenceSynthesis" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_publisher_idx" ON "EffectEvidenceSynthesis" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_status_idx" ON "EffectEvidenceSynthesis" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_title_idx" ON "EffectEvidenceSynthesis" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_url_idx" ON "EffectEvidenceSynthesis" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_version_idx" ON "EffectEvidenceSynthesis" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_contextTypeQuantity_idx" ON "EffectEvidenceSynthesis" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_contextTypeValue_idx" ON "EffectEvidenceSynthesis" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_date_idx" ON "Encounter" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_patient_idx" ON "Encounter" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_account_idx" ON "Encounter" USING GIN("account")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_appointment_idx" ON "Encounter" USING GIN("appointment")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_basedOn_idx" ON "Encounter" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_diagnosis_idx" ON "Encounter" USING GIN("diagnosis")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_episodeOfCare_idx" ON "Encounter" USING GIN("episodeOfCare")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_length_idx" ON "Encounter" ("length")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_location_idx" ON "Encounter" USING GIN("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_locationPeriod_idx" ON "Encounter" USING GIN("locationPeriod")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_partOf_idx" ON "Encounter" ("partOf")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_participant_idx" ON "Encounter" USING GIN("participant")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_practitioner_idx" ON "Encounter" USING GIN("practitioner")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_reasonReference_idx" ON "Encounter" USING GIN("reasonReference")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_serviceProvider_idx" ON "Encounter" ("serviceProvider")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_status_idx" ON "Encounter" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_subject_idx" ON "Encounter" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint_name_idx" ON "Endpoint" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint_organization_idx" ON "Endpoint" ("organization")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint_status_idx" ON "Endpoint" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest_patient_idx" ON "EnrollmentRequest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest_status_idx" ON "EnrollmentRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest_subject_idx" ON "EnrollmentRequest" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse_request_idx" ON "EnrollmentResponse" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse_status_idx" ON "EnrollmentResponse" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_date_idx" ON "EpisodeOfCare" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_patient_idx" ON "EpisodeOfCare" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_careManager_idx" ON "EpisodeOfCare" ("careManager")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_condition_idx" ON "EpisodeOfCare" USING GIN("condition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_incomingReferral_idx" ON "EpisodeOfCare" USING GIN("incomingReferral")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_organization_idx" ON "EpisodeOfCare" ("organization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_status_idx" ON "EpisodeOfCare" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_composedOf_idx" ON "EventDefinition" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_contextQuantity_idx" ON "EventDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_date_idx" ON "EventDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_dependsOn_idx" ON "EventDefinition" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_derivedFrom_idx" ON "EventDefinition" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_description_idx" ON "EventDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_effective_idx" ON "EventDefinition" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_name_idx" ON "EventDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_predecessor_idx" ON "EventDefinition" USING GIN("predecessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_publisher_idx" ON "EventDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_status_idx" ON "EventDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_successor_idx" ON "EventDefinition" USING GIN("successor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_title_idx" ON "EventDefinition" ("title")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_url_idx" ON "EventDefinition" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_version_idx" ON "EventDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_contextTypeQuantity_idx" ON "EventDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_contextTypeValue_idx" ON "EventDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_composedOf_idx" ON "Evidence" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_contextQuantity_idx" ON "Evidence" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_date_idx" ON "Evidence" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_dependsOn_idx" ON "Evidence" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_derivedFrom_idx" ON "Evidence" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_description_idx" ON "Evidence" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_effective_idx" ON "Evidence" ("effective")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_name_idx" ON "Evidence" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_predecessor_idx" ON "Evidence" USING GIN("predecessor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_publisher_idx" ON "Evidence" ("publisher")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_status_idx" ON "Evidence" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_successor_idx" ON "Evidence" USING GIN("successor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_title_idx" ON "Evidence" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_url_idx" ON "Evidence" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_version_idx" ON "Evidence" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_contextTypeQuantity_idx" ON "Evidence" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_contextTypeValue_idx" ON "Evidence" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_composedOf_idx" ON "EvidenceVariable" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_contextQuantity_idx" ON "EvidenceVariable" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_date_idx" ON "EvidenceVariable" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_dependsOn_idx" ON "EvidenceVariable" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_derivedFrom_idx" ON "EvidenceVariable" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_description_idx" ON "EvidenceVariable" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_effective_idx" ON "EvidenceVariable" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_name_idx" ON "EvidenceVariable" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_predecessor_idx" ON "EvidenceVariable" USING GIN("predecessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_publisher_idx" ON "EvidenceVariable" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_status_idx" ON "EvidenceVariable" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_successor_idx" ON "EvidenceVariable" USING GIN("successor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_title_idx" ON "EvidenceVariable" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_url_idx" ON "EvidenceVariable" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_version_idx" ON "EvidenceVariable" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_contextTypeQuantity_idx" ON "EvidenceVariable" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_contextTypeValue_idx" ON "EvidenceVariable" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_contextQuantity_idx" ON "ExampleScenario" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_date_idx" ON "ExampleScenario" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_name_idx" ON "ExampleScenario" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_publisher_idx" ON "ExampleScenario" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_status_idx" ON "ExampleScenario" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_url_idx" ON "ExampleScenario" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_version_idx" ON "ExampleScenario" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_contextTypeQuantity_idx" ON "ExampleScenario" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_contextTypeValue_idx" ON "ExampleScenario" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_careTeam_idx" ON "ExplanationOfBenefit" USING GIN("careTeam")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_claim_idx" ON "ExplanationOfBenefit" ("claim")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_coverage_idx" ON "ExplanationOfBenefit" USING GIN("coverage")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_created_idx" ON "ExplanationOfBenefit" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_detailUdi_idx" ON "ExplanationOfBenefit" USING GIN("detailUdi")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_disposition_idx" ON "ExplanationOfBenefit" ("disposition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_encounter_idx" ON "ExplanationOfBenefit" USING GIN("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_enterer_idx" ON "ExplanationOfBenefit" ("enterer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_facility_idx" ON "ExplanationOfBenefit" ("facility")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_itemUdi_idx" ON "ExplanationOfBenefit" USING GIN("itemUdi")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_patient_idx" ON "ExplanationOfBenefit" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_payee_idx" ON "ExplanationOfBenefit" ("payee")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_procedureUdi_idx" ON "ExplanationOfBenefit" USING GIN("procedureUdi")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_provider_idx" ON "ExplanationOfBenefit" ("provider")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_status_idx" ON "ExplanationOfBenefit" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_subdetailUdi_idx" ON "ExplanationOfBenefit" USING GIN("subdetailUdi")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory_date_idx" ON "FamilyMemberHistory" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory_patient_idx" ON "FamilyMemberHistory" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory_instantiatesCanonical_idx" ON "FamilyMemberHistory" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory_instantiatesUri_idx" ON "FamilyMemberHistory" USING GIN("instantiatesUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory_status_idx" ON "FamilyMemberHistory" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag_date_idx" ON "Flag" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag_patient_idx" ON "Flag" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag_encounter_idx" ON "Flag" ("encounter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag_author_idx" ON "Flag" ("author")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag_subject_idx" ON "Flag" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal_patient_idx" ON "Goal" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal_lifecycleStatus_idx" ON "Goal" ("lifecycleStatus")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal_startDate_idx" ON "Goal" ("startDate")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal_subject_idx" ON "Goal" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal_targetDate_idx" ON "Goal" USING GIN("targetDate")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_contextQuantity_idx" ON "GraphDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_date_idx" ON "GraphDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_description_idx" ON "GraphDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_name_idx" ON "GraphDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_publisher_idx" ON "GraphDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_status_idx" ON "GraphDefinition" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_url_idx" ON "GraphDefinition" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_version_idx" ON "GraphDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_contextTypeQuantity_idx" ON "GraphDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_contextTypeValue_idx" ON "GraphDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_start_idx" ON "GraphDefinition" ("start")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_actual_idx" ON "Group" ("actual")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_exclude_idx" ON "Group" USING GIN("exclude")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_managingEntity_idx" ON "Group" ("managingEntity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_member_idx" ON "Group" USING GIN("member")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_type_idx" ON "Group" ("type")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_characteristicValue_idx" ON "Group" USING GIN("characteristicValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse_patient_idx" ON "GuidanceResponse" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse_request_idx" ON "GuidanceResponse" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse_subject_idx" ON "GuidanceResponse" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_active_idx" ON "HealthcareService" ("active")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_coverageArea_idx" ON "HealthcareService" USING GIN("coverageArea")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_endpoint_idx" ON "HealthcareService" USING GIN("endpoint")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_location_idx" ON "HealthcareService" USING GIN("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_name_idx" ON "HealthcareService" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_organization_idx" ON "HealthcareService" ("organization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_patient_idx" ON "ImagingStudy" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_basedon_idx" ON "ImagingStudy" USING GIN("basedon")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_encounter_idx" ON "ImagingStudy" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_endpoint_idx" ON "ImagingStudy" USING GIN("endpoint")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_instance_idx" ON "ImagingStudy" USING GIN("instance")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_interpreter_idx" ON "ImagingStudy" USING GIN("interpreter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_performer_idx" ON "ImagingStudy" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_referrer_idx" ON "ImagingStudy" ("referrer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_series_idx" ON "ImagingStudy" USING GIN("series")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_started_idx" ON "ImagingStudy" ("started")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_status_idx" ON "ImagingStudy" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_subject_idx" ON "ImagingStudy" ("subject")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_date_idx" ON "Immunization" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_patient_idx" ON "Immunization" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_location_idx" ON "Immunization" ("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_lotNumber_idx" ON "Immunization" ("lotNumber")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_manufacturer_idx" ON "Immunization" ("manufacturer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_performer_idx" ON "Immunization" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_reaction_idx" ON "Immunization" USING GIN("reaction")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_reactionDate_idx" ON "Immunization" USING GIN("reactionDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_reasonReference_idx" ON "Immunization" USING GIN("reasonReference")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_series_idx" ON "Immunization" USING GIN("series")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_status_idx" ON "Immunization" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation_date_idx" ON "ImmunizationEvaluation" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation_immunizationEvent_idx" ON "ImmunizationEvaluation" ("immunizationEvent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation_patient_idx" ON "ImmunizationEvaluation" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation_status_idx" ON "ImmunizationEvaluation" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation_date_idx" ON "ImmunizationRecommendation" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation_information_idx" ON "ImmunizationRecommendation" USING GIN("information")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation_patient_idx" ON "ImmunizationRecommendation" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation_support_idx" ON "ImmunizationRecommendation" USING GIN("support")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_contextQuantity_idx" ON "ImplementationGuide" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_date_idx" ON "ImplementationGuide" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_description_idx" ON "ImplementationGuide" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_name_idx" ON "ImplementationGuide" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_publisher_idx" ON "ImplementationGuide" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_status_idx" ON "ImplementationGuide" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_title_idx" ON "ImplementationGuide" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_url_idx" ON "ImplementationGuide" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_version_idx" ON "ImplementationGuide" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_contextTypeQuantity_idx" ON "ImplementationGuide" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_contextTypeValue_idx" ON "ImplementationGuide" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_dependsOn_idx" ON "ImplementationGuide" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_experimental_idx" ON "ImplementationGuide" ("experimental")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_global_idx" ON "ImplementationGuide" USING GIN("global")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_resource_idx" ON "ImplementationGuide" USING GIN("resource")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_administeredBy_idx" ON "InsurancePlan" ("administeredBy")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_endpoint_idx" ON "InsurancePlan" USING GIN("endpoint")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_name_idx" ON "InsurancePlan" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_ownedBy_idx" ON "InsurancePlan" ("ownedBy")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_phonetic_idx" ON "InsurancePlan" ("phonetic")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_status_idx" ON "InsurancePlan" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_account_idx" ON "Invoice" ("account")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_date_idx" ON "Invoice" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_issuer_idx" ON "Invoice" ("issuer")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_participant_idx" ON "Invoice" USING GIN("participant")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_patient_idx" ON "Invoice" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_recipient_idx" ON "Invoice" ("recipient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_status_idx" ON "Invoice" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_subject_idx" ON "Invoice" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_totalgross_idx" ON "Invoice" ("totalgross")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_totalnet_idx" ON "Invoice" ("totalnet")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_composedOf_idx" ON "Library" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_contentType_idx" ON "Library" USING GIN("contentType")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_contextQuantity_idx" ON "Library" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_date_idx" ON "Library" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_dependsOn_idx" ON "Library" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_derivedFrom_idx" ON "Library" USING GIN("derivedFrom")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_description_idx" ON "Library" ("description")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_effective_idx" ON "Library" ("effective")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_name_idx" ON "Library" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_predecessor_idx" ON "Library" USING GIN("predecessor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_publisher_idx" ON "Library" ("publisher")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_status_idx" ON "Library" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_successor_idx" ON "Library" USING GIN("successor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_title_idx" ON "Library" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_url_idx" ON "Library" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_version_idx" ON "Library" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_contextTypeQuantity_idx" ON "Library" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_contextTypeValue_idx" ON "Library" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage_author_idx" ON "Linkage" ("author")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage_item_idx" ON "Linkage" USING GIN("item")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage_source_idx" ON "Linkage" USING GIN("source")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_date_idx" ON "List" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_patient_idx" ON "List" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_encounter_idx" ON "List" ("encounter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_item_idx" ON "List" USING GIN("item")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_notes_idx" ON "List" USING GIN("notes")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_source_idx" ON "List" ("source")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_status_idx" ON "List" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_subject_idx" ON "List" ("subject")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_title_idx" ON "List" ("title")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_endpoint_idx" ON "Location" USING GIN("endpoint")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_name_idx" ON "Location" ("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_near_idx" ON "Location" ("near")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_organization_idx" ON "Location" ("organization")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_partof_idx" ON "Location" ("partof")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_status_idx" ON "Location" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_composedOf_idx" ON "Measure" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_contextQuantity_idx" ON "Measure" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_date_idx" ON "Measure" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_dependsOn_idx" ON "Measure" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_derivedFrom_idx" ON "Measure" USING GIN("derivedFrom")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_description_idx" ON "Measure" ("description")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_effective_idx" ON "Measure" ("effective")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_name_idx" ON "Measure" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_predecessor_idx" ON "Measure" USING GIN("predecessor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_publisher_idx" ON "Measure" ("publisher")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_status_idx" ON "Measure" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_successor_idx" ON "Measure" USING GIN("successor")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_title_idx" ON "Measure" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_url_idx" ON "Measure" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_version_idx" ON "Measure" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_contextTypeQuantity_idx" ON "Measure" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_contextTypeValue_idx" ON "Measure" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_date_idx" ON "MeasureReport" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_evaluatedResource_idx" ON "MeasureReport" USING GIN("evaluatedResource")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_measure_idx" ON "MeasureReport" ("measure")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_patient_idx" ON "MeasureReport" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_period_idx" ON "MeasureReport" ("period")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_reporter_idx" ON "MeasureReport" ("reporter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_status_idx" ON "MeasureReport" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_subject_idx" ON "MeasureReport" ("subject")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_basedOn_idx" ON "Media" USING GIN("basedOn")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_created_idx" ON "Media" ("created")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_device_idx" ON "Media" ("device")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_encounter_idx" ON "Media" ("encounter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_operator_idx" ON "Media" ("operator")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_patient_idx" ON "Media" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_status_idx" ON "Media" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_subject_idx" ON "Media" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication_expirationDate_idx" ON "Medication" ("expirationDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication_ingredient_idx" ON "Medication" USING GIN("ingredient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication_lotNumber_idx" ON "Medication" ("lotNumber")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication_manufacturer_idx" ON "Medication" ("manufacturer")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication_status_idx" ON "Medication" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_patient_idx" ON "MedicationAdministration" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_context_idx" ON "MedicationAdministration" ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_device_idx" ON "MedicationAdministration" USING GIN("device")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_effectiveTime_idx" ON "MedicationAdministration" ("effectiveTime")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_medication_idx" ON "MedicationAdministration" ("medication")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_performer_idx" ON "MedicationAdministration" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_request_idx" ON "MedicationAdministration" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_status_idx" ON "MedicationAdministration" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_subject_idx" ON "MedicationAdministration" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_patient_idx" ON "MedicationDispense" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_medication_idx" ON "MedicationDispense" ("medication")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_status_idx" ON "MedicationDispense" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_context_idx" ON "MedicationDispense" ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_destination_idx" ON "MedicationDispense" ("destination")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_performer_idx" ON "MedicationDispense" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_prescription_idx" ON "MedicationDispense" USING GIN("prescription")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_receiver_idx" ON "MedicationDispense" USING GIN("receiver")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_responsibleparty_idx" ON "MedicationDispense" USING GIN("responsibleparty")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_subject_idx" ON "MedicationDispense" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_whenhandedover_idx" ON "MedicationDispense" ("whenhandedover")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_whenprepared_idx" ON "MedicationDispense" ("whenprepared")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_ingredient_idx" ON "MedicationKnowledge" USING GIN("ingredient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_manufacturer_idx" ON "MedicationKnowledge" ("manufacturer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_monitoringProgramName_idx" ON "MedicationKnowledge" USING GIN("monitoringProgramName")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_monograph_idx" ON "MedicationKnowledge" USING GIN("monograph")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_sourceCost_idx" ON "MedicationKnowledge" USING GIN("sourceCost")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_status_idx" ON "MedicationKnowledge" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_patient_idx" ON "MedicationRequest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_medication_idx" ON "MedicationRequest" ("medication")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_status_idx" ON "MedicationRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_authoredon_idx" ON "MedicationRequest" ("authoredon")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_date_idx" ON "MedicationRequest" USING GIN("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_encounter_idx" ON "MedicationRequest" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_intendedDispenser_idx" ON "MedicationRequest" ("intendedDispenser")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_intendedPerformer_idx" ON "MedicationRequest" ("intendedPerformer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_intent_idx" ON "MedicationRequest" ("intent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_priority_idx" ON "MedicationRequest" ("priority")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_requester_idx" ON "MedicationRequest" ("requester")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_subject_idx" ON "MedicationRequest" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_patient_idx" ON "MedicationStatement" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_medication_idx" ON "MedicationStatement" ("medication")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_status_idx" ON "MedicationStatement" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_context_idx" ON "MedicationStatement" ("context")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_effective_idx" ON "MedicationStatement" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_partOf_idx" ON "MedicationStatement" USING GIN("partOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_source_idx" ON "MedicationStatement" ("source")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_subject_idx" ON "MedicationStatement" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct_name_idx" ON "MedicinalProduct" USING GIN("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductAuthorization_holder_idx" ON "MedicinalProductAuthorization" ("holder")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductAuthorization_subject_idx" ON "MedicinalProductAuthorization" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductContraindication_subject_idx" ON "MedicinalProductContraindication" USING GIN("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIndication_subject_idx" ON "MedicinalProductIndication" USING GIN("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductInteraction_subject_idx" ON "MedicinalProductInteraction" USING GIN("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged_subject_idx" ON "MedicinalProductPackaged" USING GIN("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductUndesirableEffect_subject_idx" ON "MedicinalProductUndesirableEffect" USING GIN("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_contextQuantity_idx" ON "MessageDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_date_idx" ON "MessageDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_description_idx" ON "MessageDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_name_idx" ON "MessageDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_publisher_idx" ON "MessageDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_status_idx" ON "MessageDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_title_idx" ON "MessageDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_url_idx" ON "MessageDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_version_idx" ON "MessageDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_contextTypeQuantity_idx" ON "MessageDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_contextTypeValue_idx" ON "MessageDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_category_idx" ON "MessageDefinition" ("category")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_focus_idx" ON "MessageDefinition" USING GIN("focus")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_parent_idx" ON "MessageDefinition" USING GIN("parent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_author_idx" ON "MessageHeader" ("author")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_code_idx" ON "MessageHeader" ("code")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_destination_idx" ON "MessageHeader" USING GIN("destination")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_destinationUri_idx" ON "MessageHeader" USING GIN("destinationUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_enterer_idx" ON "MessageHeader" ("enterer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_focus_idx" ON "MessageHeader" USING GIN("focus")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_receiver_idx" ON "MessageHeader" USING GIN("receiver")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_responseId_idx" ON "MessageHeader" ("responseId")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_responsible_idx" ON "MessageHeader" ("responsible")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_sender_idx" ON "MessageHeader" ("sender")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_source_idx" ON "MessageHeader" ("source")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_sourceUri_idx" ON "MessageHeader" ("sourceUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_target_idx" ON "MessageHeader" USING GIN("target")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_patient_idx" ON "MolecularSequence" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_type_idx" ON "MolecularSequence" ("type")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_variantEnd_idx" ON "MolecularSequence" USING GIN("variantEnd")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_variantStart_idx" ON "MolecularSequence" USING GIN("variantStart")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_windowEnd_idx" ON "MolecularSequence" ("windowEnd")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_windowStart_idx" ON "MolecularSequence" ("windowStart")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_chromosomeVariantCoordinate_idx" ON "MolecularSequence" USING GIN("chromosomeVariantCoordinate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_chromosomeWindowCoordinate_idx" ON "MolecularSequence" ("chromosomeWindowCoordinate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_referenceseqidVariantCoordinate_idx" ON "MolecularSequence" USING GIN("referenceseqidVariantCoordinate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_referenceseqidWindowCoordinate_idx" ON "MolecularSequence" ("referenceseqidWindowCoordinate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_contextQuantity_idx" ON "NamingSystem" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_date_idx" ON "NamingSystem" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_description_idx" ON "NamingSystem" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_name_idx" ON "NamingSystem" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_publisher_idx" ON "NamingSystem" ("publisher")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_status_idx" ON "NamingSystem" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_contextTypeQuantity_idx" ON "NamingSystem" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_contextTypeValue_idx" ON "NamingSystem" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_contact_idx" ON "NamingSystem" USING GIN("contact")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_idType_idx" ON "NamingSystem" USING GIN("idType")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_kind_idx" ON "NamingSystem" ("kind")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_period_idx" ON "NamingSystem" USING GIN("period")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_responsible_idx" ON "NamingSystem" ("responsible")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_value_idx" ON "NamingSystem" USING GIN("value")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_patient_idx" ON "NutritionOrder" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_encounter_idx" ON "NutritionOrder" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_datetime_idx" ON "NutritionOrder" ("datetime")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_instantiatesCanonical_idx" ON "NutritionOrder" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_instantiatesUri_idx" ON "NutritionOrder" USING GIN("instantiatesUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_provider_idx" ON "NutritionOrder" ("provider")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_status_idx" ON "NutritionOrder" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_date_idx" ON "Observation" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_patient_idx" ON "Observation" ("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_encounter_idx" ON "Observation" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_basedOn_idx" ON "Observation" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_comboValueQuantity_idx" ON "Observation" ("comboValueQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_componentValueQuantity_idx" ON "Observation" USING GIN("componentValueQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_derivedFrom_idx" ON "Observation" USING GIN("derivedFrom")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_device_idx" ON "Observation" ("device")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_focus_idx" ON "Observation" USING GIN("focus")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_hasMember_idx" ON "Observation" USING GIN("hasMember")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_partOf_idx" ON "Observation" USING GIN("partOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_performer_idx" ON "Observation" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_specimen_idx" ON "Observation" ("specimen")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_status_idx" ON "Observation" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_subject_idx" ON "Observation" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_valueDate_idx" ON "Observation" ("valueDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_valueQuantity_idx" ON "Observation" ("valueQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_valueString_idx" ON "Observation" ("valueString")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_codeValueConcept_idx" ON "Observation" ("codeValueConcept")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_codeValueDate_idx" ON "Observation" ("codeValueDate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_codeValueQuantity_idx" ON "Observation" ("codeValueQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_codeValueString_idx" ON "Observation" ("codeValueString")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_comboCodeValueConcept_idx" ON "Observation" USING GIN("comboCodeValueConcept")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_comboCodeValueQuantity_idx" ON "Observation" USING GIN("comboCodeValueQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_componentCodeValueConcept_idx" ON "Observation" USING GIN("componentCodeValueConcept")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_componentCodeValueQuantity_idx" ON "Observation" USING GIN("componentCodeValueQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition_publisher_idx" ON "ObservationDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_contextQuantity_idx" ON "OperationDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_date_idx" ON "OperationDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_description_idx" ON "OperationDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_name_idx" ON "OperationDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_publisher_idx" ON "OperationDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_status_idx" ON "OperationDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_title_idx" ON "OperationDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_url_idx" ON "OperationDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_version_idx" ON "OperationDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_contextTypeQuantity_idx" ON "OperationDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_contextTypeValue_idx" ON "OperationDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_base_idx" ON "OperationDefinition" ("base")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_code_idx" ON "OperationDefinition" ("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_inputProfile_idx" ON "OperationDefinition" ("inputProfile")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_instance_idx" ON "OperationDefinition" ("instance")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_kind_idx" ON "OperationDefinition" ("kind")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_outputProfile_idx" ON "OperationDefinition" ("outputProfile")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_system_idx" ON "OperationDefinition" ("system")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_type_idx" ON "OperationDefinition" ("type")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization_active_idx" ON "Organization" ("active")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization_endpoint_idx" ON "Organization" USING GIN("endpoint")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization_name_idx" ON "Organization" ("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization_partof_idx" ON "Organization" ("partof")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization_phonetic_idx" ON "Organization" ("phonetic")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_active_idx" ON "OrganizationAffiliation" ("active")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_date_idx" ON "OrganizationAffiliation" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_endpoint_idx" ON "OrganizationAffiliation" USING GIN("endpoint")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_location_idx" ON "OrganizationAffiliation" USING GIN("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_network_idx" ON "OrganizationAffiliation" USING GIN("network")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_participatingOrganization_idx" ON "OrganizationAffiliation" ("participatingOrganization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_primaryOrganization_idx" ON "OrganizationAffiliation" ("primaryOrganization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_service_idx" ON "OrganizationAffiliation" USING GIN("service")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_active_idx" ON "Patient" ("active")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_birthdate_idx" ON "Patient" ("birthdate")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_deathDate_idx" ON "Patient" ("deathDate")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_deceased_idx" ON "Patient" ("deceased")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_gender_idx" ON "Patient" ("gender")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_generalPractitioner_idx" ON "Patient" USING GIN("generalPractitioner")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_link_idx" ON "Patient" USING GIN("link")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_organization_idx" ON "Patient" ("organization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_phonetic_idx" ON "Patient" USING GIN("phonetic")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice_created_idx" ON "PaymentNotice" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice_provider_idx" ON "PaymentNotice" ("provider")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice_request_idx" ON "PaymentNotice" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice_response_idx" ON "PaymentNotice" ("response")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice_status_idx" ON "PaymentNotice" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_created_idx" ON "PaymentReconciliation" ("created")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_disposition_idx" ON "PaymentReconciliation" ("disposition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_outcome_idx" ON "PaymentReconciliation" ("outcome")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_paymentIssuer_idx" ON "PaymentReconciliation" ("paymentIssuer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_request_idx" ON "PaymentReconciliation" ("request")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_requestor_idx" ON "PaymentReconciliation" ("requestor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_status_idx" ON "PaymentReconciliation" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_birthdate_idx" ON "Person" ("birthdate")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_gender_idx" ON "Person" ("gender")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_phonetic_idx" ON "Person" USING GIN("phonetic")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_link_idx" ON "Person" USING GIN("link")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_organization_idx" ON "Person" ("organization")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_patient_idx" ON "Person" USING GIN("patient")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_practitioner_idx" ON "Person" USING GIN("practitioner")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_relatedperson_idx" ON "Person" USING GIN("relatedperson")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_composedOf_idx" ON "PlanDefinition" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_contextQuantity_idx" ON "PlanDefinition" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_date_idx" ON "PlanDefinition" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_definition_idx" ON "PlanDefinition" USING GIN("definition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_dependsOn_idx" ON "PlanDefinition" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_derivedFrom_idx" ON "PlanDefinition" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_description_idx" ON "PlanDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_effective_idx" ON "PlanDefinition" ("effective")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_name_idx" ON "PlanDefinition" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_predecessor_idx" ON "PlanDefinition" USING GIN("predecessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_publisher_idx" ON "PlanDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_status_idx" ON "PlanDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_successor_idx" ON "PlanDefinition" USING GIN("successor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_title_idx" ON "PlanDefinition" ("title")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_url_idx" ON "PlanDefinition" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_version_idx" ON "PlanDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_contextTypeQuantity_idx" ON "PlanDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_contextTypeValue_idx" ON "PlanDefinition" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner_gender_idx" ON "Practitioner" ("gender")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner_phonetic_idx" ON "Practitioner" USING GIN("phonetic")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner_active_idx" ON "Practitioner" ("active")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_active_idx" ON "PractitionerRole" ("active")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_date_idx" ON "PractitionerRole" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_endpoint_idx" ON "PractitionerRole" USING GIN("endpoint")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_location_idx" ON "PractitionerRole" USING GIN("location")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_organization_idx" ON "PractitionerRole" ("organization")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_practitioner_idx" ON "PractitionerRole" ("practitioner")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_service_idx" ON "PractitionerRole" USING GIN("service")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_date_idx" ON "Procedure" ("date")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_patient_idx" ON "Procedure" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_encounter_idx" ON "Procedure" ("encounter")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_basedOn_idx" ON "Procedure" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_instantiatesCanonical_idx" ON "Procedure" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_instantiatesUri_idx" ON "Procedure" USING GIN("instantiatesUri")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_location_idx" ON "Procedure" ("location")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_partOf_idx" ON "Procedure" USING GIN("partOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_performer_idx" ON "Procedure" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_reasonReference_idx" ON "Procedure" USING GIN("reasonReference")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_status_idx" ON "Procedure" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_subject_idx" ON "Procedure" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_agent_idx" ON "Provenance" USING GIN("agent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_entity_idx" ON "Provenance" USING GIN("entity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_location_idx" ON "Provenance" ("location")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_patient_idx" ON "Provenance" USING GIN("patient")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_recorded_idx" ON "Provenance" ("recorded")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_target_idx" ON "Provenance" USING GIN("target")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_when_idx" ON "Provenance" ("when")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_contextQuantity_idx" ON "Questionnaire" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_date_idx" ON "Questionnaire" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_definition_idx" ON "Questionnaire" USING GIN("definition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_description_idx" ON "Questionnaire" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_effective_idx" ON "Questionnaire" ("effective")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_name_idx" ON "Questionnaire" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_publisher_idx" ON "Questionnaire" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_status_idx" ON "Questionnaire" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_subjectType_idx" ON "Questionnaire" USING GIN("subjectType")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_title_idx" ON "Questionnaire" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_url_idx" ON "Questionnaire" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_version_idx" ON "Questionnaire" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_contextTypeQuantity_idx" ON "Questionnaire" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_contextTypeValue_idx" ON "Questionnaire" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_author_idx" ON "QuestionnaireResponse" ("author")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_authored_idx" ON "QuestionnaireResponse" ("authored")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_basedOn_idx" ON "QuestionnaireResponse" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_encounter_idx" ON "QuestionnaireResponse" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_partOf_idx" ON "QuestionnaireResponse" USING GIN("partOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_patient_idx" ON "QuestionnaireResponse" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_questionnaire_idx" ON "QuestionnaireResponse" ("questionnaire")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_source_idx" ON "QuestionnaireResponse" ("source")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_status_idx" ON "QuestionnaireResponse" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_subject_idx" ON "QuestionnaireResponse" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson_birthdate_idx" ON "RelatedPerson" ("birthdate")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson_gender_idx" ON "RelatedPerson" ("gender")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson_phonetic_idx" ON "RelatedPerson" USING GIN("phonetic")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson_active_idx" ON "RelatedPerson" ("active")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson_patient_idx" ON "RelatedPerson" ("patient")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_author_idx" ON "RequestGroup" ("author")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_authored_idx" ON "RequestGroup" ("authored")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_encounter_idx" ON "RequestGroup" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_groupIdentifier_idx" ON "RequestGroup" ("groupIdentifier")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_instantiatesCanonical_idx" ON "RequestGroup" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_instantiatesUri_idx" ON "RequestGroup" USING GIN("instantiatesUri")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_intent_idx" ON "RequestGroup" ("intent")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_participant_idx" ON "RequestGroup" USING GIN("participant")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_patient_idx" ON "RequestGroup" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_priority_idx" ON "RequestGroup" ("priority")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_status_idx" ON "RequestGroup" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_subject_idx" ON "RequestGroup" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_composedOf_idx" ON "ResearchDefinition" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_contextQuantity_idx" ON "ResearchDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_date_idx" ON "ResearchDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_dependsOn_idx" ON "ResearchDefinition" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_derivedFrom_idx" ON "ResearchDefinition" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_description_idx" ON "ResearchDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_effective_idx" ON "ResearchDefinition" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_name_idx" ON "ResearchDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_predecessor_idx" ON "ResearchDefinition" USING GIN("predecessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_publisher_idx" ON "ResearchDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_status_idx" ON "ResearchDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_successor_idx" ON "ResearchDefinition" USING GIN("successor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_title_idx" ON "ResearchDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_url_idx" ON "ResearchDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_version_idx" ON "ResearchDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_contextTypeQuantity_idx" ON "ResearchDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_contextTypeValue_idx" ON "ResearchDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_composedOf_idx" ON "ResearchElementDefinition" USING GIN("composedOf")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_contextQuantity_idx" ON "ResearchElementDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_date_idx" ON "ResearchElementDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_dependsOn_idx" ON "ResearchElementDefinition" USING GIN("dependsOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_derivedFrom_idx" ON "ResearchElementDefinition" USING GIN("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_description_idx" ON "ResearchElementDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_effective_idx" ON "ResearchElementDefinition" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_name_idx" ON "ResearchElementDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_predecessor_idx" ON "ResearchElementDefinition" USING GIN("predecessor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_publisher_idx" ON "ResearchElementDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_status_idx" ON "ResearchElementDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_successor_idx" ON "ResearchElementDefinition" USING GIN("successor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_title_idx" ON "ResearchElementDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_url_idx" ON "ResearchElementDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_version_idx" ON "ResearchElementDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_contextTypeQuantity_idx" ON "ResearchElementDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_contextTypeValue_idx" ON "ResearchElementDefinition" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_date_idx" ON "ResearchStudy" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_partof_idx" ON "ResearchStudy" USING GIN("partof")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_principalinvestigator_idx" ON "ResearchStudy" ("principalinvestigator")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_protocol_idx" ON "ResearchStudy" USING GIN("protocol")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_site_idx" ON "ResearchStudy" USING GIN("site")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_sponsor_idx" ON "ResearchStudy" ("sponsor")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_status_idx" ON "ResearchStudy" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_title_idx" ON "ResearchStudy" ("title")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject_date_idx" ON "ResearchSubject" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject_individual_idx" ON "ResearchSubject" ("individual")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject_patient_idx" ON "ResearchSubject" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject_status_idx" ON "ResearchSubject" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject_study_idx" ON "ResearchSubject" ("study")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_date_idx" ON "RiskAssessment" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_patient_idx" ON "RiskAssessment" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_encounter_idx" ON "RiskAssessment" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_condition_idx" ON "RiskAssessment" ("condition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_performer_idx" ON "RiskAssessment" ("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_probability_idx" ON "RiskAssessment" USING GIN("probability")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_subject_idx" ON "RiskAssessment" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_contextQuantity_idx" ON "RiskEvidenceSynthesis" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_date_idx" ON "RiskEvidenceSynthesis" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_description_idx" ON "RiskEvidenceSynthesis" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_effective_idx" ON "RiskEvidenceSynthesis" ("effective")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_name_idx" ON "RiskEvidenceSynthesis" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_publisher_idx" ON "RiskEvidenceSynthesis" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_status_idx" ON "RiskEvidenceSynthesis" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_title_idx" ON "RiskEvidenceSynthesis" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_url_idx" ON "RiskEvidenceSynthesis" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_version_idx" ON "RiskEvidenceSynthesis" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_contextTypeQuantity_idx" ON "RiskEvidenceSynthesis" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_contextTypeValue_idx" ON "RiskEvidenceSynthesis" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule_active_idx" ON "Schedule" ("active")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule_actor_idx" ON "Schedule" USING GIN("actor")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule_date_idx" ON "Schedule" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_contextQuantity_idx" ON "SearchParameter" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_date_idx" ON "SearchParameter" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_description_idx" ON "SearchParameter" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_name_idx" ON "SearchParameter" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_publisher_idx" ON "SearchParameter" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_status_idx" ON "SearchParameter" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_url_idx" ON "SearchParameter" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_version_idx" ON "SearchParameter" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_contextTypeQuantity_idx" ON "SearchParameter" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_contextTypeValue_idx" ON "SearchParameter" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_base_idx" ON "SearchParameter" USING GIN("base")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_code_idx" ON "SearchParameter" ("code")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_component_idx" ON "SearchParameter" USING GIN("component")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_derivedFrom_idx" ON "SearchParameter" ("derivedFrom")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_target_idx" ON "SearchParameter" USING GIN("target")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_type_idx" ON "SearchParameter" ("type")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_patient_idx" ON "ServiceRequest" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_encounter_idx" ON "ServiceRequest" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_authored_idx" ON "ServiceRequest" ("authored")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_basedOn_idx" ON "ServiceRequest" USING GIN("basedOn")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_instantiatesCanonical_idx" ON "ServiceRequest" USING GIN("instantiatesCanonical")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_instantiatesUri_idx" ON "ServiceRequest" USING GIN("instantiatesUri")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_intent_idx" ON "ServiceRequest" ("intent")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_occurrence_idx" ON "ServiceRequest" ("occurrence")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_orderDetail_idx" ON "ServiceRequest" USING GIN("orderDetail")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_performer_idx" ON "ServiceRequest" USING GIN("performer")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_priority_idx" ON "ServiceRequest" ("priority")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_replaces_idx" ON "ServiceRequest" USING GIN("replaces")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_requester_idx" ON "ServiceRequest" ("requester")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_requisition_idx" ON "ServiceRequest" ("requisition")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_specimen_idx" ON "ServiceRequest" USING GIN("specimen")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_status_idx" ON "ServiceRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_subject_idx" ON "ServiceRequest" ("subject")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot_schedule_idx" ON "Slot" ("schedule")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot_start_idx" ON "Slot" ("start")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot_status_idx" ON "Slot" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_accession_idx" ON "Specimen" ("accession")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_collected_idx" ON "Specimen" ("collected")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_collector_idx" ON "Specimen" ("collector")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_containerId_idx" ON "Specimen" USING GIN("containerId")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_parent_idx" ON "Specimen" USING GIN("parent")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_patient_idx" ON "Specimen" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_status_idx" ON "Specimen" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_subject_idx" ON "Specimen" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_contextQuantity_idx" ON "StructureDefinition" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_date_idx" ON "StructureDefinition" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_description_idx" ON "StructureDefinition" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_name_idx" ON "StructureDefinition" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_publisher_idx" ON "StructureDefinition" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_status_idx" ON "StructureDefinition" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_title_idx" ON "StructureDefinition" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_url_idx" ON "StructureDefinition" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_version_idx" ON "StructureDefinition" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_contextTypeQuantity_idx" ON "StructureDefinition" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_contextTypeValue_idx" ON "StructureDefinition" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_abstract_idx" ON "StructureDefinition" ("abstract")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_base_idx" ON "StructureDefinition" ("base")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_basePath_idx" ON "StructureDefinition" USING GIN("basePath")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_derivation_idx" ON "StructureDefinition" ("derivation")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_experimental_idx" ON "StructureDefinition" ("experimental")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_extContext_idx" ON "StructureDefinition" USING GIN("extContext")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_kind_idx" ON "StructureDefinition" ("kind")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_path_idx" ON "StructureDefinition" USING GIN("path")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_type_idx" ON "StructureDefinition" ("type")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_valueset_idx" ON "StructureDefinition" USING GIN("valueset")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_contextQuantity_idx" ON "StructureMap" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_date_idx" ON "StructureMap" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_description_idx" ON "StructureMap" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_name_idx" ON "StructureMap" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_publisher_idx" ON "StructureMap" ("publisher")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_status_idx" ON "StructureMap" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_title_idx" ON "StructureMap" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_url_idx" ON "StructureMap" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_version_idx" ON "StructureMap" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_contextTypeQuantity_idx" ON "StructureMap" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_contextTypeValue_idx" ON "StructureMap" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription_criteria_idx" ON "Subscription" ("criteria")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription_payload_idx" ON "Subscription" ("payload")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription_status_idx" ON "Subscription" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription_type_idx" ON "Subscription" ("type")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription_url_idx" ON "Subscription" ("url")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance_containerIdentifier_idx" ON "Substance" USING GIN("containerIdentifier")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance_expiry_idx" ON "Substance" USING GIN("expiry")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance_quantity_idx" ON "Substance" USING GIN("quantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance_status_idx" ON "Substance" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance_substanceReference_idx" ON "Substance" USING GIN("substanceReference")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery_patient_idx" ON "SupplyDelivery" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery_receiver_idx" ON "SupplyDelivery" USING GIN("receiver")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery_status_idx" ON "SupplyDelivery" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery_supplier_idx" ON "SupplyDelivery" ("supplier")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest_date_idx" ON "SupplyRequest" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest_requester_idx" ON "SupplyRequest" ("requester")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest_status_idx" ON "SupplyRequest" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest_subject_idx" ON "SupplyRequest" ("subject")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest_supplier_idx" ON "SupplyRequest" USING GIN("supplier")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_authoredOn_idx" ON "Task" ("authoredOn")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_basedOn_idx" ON "Task" USING GIN("basedOn")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_encounter_idx" ON "Task" ("encounter")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_focus_idx" ON "Task" ("focus")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_groupIdentifier_idx" ON "Task" ("groupIdentifier")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_intent_idx" ON "Task" ("intent")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_modified_idx" ON "Task" ("modified")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_owner_idx" ON "Task" ("owner")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_partOf_idx" ON "Task" USING GIN("partOf")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_patient_idx" ON "Task" ("patient")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_period_idx" ON "Task" ("period")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_priority_idx" ON "Task" ("priority")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_requester_idx" ON "Task" ("requester")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_status_idx" ON "Task" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_subject_idx" ON "Task" ("subject")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_contextQuantity_idx" ON "TerminologyCapabilities" USING GIN("contextQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_date_idx" ON "TerminologyCapabilities" ("date")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_description_idx" ON "TerminologyCapabilities" ("description")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_name_idx" ON "TerminologyCapabilities" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_publisher_idx" ON "TerminologyCapabilities" ("publisher")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_status_idx" ON "TerminologyCapabilities" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_title_idx" ON "TerminologyCapabilities" ("title")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_url_idx" ON "TerminologyCapabilities" ("url")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_version_idx" ON "TerminologyCapabilities" ("version")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_contextTypeQuantity_idx" ON "TerminologyCapabilities" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_contextTypeValue_idx" ON "TerminologyCapabilities" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport_issued_idx" ON "TestReport" ("issued")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport_participant_idx" ON "TestReport" USING GIN("participant")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport_result_idx" ON "TestReport" ("result")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport_tester_idx" ON "TestReport" ("tester")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport_testscript_idx" ON "TestReport" ("testscript")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_contextQuantity_idx" ON "TestScript" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_date_idx" ON "TestScript" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_description_idx" ON "TestScript" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_name_idx" ON "TestScript" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_publisher_idx" ON "TestScript" ("publisher")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_status_idx" ON "TestScript" ("status")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_testscriptCapability_idx" ON "TestScript" USING GIN("testscriptCapability")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_title_idx" ON "TestScript" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_url_idx" ON "TestScript" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_version_idx" ON "TestScript" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_contextTypeQuantity_idx" ON "TestScript" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_contextTypeValue_idx" ON "TestScript" USING GIN("contextTypeValue")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_contextQuantity_idx" ON "ValueSet" USING GIN("contextQuantity")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_date_idx" ON "ValueSet" ("date")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_description_idx" ON "ValueSet" ("description")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_name_idx" ON "ValueSet" ("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_publisher_idx" ON "ValueSet" ("publisher")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_status_idx" ON "ValueSet" ("status")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_title_idx" ON "ValueSet" ("title")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_url_idx" ON "ValueSet" ("url")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_version_idx" ON "ValueSet" ("version")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_contextTypeQuantity_idx" ON "ValueSet" USING GIN("contextTypeQuantity")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_contextTypeValue_idx" ON "ValueSet" USING GIN("contextTypeValue")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_code_idx" ON "ValueSet" USING GIN("code")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_expansion_idx" ON "ValueSet" ("expansion")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_reference_idx" ON "ValueSet" USING GIN("reference")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "VerificationResult_target_idx" ON "VerificationResult" USING GIN("target")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription_patient_idx" ON "VisionPrescription" ("patient")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription_encounter_idx" ON "VisionPrescription" ("encounter")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription_datewritten_idx" ON "VisionPrescription" ("datewritten")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription_prescriber_idx" ON "VisionPrescription" ("prescriber")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription_status_idx" ON "VisionPrescription" ("status")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project_name_idx" ON "Project" ("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project_owner_idx" ON "Project" ("owner")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project_googleClientId_idx" ON "Project" USING GIN("googleClientId")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project_recaptchaSiteKey_idx" ON "Project" USING GIN("recaptchaSiteKey")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClientApplication_name_idx" ON "ClientApplication" ("name")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "User_email_idx" ON "User" ("email")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "User_externalId_idx" ON "User" ("externalId")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "User_project_idx" ON "User" ("project")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership_project_idx" ON "ProjectMembership" ("project")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership_user_idx" ON "ProjectMembership" ("user")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership_profile_idx" ON "ProjectMembership" ("profile")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership_profileType_idx" ON "ProjectMembership" ("profileType")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership_externalId_idx" ON "ProjectMembership" ("externalId")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot_name_idx" ON "Bot" ("name")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login_user_idx" ON "Login" ("user")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login_code_idx" ON "Login" ("code")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login_cookie_idx" ON "Login" ("cookie")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "PasswordChangeRequest_user_idx" ON "PasswordChangeRequest" ("user")'
  );
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "JsonWebKey_active_idx" ON "JsonWebKey" ("active")');
  await client.query('CREATE INDEX CONCURRENTLY IF NOT EXISTS "AccessPolicy_name_idx" ON "AccessPolicy" ("name")');
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserConfiguration_name_idx" ON "UserConfiguration" ("name")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "BulkDataExport_status_idx" ON "BulkDataExport" ("status")'
  );
  await client.query(
    'CREATE INDEX CONCURRENTLY IF NOT EXISTS "DomainConfiguration_domain_idx" ON "DomainConfiguration" ("domain")'
  );
}
