/*
 * Generated by @medplum/generator
 * Do not edit manually.
 */

import { PoolClient } from 'pg';

export async function run(client: PoolClient): Promise<void> {
  await client.query(`CREATE TABLE IF NOT EXISTS "Account" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "name" TEXT,
    "owner" TEXT,
    "patient" TEXT,
    "period" TEXT,
    "status" TEXT,
    "subject" TEXT[],
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Account_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ActivityDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ActivityDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AdverseEvent" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "actuality" TEXT,
    "category" TEXT[],
    "date" TEXT,
    "event" TEXT,
    "location" TEXT,
    "recorder" TEXT,
    "resultingcondition" TEXT,
    "seriousness" TEXT,
    "severity" TEXT,
    "study" TEXT[],
    "subject" TEXT,
    "substance" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AdverseEvent_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AllergyIntolerance" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "asserter" TEXT,
    "category" TEXT[],
    "clinicalStatus" TEXT,
    "code" TEXT,
    "criticality" TEXT,
    "date" TEXT,
    "lastDate" TEXT,
    "manifestation" TEXT,
    "onset" TEXT,
    "patient" TEXT,
    "recorder" TEXT,
    "route" TEXT,
    "severity" TEXT,
    "type" TEXT,
    "verificationStatus" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AllergyIntolerance_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Appointment" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "actor" TEXT,
    "appointmentType" TEXT,
    "basedOn" TEXT,
    "date" TEXT,
    "location" TEXT,
    "partStatus" TEXT,
    "patient" TEXT,
    "practitioner" TEXT,
    "reasonCode" TEXT,
    "reasonReference" TEXT,
    "serviceCategory" TEXT,
    "serviceType" TEXT,
    "slot" TEXT[],
    "specialty" TEXT[],
    "status" TEXT,
    "supportingInfo" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Appointment_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AppointmentResponse" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "actor" TEXT,
    "appointment" TEXT,
    "location" TEXT,
    "partStatus" TEXT,
    "patient" TEXT,
    "practitioner" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AppointmentResponse_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AuditEvent" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "action" TEXT,
    "address" TEXT,
    "agent" TEXT[],
    "agentName" TEXT,
    "agentRole" TEXT,
    "altid" TEXT,
    "date" TEXT,
    "entity" TEXT[],
    "entityName" TEXT,
    "entityRole" TEXT,
    "entityType" TEXT,
    "outcome" TEXT,
    "patient" TEXT,
    "policy" TEXT,
    "site" TEXT,
    "source" TEXT,
    "subtype" TEXT[],
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "AuditEvent_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Basic" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "author" TEXT,
    "code" TEXT,
    "created" TEXT,
    "patient" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Basic_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Binary" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Binary_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "BiologicallyDerivedProduct" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "BiologicallyDerivedProduct_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "BodyStructure" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "location" TEXT,
    "morphology" TEXT,
    "patient" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "BodyStructure_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Bundle" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composition" TEXT,
    "message" TEXT,
    "timestamp" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Bundle_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CapabilityStatement" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "fhirversion" TEXT,
    "format" TEXT[],
    "guide" TEXT,
    "jurisdiction" TEXT[],
    "mode" TEXT,
    "name" TEXT,
    "publisher" TEXT,
    "resource" TEXT,
    "resourceProfile" TEXT,
    "securityService" TEXT,
    "software" TEXT,
    "status" TEXT,
    "supportedProfile" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CapabilityStatement_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CarePlan" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "activityCode" TEXT,
    "activityDate" TEXT,
    "activityReference" TEXT,
    "basedOn" TEXT,
    "careTeam" TEXT,
    "category" TEXT[],
    "condition" TEXT,
    "encounter" TEXT,
    "goal" TEXT[],
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "intent" TEXT,
    "partOf" TEXT,
    "performer" TEXT,
    "replaces" TEXT[],
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CarePlan_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CareTeam" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "category" TEXT[],
    "encounter" TEXT,
    "participant" TEXT[],
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CareTeam_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CatalogEntry" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CatalogEntry_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ChargeItem" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "account" TEXT[],
    "code" TEXT,
    "context" TEXT,
    "enteredDate" TEXT,
    "enterer" TEXT,
    "factorOverride" TEXT,
    "occurrence" TEXT,
    "patient" TEXT,
    "performerActor" TEXT,
    "performerFunction" TEXT,
    "performingOrganization" TEXT,
    "priceOverride" TEXT,
    "quantity" TEXT,
    "requestingOrganization" TEXT,
    "service" TEXT[],
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ChargeItem_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ChargeItemDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ChargeItemDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Claim" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "careTeam" TEXT,
    "created" TEXT,
    "detailUdi" TEXT,
    "encounter" TEXT,
    "enterer" TEXT,
    "facility" TEXT,
    "insurer" TEXT,
    "itemUdi" TEXT,
    "patient" TEXT,
    "payee" TEXT,
    "priority" TEXT,
    "procedureUdi" TEXT,
    "provider" TEXT,
    "status" TEXT,
    "subdetailUdi" TEXT,
    "use" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Claim_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ClaimResponse" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "created" TEXT,
    "disposition" TEXT,
    "insurer" TEXT,
    "outcome" TEXT,
    "patient" TEXT,
    "paymentDate" TEXT,
    "request" TEXT,
    "requestor" TEXT,
    "status" TEXT,
    "use" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ClaimResponse_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ClinicalImpression" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "assessor" TEXT,
    "encounter" TEXT,
    "findingCode" TEXT,
    "findingRef" TEXT,
    "investigation" TEXT[],
    "previous" TEXT,
    "problem" TEXT[],
    "status" TEXT,
    "subject" TEXT,
    "supportingInfo" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ClinicalImpression_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CodeSystem" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "code" TEXT,
    "contentMode" TEXT,
    "language" TEXT,
    "supplements" TEXT,
    "system" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CodeSystem_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Communication" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "basedOn" TEXT,
    "category" TEXT[],
    "encounter" TEXT,
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "medium" TEXT[],
    "partOf" TEXT,
    "patient" TEXT,
    "received" TEXT,
    "recipient" TEXT[],
    "sender" TEXT,
    "sent" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Communication_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CommunicationRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "authored" TEXT,
    "basedOn" TEXT,
    "category" TEXT[],
    "encounter" TEXT,
    "groupIdentifier" TEXT,
    "medium" TEXT[],
    "occurrence" TEXT,
    "patient" TEXT,
    "priority" TEXT,
    "recipient" TEXT[],
    "replaces" TEXT[],
    "requester" TEXT,
    "sender" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CommunicationRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CompartmentDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "code" TEXT,
    "resource" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CompartmentDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Composition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "type" TEXT,
    "attester" TEXT[],
    "author" TEXT[],
    "category" TEXT[],
    "confidentiality" TEXT,
    "context" TEXT,
    "encounter" TEXT,
    "entry" TEXT,
    "period" TEXT,
    "relatedId" TEXT,
    "relatedRef" TEXT,
    "section" TEXT[],
    "status" TEXT,
    "subject" TEXT,
    "title" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Composition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ConceptMap" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "dependson" TEXT,
    "other" TEXT,
    "product" TEXT,
    "source" TEXT,
    "sourceCode" TEXT,
    "sourceSystem" TEXT,
    "sourceUri" TEXT,
    "target" TEXT,
    "targetCode" TEXT,
    "targetSystem" TEXT,
    "targetUri" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ConceptMap_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Condition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "abatementAge" TEXT,
    "abatementDate" TEXT,
    "abatementString" TEXT,
    "asserter" TEXT,
    "bodySite" TEXT,
    "category" TEXT[],
    "clinicalStatus" TEXT,
    "encounter" TEXT,
    "evidence" TEXT[],
    "evidenceDetail" TEXT,
    "onsetAge" TEXT,
    "onsetDate" TEXT,
    "onsetInfo" TEXT,
    "recordedDate" TEXT,
    "severity" TEXT,
    "stage" TEXT[],
    "subject" TEXT,
    "verificationStatus" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Condition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Consent" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "action" TEXT,
    "actor" TEXT,
    "category" TEXT[],
    "consentor" TEXT,
    "data" TEXT,
    "organization" TEXT[],
    "period" TEXT,
    "purpose" TEXT,
    "scope" TEXT,
    "securityLabel" TEXT,
    "sourceReference" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Consent_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Contract" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "authority" TEXT[],
    "domain" TEXT[],
    "instantiates" TEXT,
    "issued" TEXT,
    "patient" TEXT,
    "signer" TEXT[],
    "status" TEXT,
    "subject" TEXT[],
    "url" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Contract_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Coverage" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "beneficiary" TEXT,
    "classType" TEXT,
    "classValue" TEXT,
    "dependent" TEXT,
    "patient" TEXT,
    "payor" TEXT[],
    "policyHolder" TEXT,
    "status" TEXT,
    "subscriber" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Coverage_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CoverageEligibilityRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "created" TEXT,
    "enterer" TEXT,
    "facility" TEXT,
    "patient" TEXT,
    "provider" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CoverageEligibilityRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CoverageEligibilityResponse" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "created" TEXT,
    "disposition" TEXT,
    "insurer" TEXT,
    "outcome" TEXT,
    "patient" TEXT,
    "request" TEXT,
    "requestor" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "CoverageEligibilityResponse_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DetectedIssue" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "author" TEXT,
    "code" TEXT,
    "identified" TEXT,
    "implicated" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DetectedIssue_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Device" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "deviceName" TEXT,
    "location" TEXT,
    "manufacturer" TEXT,
    "model" TEXT,
    "organization" TEXT,
    "patient" TEXT,
    "status" TEXT,
    "type" TEXT,
    "udiCarrier" TEXT,
    "udiDi" TEXT,
    "url" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Device_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "parent" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceMetric" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "category" TEXT,
    "parent" TEXT,
    "source" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceMetric_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "authoredOn" TEXT,
    "basedOn" TEXT,
    "device" TEXT,
    "eventDate" TEXT,
    "groupIdentifier" TEXT,
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "insurance" TEXT[],
    "intent" TEXT,
    "performer" TEXT,
    "priorRequest" TEXT,
    "requester" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceUseStatement" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "device" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DeviceUseStatement_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DiagnosticReport" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "date" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "basedOn" TEXT,
    "category" TEXT[],
    "conclusion" TEXT,
    "issued" TEXT,
    "media" TEXT[],
    "performer" TEXT[],
    "result" TEXT[],
    "resultsInterpreter" TEXT,
    "specimen" TEXT[],
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DiagnosticReport_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DocumentManifest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "type" TEXT,
    "author" TEXT[],
    "created" TEXT,
    "description" TEXT,
    "item" TEXT,
    "recipient" TEXT[],
    "relatedId" TEXT,
    "relatedRef" TEXT,
    "source" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DocumentManifest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DocumentReference" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "type" TEXT,
    "encounter" TEXT,
    "authenticator" TEXT,
    "author" TEXT[],
    "category" TEXT[],
    "contenttype" TEXT,
    "custodian" TEXT,
    "date" TEXT,
    "description" TEXT,
    "event" TEXT,
    "facility" TEXT,
    "format" TEXT,
    "language" TEXT,
    "location" TEXT,
    "period" TEXT,
    "related" TEXT,
    "relatesto" TEXT,
    "relation" TEXT,
    "securityLabel" TEXT,
    "setting" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "relationship" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "DocumentReference_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EffectEvidenceSynthesis" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EffectEvidenceSynthesis_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Encounter" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "type" TEXT[],
    "account" TEXT[],
    "appointment" TEXT[],
    "basedOn" TEXT,
    "class" TEXT,
    "diagnosis" TEXT[],
    "episodeOfCare" TEXT,
    "length" TEXT,
    "location" TEXT[],
    "locationPeriod" TEXT,
    "partOf" TEXT,
    "participant" TEXT[],
    "participantType" TEXT,
    "practitioner" TEXT,
    "reasonCode" TEXT,
    "reasonReference" TEXT,
    "serviceProvider" TEXT,
    "specialArrangement" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Encounter_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Endpoint" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "connectionType" TEXT,
    "name" TEXT,
    "organization" TEXT,
    "payloadType" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Endpoint_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EnrollmentRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EnrollmentRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EnrollmentResponse" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "request" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EnrollmentResponse_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EpisodeOfCare" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "type" TEXT[],
    "careManager" TEXT,
    "condition" TEXT,
    "incomingReferral" TEXT,
    "organization" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EpisodeOfCare_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EventDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EventDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Evidence" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Evidence_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EvidenceVariable" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "EvidenceVariable_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ExampleScenario" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ExampleScenario_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ExplanationOfBenefit" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "careTeam" TEXT,
    "claim" TEXT,
    "coverage" TEXT,
    "created" TEXT,
    "detailUdi" TEXT,
    "disposition" TEXT,
    "encounter" TEXT,
    "enterer" TEXT,
    "facility" TEXT,
    "itemUdi" TEXT,
    "patient" TEXT,
    "payee" TEXT,
    "procedureUdi" TEXT,
    "provider" TEXT,
    "status" TEXT,
    "subdetailUdi" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ExplanationOfBenefit_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "FamilyMemberHistory" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "date" TEXT,
    "patient" TEXT,
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "relationship" TEXT,
    "sex" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "FamilyMemberHistory_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Flag" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "author" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Flag_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Goal" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "achievementStatus" TEXT,
    "category" TEXT[],
    "lifecycleStatus" TEXT,
    "startDate" TEXT,
    "subject" TEXT,
    "targetDate" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Goal_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "GraphDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "start" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "GraphDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Group" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "actual" TEXT,
    "characteristic" TEXT[],
    "code" TEXT,
    "exclude" TEXT,
    "managingEntity" TEXT,
    "member" TEXT[],
    "type" TEXT,
    "value" TEXT,
    "characteristicValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Group_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "GuidanceResponse" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "request" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "GuidanceResponse_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "HealthcareService" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN,
    "characteristic" TEXT[],
    "coverageArea" TEXT,
    "endpoint" TEXT[],
    "location" TEXT[],
    "name" TEXT,
    "organization" TEXT,
    "program" TEXT[],
    "serviceCategory" TEXT,
    "serviceType" TEXT,
    "specialty" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "HealthcareService_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImagingStudy" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "basedon" TEXT,
    "bodysite" TEXT,
    "dicomClass" TEXT,
    "encounter" TEXT,
    "endpoint" TEXT[],
    "instance" TEXT,
    "interpreter" TEXT[],
    "modality" TEXT[],
    "performer" TEXT,
    "reason" TEXT,
    "referrer" TEXT,
    "series" TEXT[],
    "started" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImagingStudy_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Immunization" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "location" TEXT,
    "lotNumber" TEXT,
    "manufacturer" TEXT,
    "performer" TEXT[],
    "reaction" TEXT[],
    "reactionDate" TEXT,
    "reasonCode" TEXT,
    "reasonReference" TEXT,
    "series" TEXT,
    "status" TEXT,
    "statusReason" TEXT,
    "targetDisease" TEXT,
    "vaccineCode" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Immunization_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImmunizationEvaluation" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "doseStatus" TEXT,
    "immunizationEvent" TEXT,
    "patient" TEXT,
    "status" TEXT,
    "targetDisease" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImmunizationEvaluation_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImmunizationRecommendation" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "information" TEXT,
    "patient" TEXT,
    "status" TEXT,
    "support" TEXT,
    "targetDisease" TEXT,
    "vaccineType" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImmunizationRecommendation_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImplementationGuide" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "dependsOn" TEXT,
    "experimental" TEXT,
    "global" TEXT[],
    "resource" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ImplementationGuide_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "InsurancePlan" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "administeredBy" TEXT,
    "endpoint" TEXT[],
    "name" TEXT,
    "ownedBy" TEXT,
    "phonetic" TEXT,
    "status" TEXT,
    "type" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "InsurancePlan_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Invoice" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "account" TEXT,
    "date" TEXT,
    "issuer" TEXT,
    "participant" TEXT[],
    "participantRole" TEXT,
    "patient" TEXT,
    "recipient" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "totalgross" TEXT,
    "totalnet" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Invoice_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Library" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "contentType" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "type" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Library_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Linkage" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "author" TEXT,
    "item" TEXT[],
    "source" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Linkage_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "List" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "date" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "emptyReason" TEXT,
    "item" TEXT,
    "notes" TEXT,
    "source" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "title" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "List_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Location" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "endpoint" TEXT[],
    "name" TEXT,
    "near" TEXT,
    "operationalStatus" TEXT,
    "organization" TEXT,
    "partof" TEXT,
    "status" TEXT,
    "type" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Location_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Measure" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Measure_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MeasureReport" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "evaluatedResource" TEXT,
    "measure" TEXT,
    "patient" TEXT,
    "period" TEXT,
    "reporter" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MeasureReport_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Media" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "basedOn" TEXT,
    "created" TEXT,
    "device" TEXT,
    "encounter" TEXT,
    "modality" TEXT,
    "operator" TEXT,
    "patient" TEXT,
    "site" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "type" TEXT,
    "view" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Media_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Medication" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "expirationDate" TEXT,
    "form" TEXT,
    "ingredient" TEXT[],
    "ingredientCode" TEXT,
    "lotNumber" TEXT,
    "manufacturer" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Medication_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationAdministration" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "context" TEXT,
    "device" TEXT[],
    "effectiveTime" TEXT,
    "medication" TEXT,
    "performer" TEXT[],
    "reasonGiven" TEXT,
    "reasonNotGiven" TEXT,
    "request" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationAdministration_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationDispense" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "medication" TEXT,
    "status" TEXT,
    "context" TEXT,
    "destination" TEXT,
    "performer" TEXT[],
    "prescription" TEXT,
    "receiver" TEXT[],
    "responsibleparty" TEXT,
    "subject" TEXT,
    "type" TEXT,
    "whenhandedover" TEXT,
    "whenprepared" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationDispense_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationKnowledge" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "classification" TEXT,
    "classificationType" TEXT,
    "code" TEXT,
    "doseform" TEXT,
    "ingredient" TEXT[],
    "ingredientCode" TEXT,
    "manufacturer" TEXT,
    "monitoringProgramName" TEXT,
    "monitoringProgramType" TEXT,
    "monograph" TEXT[],
    "monographType" TEXT,
    "sourceCost" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationKnowledge_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "medication" TEXT,
    "status" TEXT,
    "authoredon" TEXT,
    "category" TEXT[],
    "date" TEXT,
    "encounter" TEXT,
    "intendedDispenser" TEXT,
    "intendedPerformer" TEXT,
    "intendedPerformertype" TEXT,
    "intent" TEXT,
    "priority" TEXT,
    "requester" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationStatement" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "medication" TEXT,
    "status" TEXT,
    "category" TEXT,
    "context" TEXT,
    "effective" TEXT,
    "partOf" TEXT,
    "source" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicationStatement_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProduct" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "name" TEXT[],
    "nameLanguage" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProduct_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductAuthorization" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "country" TEXT[],
    "holder" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductAuthorization_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductContraindication" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "subject" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductContraindication_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductIndication" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "subject" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductIndication_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductIngredient" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductIngredient_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductInteraction" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "subject" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductInteraction_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductManufactured" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductManufactured_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductPackaged" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "subject" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductPackaged_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductPharmaceutical" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "route" TEXT,
    "targetSpecies" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductPharmaceutical_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductUndesirableEffect" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "subject" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MedicinalProductUndesirableEffect_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MessageDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "category" TEXT,
    "event" TEXT,
    "focus" TEXT[],
    "parent" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MessageDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MessageHeader" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "author" TEXT,
    "code" TEXT,
    "destination" TEXT[],
    "destinationUri" TEXT,
    "enterer" TEXT,
    "event" TEXT,
    "focus" TEXT[],
    "receiver" TEXT,
    "responseId" TEXT,
    "responsible" TEXT,
    "sender" TEXT,
    "source" TEXT,
    "sourceUri" TEXT,
    "target" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MessageHeader_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MolecularSequence" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "chromosome" TEXT,
    "patient" TEXT,
    "referenceseqid" TEXT,
    "type" TEXT,
    "variantEnd" TEXT,
    "variantStart" TEXT,
    "windowEnd" TEXT,
    "windowStart" TEXT,
    "chromosomeVariantCoordinate" TEXT,
    "chromosomeWindowCoordinate" TEXT,
    "referenceseqidVariantCoordinate" TEXT,
    "referenceseqidWindowCoordinate" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "MolecularSequence_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "NamingSystem" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "contact" TEXT[],
    "idType" TEXT,
    "kind" TEXT,
    "period" TEXT,
    "responsible" TEXT,
    "telecom" TEXT,
    "type" TEXT,
    "value" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "NamingSystem_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "NutritionOrder" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "encounter" TEXT,
    "additive" TEXT,
    "datetime" TEXT,
    "formula" TEXT,
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "oraldiet" TEXT,
    "provider" TEXT,
    "status" TEXT,
    "supplement" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "NutritionOrder_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Observation" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "date" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "basedOn" TEXT,
    "category" TEXT[],
    "comboCode" TEXT,
    "comboDataAbsentReason" TEXT,
    "comboValueConcept" TEXT,
    "comboValueQuantity" TEXT,
    "componentCode" TEXT,
    "componentDataAbsentReason" TEXT,
    "componentValueConcept" TEXT,
    "componentValueQuantity" TEXT,
    "dataAbsentReason" TEXT,
    "derivedFrom" TEXT,
    "device" TEXT,
    "focus" TEXT[],
    "hasMember" TEXT,
    "method" TEXT,
    "partOf" TEXT,
    "performer" TEXT[],
    "specimen" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "valueConcept" TEXT,
    "valueDate" TEXT,
    "valueQuantity" TEXT,
    "valueString" TEXT,
    "codeValueConcept" TEXT,
    "codeValueDate" TEXT,
    "codeValueQuantity" TEXT,
    "codeValueString" TEXT,
    "comboCodeValueConcept" TEXT,
    "comboCodeValueQuantity" TEXT,
    "componentCodeValueConcept" TEXT,
    "componentCodeValueQuantity" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Observation_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ObservationDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ObservationDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "OperationDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "base" TEXT,
    "code" TEXT,
    "inputProfile" TEXT,
    "instance" TEXT,
    "kind" TEXT,
    "outputProfile" TEXT,
    "system" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "OperationDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "OperationOutcome" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "OperationOutcome_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Organization" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN,
    "endpoint" TEXT[],
    "name" TEXT,
    "partof" TEXT,
    "phonetic" TEXT,
    "type" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Organization_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "OrganizationAffiliation" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN,
    "date" TEXT,
    "endpoint" TEXT[],
    "location" TEXT[],
    "network" TEXT[],
    "participatingOrganization" TEXT,
    "primaryOrganization" TEXT,
    "role" TEXT,
    "service" TEXT,
    "specialty" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "OrganizationAffiliation_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Parameters" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Parameters_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Patient" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN,
    "birthdate" TEXT,
    "deathDate" TEXT,
    "deceased" TEXT,
    "gender" TEXT,
    "generalPractitioner" TEXT,
    "language" TEXT,
    "link" TEXT[],
    "organization" TEXT,
    "phonetic" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Patient_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PaymentNotice" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "created" TEXT,
    "paymentStatus" TEXT,
    "provider" TEXT,
    "request" TEXT,
    "response" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PaymentNotice_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PaymentReconciliation" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "created" TEXT,
    "disposition" TEXT,
    "outcome" TEXT,
    "paymentIssuer" TEXT,
    "request" TEXT,
    "requestor" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PaymentReconciliation_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Person" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "birthdate" TEXT,
    "gender" TEXT,
    "phonetic" TEXT,
    "link" TEXT[],
    "organization" TEXT,
    "patient" TEXT,
    "practitioner" TEXT,
    "relatedperson" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Person_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PlanDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "definition" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "type" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PlanDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Practitioner" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "gender" TEXT,
    "phonetic" TEXT,
    "active" BOOLEAN,
    "communication" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Practitioner_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PractitionerRole" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN,
    "date" TEXT,
    "endpoint" TEXT[],
    "location" TEXT[],
    "organization" TEXT,
    "practitioner" TEXT,
    "role" TEXT,
    "service" TEXT,
    "specialty" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PractitionerRole_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Procedure" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "date" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "basedOn" TEXT,
    "category" TEXT,
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "location" TEXT,
    "partOf" TEXT,
    "performer" TEXT[],
    "reasonCode" TEXT,
    "reasonReference" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Procedure_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Provenance" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "agent" TEXT[],
    "agentRole" TEXT,
    "agentType" TEXT,
    "entity" TEXT[],
    "location" TEXT,
    "patient" TEXT,
    "recorded" TEXT,
    "signatureType" TEXT,
    "target" TEXT[],
    "when" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Provenance_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Questionnaire" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT[],
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "definition" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "subjectType" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Questionnaire_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "QuestionnaireResponse" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "author" TEXT,
    "authored" TEXT,
    "basedOn" TEXT,
    "encounter" TEXT,
    "partOf" TEXT,
    "patient" TEXT,
    "questionnaire" TEXT,
    "source" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "QuestionnaireResponse_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RelatedPerson" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "birthdate" TEXT,
    "gender" TEXT,
    "phonetic" TEXT,
    "active" BOOLEAN,
    "patient" TEXT,
    "relationship" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RelatedPerson_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RequestGroup" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "author" TEXT,
    "authored" TEXT,
    "code" TEXT,
    "encounter" TEXT,
    "groupIdentifier" TEXT,
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "intent" TEXT,
    "participant" TEXT,
    "patient" TEXT,
    "priority" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RequestGroup_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchElementDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "composedOf" TEXT,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "dependsOn" TEXT,
    "derivedFrom" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "predecessor" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "successor" TEXT,
    "title" TEXT,
    "topic" TEXT[],
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchElementDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchStudy" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "category" TEXT[],
    "date" TEXT,
    "focus" TEXT[],
    "keyword" TEXT[],
    "location" TEXT[],
    "partof" TEXT,
    "principalinvestigator" TEXT,
    "protocol" TEXT[],
    "site" TEXT[],
    "sponsor" TEXT,
    "status" TEXT,
    "title" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchStudy_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchSubject" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "individual" TEXT,
    "patient" TEXT,
    "status" TEXT,
    "study" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ResearchSubject_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RiskAssessment" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "condition" TEXT,
    "method" TEXT,
    "performer" TEXT,
    "probability" TEXT,
    "risk" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RiskAssessment_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RiskEvidenceSynthesis" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "effective" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "RiskEvidenceSynthesis_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Schedule" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN,
    "actor" TEXT[],
    "date" TEXT,
    "serviceCategory" TEXT,
    "serviceType" TEXT,
    "specialty" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Schedule_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SearchParameter" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "base" TEXT[],
    "code" TEXT,
    "component" TEXT[],
    "derivedFrom" TEXT,
    "target" TEXT[],
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SearchParameter_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ServiceRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "patient" TEXT,
    "encounter" TEXT,
    "authored" TEXT,
    "basedOn" TEXT,
    "bodySite" TEXT,
    "category" TEXT[],
    "instantiatesCanonical" TEXT,
    "instantiatesUri" TEXT,
    "intent" TEXT,
    "occurrence" TEXT,
    "performer" TEXT[],
    "performerType" TEXT,
    "priority" TEXT,
    "replaces" TEXT[],
    "requester" TEXT,
    "requisition" TEXT,
    "specimen" TEXT[],
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ServiceRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Slot" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "appointmentType" TEXT,
    "schedule" TEXT,
    "serviceCategory" TEXT,
    "serviceType" TEXT,
    "specialty" TEXT[],
    "start" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Slot_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Specimen" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "accession" TEXT,
    "bodysite" TEXT,
    "collected" TEXT,
    "collector" TEXT,
    "container" TEXT[],
    "containerId" TEXT,
    "parent" TEXT[],
    "patient" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Specimen_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SpecimenDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "container" TEXT,
    "type" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SpecimenDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "StructureDefinition" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT[],
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "abstract" TEXT,
    "base" TEXT,
    "basePath" TEXT,
    "derivation" TEXT,
    "experimental" TEXT,
    "extContext" TEXT,
    "keyword" TEXT[],
    "kind" TEXT,
    "path" TEXT,
    "type" TEXT,
    "valueset" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "StructureDefinition_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "StructureMap" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "StructureMap_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Subscription" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "contact" TEXT[],
    "criteria" TEXT,
    "payload" TEXT,
    "status" TEXT,
    "type" TEXT,
    "url" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Subscription_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Substance" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "category" TEXT[],
    "code" TEXT,
    "containerIdentifier" TEXT,
    "expiry" TEXT,
    "quantity" TEXT,
    "status" TEXT,
    "substanceReference" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Substance_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceNucleicAcid" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceNucleicAcid_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstancePolymer" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstancePolymer_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceProtein" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceProtein_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceReferenceInformation" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceReferenceInformation_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceSourceMaterial" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceSourceMaterial_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceSpecification" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SubstanceSpecification_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SupplyDelivery" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "receiver" TEXT[],
    "status" TEXT,
    "supplier" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SupplyDelivery_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SupplyRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "date" TEXT,
    "category" TEXT,
    "requester" TEXT,
    "status" TEXT,
    "subject" TEXT,
    "supplier" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "SupplyRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Task" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "authoredOn" TEXT,
    "basedOn" TEXT,
    "businessStatus" TEXT,
    "code" TEXT,
    "encounter" TEXT,
    "focus" TEXT,
    "groupIdentifier" TEXT,
    "intent" TEXT,
    "modified" TEXT,
    "owner" TEXT,
    "partOf" TEXT,
    "patient" TEXT,
    "performer" TEXT,
    "period" TEXT,
    "priority" TEXT,
    "requester" TEXT,
    "status" TEXT,
    "subject" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Task_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "TerminologyCapabilities" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "TerminologyCapabilities_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "TestReport" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "issued" TEXT,
    "participant" TEXT[],
    "result" TEXT,
    "tester" TEXT,
    "testscript" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "TestReport_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "TestScript" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "testscriptCapability" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "TestScript_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ValueSet" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "context" TEXT,
    "contextQuantity" TEXT,
    "contextType" TEXT,
    "date" TEXT,
    "description" TEXT,
    "jurisdiction" TEXT[],
    "name" TEXT,
    "publisher" TEXT,
    "status" TEXT,
    "title" TEXT,
    "url" TEXT,
    "version" TEXT,
    "contextTypeQuantity" TEXT,
    "contextTypeValue" TEXT,
    "code" TEXT,
    "expansion" TEXT,
    "reference" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ValueSet_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "VerificationResult" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "target" TEXT[]
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "VerificationResult_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "VisionPrescription" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "patient" TEXT,
    "encounter" TEXT,
    "datewritten" TEXT,
    "prescriber" TEXT,
    "status" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "VisionPrescription_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Project" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "name" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Project_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ProjectMembership" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "project" TEXT,
    "user" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ProjectMembership_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ClientApplication" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "name" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "ClientApplication_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "User" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "email" TEXT
  )`);

  await client.query('CREATE UNIQUE INDEX ON "User" ("email")');
  await client.query(`CREATE TABLE IF NOT EXISTS "User_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Login" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "code" TEXT,
    "cookie" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Login_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PasswordChangeRequest" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "PasswordChangeRequest_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "JsonWebKey" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "active" BOOLEAN
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "JsonWebKey_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Bot" (
    "id" UUID NOT NULL PRIMARY KEY,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL,
    "compartments" UUID[] NOT NULL,
    "name" TEXT
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Bot_History" (
    "versionId" UUID NOT NULL PRIMARY KEY,
    "id" UUID NOT NULL,
    "content" TEXT NOT NULL,
    "lastUpdated" TIMESTAMP WITH TIME ZONE NOT NULL
  )`);

  await client.query(`CREATE TABLE IF NOT EXISTS "Address" (
    "id" UUID NOT NULL PRIMARY KEY,
    "resourceId" UUID NOT NULL,
    "index" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "address" TEXT,
    "city" TEXT,
    "country" TEXT,
    "postalCode" TEXT,
    "state" TEXT,
    "use" TEXT
  )`);

  await client.query('CREATE INDEX ON "Address" ("address")');
  await client.query('CREATE INDEX ON "Address" ("city")');
  await client.query('CREATE INDEX ON "Address" ("country")');
  await client.query('CREATE INDEX ON "Address" ("postalCode")');
  await client.query('CREATE INDEX ON "Address" ("state")');
  await client.query('CREATE INDEX ON "Address" ("use")');

  await client.query(`CREATE TABLE IF NOT EXISTS "ContactPoint" (
    "id" UUID NOT NULL PRIMARY KEY,
    "resourceId" UUID NOT NULL,
    "index" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "system" TEXT,
    "value" TEXT
  )`);

  await client.query('CREATE INDEX ON "ContactPoint" ("system")');
  await client.query('CREATE INDEX ON "ContactPoint" ("value")');

  await client.query(`CREATE TABLE IF NOT EXISTS "Identifier" (
    "id" UUID NOT NULL PRIMARY KEY,
    "resourceId" UUID NOT NULL,
    "index" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "system" TEXT,
    "value" TEXT
  )`);

  await client.query('CREATE INDEX ON "Identifier" ("system")');
  await client.query('CREATE INDEX ON "Identifier" ("value")');

  await client.query(`CREATE TABLE IF NOT EXISTS "HumanName" (
    "id" UUID NOT NULL PRIMARY KEY,
    "resourceId" UUID NOT NULL,
    "index" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "name" TEXT,
    "given" TEXT,
    "family" TEXT
  )`);

  await client.query('CREATE INDEX ON "HumanName" ("name")');
  await client.query('CREATE INDEX ON "HumanName" ("given")');
  await client.query('CREATE INDEX ON "HumanName" ("family")');

  await client.query(`CREATE TABLE IF NOT EXISTS "ValueSetElement" (
    "id" UUID NOT NULL PRIMARY KEY,
    "system" TEXT,
    "code" TEXT,
    "display" TEXT
  )`);

  await client.query('CREATE INDEX ON "ValueSetElement" ("system")');
  await client.query('CREATE INDEX ON "ValueSetElement" ("code")');
  await client.query('CREATE INDEX ON "ValueSetElement" ("display")');
}
