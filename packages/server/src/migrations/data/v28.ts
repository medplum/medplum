// SPDX-FileCopyrightText: Copyright Orangebot, Inc. and Medplum contributors
// SPDX-License-Identifier: Apache-2.0
import { PoolClient } from 'pg';
import { prepareCustomMigrationJobData, runCustomMigration } from '../../workers/post-deploy-migration';
import * as fns from '../migrate-functions';
import { MigrationActionResult } from '../types';
import { CustomPostDeployMigration } from './types';

export const migration: CustomPostDeployMigration = {
  type: 'custom',
  prepareJobData: (asyncJob) => prepareCustomMigrationJobData(asyncJob),
  run: async (repo, job, jobData) => runCustomMigration(repo, job, jobData, callback),
};

// prettier-ignore
async function callback(client: PoolClient, results: MigrationActionResult[]): Promise<void> {
  await fns.idempotentCreateIndex(client, results, 'Account_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account_reindex_idx" ON "Account" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition_reindex_idx" ON "ActivityDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent_reindex_idx" ON "AdverseEvent" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance_reindex_idx" ON "AllergyIntolerance" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment_reindex_idx" ON "Appointment" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse_reindex_idx" ON "AppointmentResponse" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent_reindex_idx" ON "AuditEvent" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Basic_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic_reindex_idx" ON "Basic" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Binary_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Binary_reindex_idx" ON "Binary" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'BiologicallyDerivedProduct_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BiologicallyDerivedProduct_reindex_idx" ON "BiologicallyDerivedProduct" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure_reindex_idx" ON "BodyStructure" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Bundle_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle_reindex_idx" ON "Bundle" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement_reindex_idx" ON "CapabilityStatement" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan_reindex_idx" ON "CarePlan" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam_reindex_idx" ON "CareTeam" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CatalogEntry_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CatalogEntry_reindex_idx" ON "CatalogEntry" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem_reindex_idx" ON "ChargeItem" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition_reindex_idx" ON "ChargeItemDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Claim_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim_reindex_idx" ON "Claim" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse_reindex_idx" ON "ClaimResponse" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression_reindex_idx" ON "ClinicalImpression" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem_reindex_idx" ON "CodeSystem" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Communication_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication_reindex_idx" ON "Communication" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest_reindex_idx" ON "CommunicationRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition_reindex_idx" ON "CompartmentDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Composition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition_reindex_idx" ON "Composition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap_reindex_idx" ON "ConceptMap" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Condition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition_reindex_idx" ON "Condition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Consent_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent_reindex_idx" ON "Consent" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Contract_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract_reindex_idx" ON "Contract" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Coverage_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage_reindex_idx" ON "Coverage" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest_reindex_idx" ON "CoverageEligibilityRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse_reindex_idx" ON "CoverageEligibilityResponse" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue_reindex_idx" ON "DetectedIssue" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Device_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device_reindex_idx" ON "Device" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition_reindex_idx" ON "DeviceDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric_reindex_idx" ON "DeviceMetric" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest_reindex_idx" ON "DeviceRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement_reindex_idx" ON "DeviceUseStatement" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport_reindex_idx" ON "DiagnosticReport" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest_reindex_idx" ON "DocumentManifest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference_reindex_idx" ON "DocumentReference" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis_reindex_idx" ON "EffectEvidenceSynthesis" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter_reindex_idx" ON "Encounter" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint_reindex_idx" ON "Endpoint" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest_reindex_idx" ON "EnrollmentRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse_reindex_idx" ON "EnrollmentResponse" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare_reindex_idx" ON "EpisodeOfCare" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition_reindex_idx" ON "EventDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence_reindex_idx" ON "Evidence" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable_reindex_idx" ON "EvidenceVariable" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario_reindex_idx" ON "ExampleScenario" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit_reindex_idx" ON "ExplanationOfBenefit" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory_reindex_idx" ON "FamilyMemberHistory" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Flag_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag_reindex_idx" ON "Flag" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Goal_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal_reindex_idx" ON "Goal" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition_reindex_idx" ON "GraphDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Group_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group_reindex_idx" ON "Group" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse_reindex_idx" ON "GuidanceResponse" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService_reindex_idx" ON "HealthcareService" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy_reindex_idx" ON "ImagingStudy" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization_reindex_idx" ON "Immunization" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation_reindex_idx" ON "ImmunizationEvaluation" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation_reindex_idx" ON "ImmunizationRecommendation" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide_reindex_idx" ON "ImplementationGuide" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan_reindex_idx" ON "InsurancePlan" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Invoice_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice_reindex_idx" ON "Invoice" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Library_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library_reindex_idx" ON "Library" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Linkage_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage_reindex_idx" ON "Linkage" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'List_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List_reindex_idx" ON "List" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Location_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location_reindex_idx" ON "Location" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Measure_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure_reindex_idx" ON "Measure" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport_reindex_idx" ON "MeasureReport" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Media_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media_reindex_idx" ON "Media" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Medication_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication_reindex_idx" ON "Medication" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration_reindex_idx" ON "MedicationAdministration" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense_reindex_idx" ON "MedicationDispense" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge_reindex_idx" ON "MedicationKnowledge" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest_reindex_idx" ON "MedicationRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement_reindex_idx" ON "MedicationStatement" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct_reindex_idx" ON "MedicinalProduct" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductAuthorization_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductAuthorization_reindex_idx" ON "MedicinalProductAuthorization" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductContraindication_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductContraindication_reindex_idx" ON "MedicinalProductContraindication" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIndication_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIndication_reindex_idx" ON "MedicinalProductIndication" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIngredient_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIngredient_reindex_idx" ON "MedicinalProductIngredient" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductInteraction_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductInteraction_reindex_idx" ON "MedicinalProductInteraction" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductManufactured_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductManufactured_reindex_idx" ON "MedicinalProductManufactured" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged_reindex_idx" ON "MedicinalProductPackaged" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPharmaceutical_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPharmaceutical_reindex_idx" ON "MedicinalProductPharmaceutical" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductUndesirableEffect_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductUndesirableEffect_reindex_idx" ON "MedicinalProductUndesirableEffect" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition_reindex_idx" ON "MessageDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader_reindex_idx" ON "MessageHeader" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence_reindex_idx" ON "MolecularSequence" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem_reindex_idx" ON "NamingSystem" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder_reindex_idx" ON "NutritionOrder" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Observation_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation_reindex_idx" ON "Observation" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition_reindex_idx" ON "ObservationDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition_reindex_idx" ON "OperationDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'OperationOutcome_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationOutcome_reindex_idx" ON "OperationOutcome" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Organization_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization_reindex_idx" ON "Organization" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation_reindex_idx" ON "OrganizationAffiliation" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Parameters_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Parameters_reindex_idx" ON "Parameters" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Patient_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient_reindex_idx" ON "Patient" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice_reindex_idx" ON "PaymentNotice" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation_reindex_idx" ON "PaymentReconciliation" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Person_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person_reindex_idx" ON "Person" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition_reindex_idx" ON "PlanDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner_reindex_idx" ON "Practitioner" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole_reindex_idx" ON "PractitionerRole" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure_reindex_idx" ON "Procedure" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Provenance_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance_reindex_idx" ON "Provenance" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire_reindex_idx" ON "Questionnaire" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse_reindex_idx" ON "QuestionnaireResponse" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson_reindex_idx" ON "RelatedPerson" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup_reindex_idx" ON "RequestGroup" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition_reindex_idx" ON "ResearchDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition_reindex_idx" ON "ResearchElementDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy_reindex_idx" ON "ResearchStudy" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject_reindex_idx" ON "ResearchSubject" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment_reindex_idx" ON "RiskAssessment" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis_reindex_idx" ON "RiskEvidenceSynthesis" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule_reindex_idx" ON "Schedule" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter_reindex_idx" ON "SearchParameter" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest_reindex_idx" ON "ServiceRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Slot_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot_reindex_idx" ON "Slot" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen_reindex_idx" ON "Specimen" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition_reindex_idx" ON "SpecimenDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition_reindex_idx" ON "StructureDefinition" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap_reindex_idx" ON "StructureMap" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Subscription_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription_reindex_idx" ON "Subscription" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubscriptionStatus_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubscriptionStatus_reindex_idx" ON "SubscriptionStatus" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Substance_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance_reindex_idx" ON "Substance" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceNucleicAcid_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceNucleicAcid_reindex_idx" ON "SubstanceNucleicAcid" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubstancePolymer_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstancePolymer_reindex_idx" ON "SubstancePolymer" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceProtein_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceProtein_reindex_idx" ON "SubstanceProtein" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceReferenceInformation_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceReferenceInformation_reindex_idx" ON "SubstanceReferenceInformation" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSourceMaterial_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSourceMaterial_reindex_idx" ON "SubstanceSourceMaterial" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification_reindex_idx" ON "SubstanceSpecification" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery_reindex_idx" ON "SupplyDelivery" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest_reindex_idx" ON "SupplyRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Task_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task_reindex_idx" ON "Task" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities_reindex_idx" ON "TerminologyCapabilities" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'TestReport_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport_reindex_idx" ON "TestReport" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript_reindex_idx" ON "TestScript" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet_reindex_idx" ON "ValueSet" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'VerificationResult_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VerificationResult_reindex_idx" ON "VerificationResult" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription_reindex_idx" ON "VisionPrescription" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Project_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project_reindex_idx" ON "Project" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ClientApplication_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClientApplication_reindex_idx" ON "ClientApplication" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'User_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User_reindex_idx" ON "User" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'ProjectMembership_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership_reindex_idx" ON "ProjectMembership" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Bot_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot_reindex_idx" ON "Bot" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Login_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login_reindex_idx" ON "Login" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'PasswordChangeRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PasswordChangeRequest_reindex_idx" ON "PasswordChangeRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'UserSecurityRequest_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserSecurityRequest_reindex_idx" ON "UserSecurityRequest" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'JsonWebKey_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "JsonWebKey_reindex_idx" ON "JsonWebKey" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'AccessPolicy_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AccessPolicy_reindex_idx" ON "AccessPolicy" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'UserConfiguration_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserConfiguration_reindex_idx" ON "UserConfiguration" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'BulkDataExport_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BulkDataExport_reindex_idx" ON "BulkDataExport" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'SmartAppLaunch_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SmartAppLaunch_reindex_idx" ON "SmartAppLaunch" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'DomainConfiguration_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DomainConfiguration_reindex_idx" ON "DomainConfiguration" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'AsyncJob_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AsyncJob_reindex_idx" ON "AsyncJob" ("lastUpdated", "__version") WHERE (deleted = false)`);
  await fns.idempotentCreateIndex(client, results, 'Agent_reindex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent_reindex_idx" ON "Agent" ("lastUpdated", "__version") WHERE (deleted = false)`);
}
