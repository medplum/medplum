import { PoolClient } from 'pg';
import { prepareCustomMigrationJobData, runCustomMigration } from '../../workers/post-deploy-migration';
import * as fns from '../migrate-functions';
import { withLongRunningDatabaseClient } from '../migration-utils';
import { MigrationActionResult } from '../types';
import { CustomPostDeployMigration } from './types';

export const migration: CustomPostDeployMigration = {
  type: 'custom',
  prepareJobData: (asyncJob) => prepareCustomMigrationJobData(asyncJob),
  run: async (repo, job, jobData) => {
    return runCustomMigration(repo, job, jobData, async () => {
      return withLongRunningDatabaseClient(async (client) => {
        const results: MigrationActionResult[] = [];
        await run(client, results);
        return results;
      });
    });
  },
};

// prettier-ignore
async function run(client: PoolClient, results: MigrationActionResult[]): Promise<void> {
  await fns.idempotentCreateIndex(client, results, 'Account___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account___sharedTokens_idx" ON "Account" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Account___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account___sharedTokensTextTrgm_idx" ON "Account" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Account____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account____tag_idx" ON "Account" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Account____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account____tagTextTrgm_idx" ON "Account" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Account___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account___idnt_idx" ON "Account" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Account___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account___idntTextTrgm_idx" ON "Account" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Account___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account___type_idx" ON "Account" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Account___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Account___typeTextTrgm_idx" ON "Account" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___sharedTokens_idx" ON "ActivityDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___sharedTokensTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition____tag_idx" ON "ActivityDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition____tagTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___context_idx" ON "ActivityDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___contextTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___contextType_idx" ON "ActivityDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___contextTypeTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___idnt_idx" ON "ActivityDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___idntTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___jurisdiction_idx" ON "ActivityDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___jurisdictionTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___topic_idx" ON "ActivityDefinition" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'ActivityDefinition___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ActivityDefinition___topicTextTrgm_idx" ON "ActivityDefinition" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___sharedTokens_idx" ON "AdverseEvent" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___sharedTokensTextTrgm_idx" ON "AdverseEvent" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent____tag_idx" ON "AdverseEvent" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent____tagTextTrgm_idx" ON "AdverseEvent" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___category_idx" ON "AdverseEvent" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___categoryTextTrgm_idx" ON "AdverseEvent" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___event_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___event_idx" ON "AdverseEvent" USING gin ("__event")`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___eventTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___eventTextTrgm_idx" ON "AdverseEvent" USING gin (token_array_to_text("__eventText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___seriousness_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___seriousness_idx" ON "AdverseEvent" USING gin ("__seriousness")`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___seriousnessTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___seriousnessTextTrgm_idx" ON "AdverseEvent" USING gin (token_array_to_text("__seriousnessText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___severity_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___severity_idx" ON "AdverseEvent" USING gin ("__severity")`);
  await fns.idempotentCreateIndex(client, results, 'AdverseEvent___severityTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AdverseEvent___severityTextTrgm_idx" ON "AdverseEvent" USING gin (token_array_to_text("__severityText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___sharedTokens_idx" ON "AllergyIntolerance" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___sharedTokensTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance____tag_idx" ON "AllergyIntolerance" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance____tagTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___clinicalStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___clinicalStatus_idx" ON "AllergyIntolerance" USING gin ("__clinicalStatus")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___clinicalStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___clinicalStatusTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__clinicalStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___code_idx" ON "AllergyIntolerance" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___codeTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___idnt_idx" ON "AllergyIntolerance" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___idntTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___manifestation_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___manifestation_idx" ON "AllergyIntolerance" USING gin ("__manifestation")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___manifestationTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___manifestationTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__manifestationText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___route_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___route_idx" ON "AllergyIntolerance" USING gin ("__route")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___routeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___routeTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__routeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___verificationStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___verificationStatus_idx" ON "AllergyIntolerance" USING gin ("__verificationStatus")`);
  await fns.idempotentCreateIndex(client, results, 'AllergyIntolerance___verificationStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AllergyIntolerance___verificationStatusTextTrgm_idx" ON "AllergyIntolerance" USING gin (token_array_to_text("__verificationStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___sharedTokens_idx" ON "Appointment" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___sharedTokensTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment____tag_idx" ON "Appointment" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment____tagTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___appointmentType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___appointmentType_idx" ON "Appointment" USING gin ("__appointmentType")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___appointmentTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___appointmentTypeTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("__appointmentTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___idnt_idx" ON "Appointment" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___idntTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___serviceCategory_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___serviceCategory_idx" ON "Appointment" USING gin ("__serviceCategory")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___serviceCategoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___serviceCategoryTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("__serviceCategoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___serviceType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___serviceType_idx" ON "Appointment" USING gin ("__serviceType")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___serviceTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___serviceTypeTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("__serviceTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___specialty_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___specialty_idx" ON "Appointment" USING gin ("__specialty")`);
  await fns.idempotentCreateIndex(client, results, 'Appointment___specialtyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Appointment___specialtyTextTrgm_idx" ON "Appointment" USING gin (token_array_to_text("__specialtyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse___sharedTokens_idx" ON "AppointmentResponse" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse___sharedTokensTextTrgm_idx" ON "AppointmentResponse" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse____tag_idx" ON "AppointmentResponse" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse____tagTextTrgm_idx" ON "AppointmentResponse" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse___idnt_idx" ON "AppointmentResponse" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'AppointmentResponse___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AppointmentResponse___idntTextTrgm_idx" ON "AppointmentResponse" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent___sharedTokens_idx" ON "AuditEvent" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent___sharedTokensTextTrgm_idx" ON "AuditEvent" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent___entityRole_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent___entityRole_idx" ON "AuditEvent" USING gin ("__entityRole")`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent___entityRoleTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent___entityRoleTextTrgm_idx" ON "AuditEvent" USING gin (token_array_to_text("__entityRoleText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent___type_idx" ON "AuditEvent" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'AuditEvent___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AuditEvent___typeTextTrgm_idx" ON "AuditEvent" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Basic___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic___sharedTokens_idx" ON "Basic" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Basic___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic___sharedTokensTextTrgm_idx" ON "Basic" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Basic____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic____tag_idx" ON "Basic" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Basic____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic____tagTextTrgm_idx" ON "Basic" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Basic___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic___code_idx" ON "Basic" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Basic___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic___codeTextTrgm_idx" ON "Basic" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Basic___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic___idnt_idx" ON "Basic" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Basic___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Basic___idntTextTrgm_idx" ON "Basic" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Binary___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Binary___sharedTokens_idx" ON "Binary" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Binary___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Binary___sharedTokensTextTrgm_idx" ON "Binary" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Binary____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Binary____tag_idx" ON "Binary" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Binary____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Binary____tagTextTrgm_idx" ON "Binary" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BiologicallyDerivedProduct___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BiologicallyDerivedProduct___sharedTokens_idx" ON "BiologicallyDerivedProduct" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'BiologicallyDerivedProduct___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BiologicallyDerivedProduct___sharedTokensTextTrgm_idx" ON "BiologicallyDerivedProduct" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BiologicallyDerivedProduct____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BiologicallyDerivedProduct____tag_idx" ON "BiologicallyDerivedProduct" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'BiologicallyDerivedProduct____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BiologicallyDerivedProduct____tagTextTrgm_idx" ON "BiologicallyDerivedProduct" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___sharedTokens_idx" ON "BodyStructure" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___sharedTokensTextTrgm_idx" ON "BodyStructure" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure____tag_idx" ON "BodyStructure" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure____tagTextTrgm_idx" ON "BodyStructure" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___idnt_idx" ON "BodyStructure" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___idntTextTrgm_idx" ON "BodyStructure" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___location_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___location_idx" ON "BodyStructure" USING gin ("__location")`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___locationTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___locationTextTrgm_idx" ON "BodyStructure" USING gin (token_array_to_text("__locationText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___morphology_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___morphology_idx" ON "BodyStructure" USING gin ("__morphology")`);
  await fns.idempotentCreateIndex(client, results, 'BodyStructure___morphologyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BodyStructure___morphologyTextTrgm_idx" ON "BodyStructure" USING gin (token_array_to_text("__morphologyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bundle___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle___sharedTokens_idx" ON "Bundle" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Bundle___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle___sharedTokensTextTrgm_idx" ON "Bundle" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bundle____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle____tag_idx" ON "Bundle" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Bundle____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle____tagTextTrgm_idx" ON "Bundle" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bundle___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle___idnt_idx" ON "Bundle" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Bundle___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bundle___idntTextTrgm_idx" ON "Bundle" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___sharedTokens_idx" ON "CapabilityStatement" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___sharedTokensTextTrgm_idx" ON "CapabilityStatement" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement____tag_idx" ON "CapabilityStatement" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement____tagTextTrgm_idx" ON "CapabilityStatement" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___context_idx" ON "CapabilityStatement" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___contextTextTrgm_idx" ON "CapabilityStatement" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___contextType_idx" ON "CapabilityStatement" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___contextTypeTextTrgm_idx" ON "CapabilityStatement" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___jurisdiction_idx" ON "CapabilityStatement" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___jurisdictionTextTrgm_idx" ON "CapabilityStatement" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___securityService_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___securityService_idx" ON "CapabilityStatement" USING gin ("__securityService")`);
  await fns.idempotentCreateIndex(client, results, 'CapabilityStatement___securityServiceTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CapabilityStatement___securityServiceTextTrgm_idx" ON "CapabilityStatement" USING gin (token_array_to_text("__securityServiceText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___sharedTokens_idx" ON "CarePlan" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___sharedTokensTextTrgm_idx" ON "CarePlan" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan____tag_idx" ON "CarePlan" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan____tagTextTrgm_idx" ON "CarePlan" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___idnt_idx" ON "CarePlan" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___idntTextTrgm_idx" ON "CarePlan" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___activityCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___activityCode_idx" ON "CarePlan" USING gin ("__activityCode")`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___activityCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___activityCodeTextTrgm_idx" ON "CarePlan" USING gin (token_array_to_text("__activityCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___category_idx" ON "CarePlan" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'CarePlan___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CarePlan___categoryTextTrgm_idx" ON "CarePlan" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___sharedTokens_idx" ON "CareTeam" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___sharedTokensTextTrgm_idx" ON "CareTeam" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam____tag_idx" ON "CareTeam" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam____tagTextTrgm_idx" ON "CareTeam" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___idnt_idx" ON "CareTeam" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___idntTextTrgm_idx" ON "CareTeam" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___category_idx" ON "CareTeam" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___categoryTextTrgm_idx" ON "CareTeam" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___role_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___role_idx" ON "CareTeam" USING gin ("__role")`);
  await fns.idempotentCreateIndex(client, results, 'CareTeam___roleTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CareTeam___roleTextTrgm_idx" ON "CareTeam" USING gin (token_array_to_text("__roleText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CatalogEntry___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CatalogEntry___sharedTokens_idx" ON "CatalogEntry" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CatalogEntry___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CatalogEntry___sharedTokensTextTrgm_idx" ON "CatalogEntry" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CatalogEntry____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CatalogEntry____tag_idx" ON "CatalogEntry" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CatalogEntry____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CatalogEntry____tagTextTrgm_idx" ON "CatalogEntry" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___sharedTokens_idx" ON "ChargeItem" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___sharedTokensTextTrgm_idx" ON "ChargeItem" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem____tag_idx" ON "ChargeItem" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem____tagTextTrgm_idx" ON "ChargeItem" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___code_idx" ON "ChargeItem" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___codeTextTrgm_idx" ON "ChargeItem" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___idnt_idx" ON "ChargeItem" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___idntTextTrgm_idx" ON "ChargeItem" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___performerFunction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___performerFunction_idx" ON "ChargeItem" USING gin ("__performerFunction")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItem___performerFunctionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItem___performerFunctionTextTrgm_idx" ON "ChargeItem" USING gin (token_array_to_text("__performerFunctionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___sharedTokens_idx" ON "ChargeItemDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___sharedTokensTextTrgm_idx" ON "ChargeItemDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition____tag_idx" ON "ChargeItemDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition____tagTextTrgm_idx" ON "ChargeItemDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___context_idx" ON "ChargeItemDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___contextTextTrgm_idx" ON "ChargeItemDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___contextType_idx" ON "ChargeItemDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___contextTypeTextTrgm_idx" ON "ChargeItemDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___idnt_idx" ON "ChargeItemDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___idntTextTrgm_idx" ON "ChargeItemDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___jurisdiction_idx" ON "ChargeItemDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ChargeItemDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ChargeItemDefinition___jurisdictionTextTrgm_idx" ON "ChargeItemDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Claim___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim___sharedTokens_idx" ON "Claim" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Claim___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim___sharedTokensTextTrgm_idx" ON "Claim" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Claim____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim____tag_idx" ON "Claim" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Claim____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim____tagTextTrgm_idx" ON "Claim" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Claim___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim___idnt_idx" ON "Claim" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Claim___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim___idntTextTrgm_idx" ON "Claim" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Claim___priority_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim___priority_idx" ON "Claim" USING gin ("__priority")`);
  await fns.idempotentCreateIndex(client, results, 'Claim___priorityTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Claim___priorityTextTrgm_idx" ON "Claim" USING gin (token_array_to_text("__priorityText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse___sharedTokens_idx" ON "ClaimResponse" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse___sharedTokensTextTrgm_idx" ON "ClaimResponse" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse____tag_idx" ON "ClaimResponse" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse____tagTextTrgm_idx" ON "ClaimResponse" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse___idnt_idx" ON "ClaimResponse" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ClaimResponse___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClaimResponse___idntTextTrgm_idx" ON "ClaimResponse" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression___sharedTokens_idx" ON "ClinicalImpression" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression___sharedTokensTextTrgm_idx" ON "ClinicalImpression" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression____tag_idx" ON "ClinicalImpression" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression____tagTextTrgm_idx" ON "ClinicalImpression" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression___findingCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression___findingCode_idx" ON "ClinicalImpression" USING gin ("__findingCode")`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression___findingCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression___findingCodeTextTrgm_idx" ON "ClinicalImpression" USING gin (token_array_to_text("__findingCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression___idnt_idx" ON "ClinicalImpression" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ClinicalImpression___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClinicalImpression___idntTextTrgm_idx" ON "ClinicalImpression" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___sharedTokens_idx" ON "CodeSystem" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___sharedTokensTextTrgm_idx" ON "CodeSystem" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem____tag_idx" ON "CodeSystem" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem____tagTextTrgm_idx" ON "CodeSystem" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___context_idx" ON "CodeSystem" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___contextTextTrgm_idx" ON "CodeSystem" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___contextType_idx" ON "CodeSystem" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___contextTypeTextTrgm_idx" ON "CodeSystem" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___jurisdiction_idx" ON "CodeSystem" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___jurisdictionTextTrgm_idx" ON "CodeSystem" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___idnt_idx" ON "CodeSystem" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'CodeSystem___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CodeSystem___idntTextTrgm_idx" ON "CodeSystem" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Communication___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___sharedTokens_idx" ON "Communication" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Communication___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___sharedTokensTextTrgm_idx" ON "Communication" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Communication____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication____tag_idx" ON "Communication" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Communication____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication____tagTextTrgm_idx" ON "Communication" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Communication___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___category_idx" ON "Communication" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Communication___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___categoryTextTrgm_idx" ON "Communication" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Communication___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___idnt_idx" ON "Communication" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Communication___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___idntTextTrgm_idx" ON "Communication" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Communication___medium_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___medium_idx" ON "Communication" USING gin ("__medium")`);
  await fns.idempotentCreateIndex(client, results, 'Communication___mediumTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___mediumTextTrgm_idx" ON "Communication" USING gin (token_array_to_text("__mediumText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Communication___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___topic_idx" ON "Communication" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'Communication___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Communication___topicTextTrgm_idx" ON "Communication" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___sharedTokens_idx" ON "CommunicationRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___sharedTokensTextTrgm_idx" ON "CommunicationRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest____tag_idx" ON "CommunicationRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest____tagTextTrgm_idx" ON "CommunicationRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___category_idx" ON "CommunicationRequest" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___categoryTextTrgm_idx" ON "CommunicationRequest" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___groupIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___groupIdnt_idx" ON "CommunicationRequest" USING gin ("__groupIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___groupIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___groupIdntTextTrgm_idx" ON "CommunicationRequest" USING gin (token_array_to_text("__groupIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___idnt_idx" ON "CommunicationRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___idntTextTrgm_idx" ON "CommunicationRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___medium_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___medium_idx" ON "CommunicationRequest" USING gin ("__medium")`);
  await fns.idempotentCreateIndex(client, results, 'CommunicationRequest___mediumTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CommunicationRequest___mediumTextTrgm_idx" ON "CommunicationRequest" USING gin (token_array_to_text("__mediumText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition___sharedTokens_idx" ON "CompartmentDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition___sharedTokensTextTrgm_idx" ON "CompartmentDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition____tag_idx" ON "CompartmentDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition____tagTextTrgm_idx" ON "CompartmentDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition___context_idx" ON "CompartmentDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition___contextTextTrgm_idx" ON "CompartmentDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition___contextType_idx" ON "CompartmentDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'CompartmentDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CompartmentDefinition___contextTypeTextTrgm_idx" ON "CompartmentDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___sharedTokens_idx" ON "Composition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___sharedTokensTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition____tag_idx" ON "Composition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Composition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition____tagTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___idnt_idx" ON "Composition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___idntTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___type_idx" ON "Composition" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___typeTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___category_idx" ON "Composition" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___categoryTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___context_idx" ON "Composition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___contextTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___relatedId_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___relatedId_idx" ON "Composition" USING gin ("__relatedId")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___relatedIdTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___relatedIdTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__relatedIdText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Composition___section_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___section_idx" ON "Composition" USING gin ("__section")`);
  await fns.idempotentCreateIndex(client, results, 'Composition___sectionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Composition___sectionTextTrgm_idx" ON "Composition" USING gin (token_array_to_text("__sectionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___sharedTokens_idx" ON "ConceptMap" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___sharedTokensTextTrgm_idx" ON "ConceptMap" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap____tag_idx" ON "ConceptMap" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap____tagTextTrgm_idx" ON "ConceptMap" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___context_idx" ON "ConceptMap" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___contextTextTrgm_idx" ON "ConceptMap" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___contextType_idx" ON "ConceptMap" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___contextTypeTextTrgm_idx" ON "ConceptMap" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___jurisdiction_idx" ON "ConceptMap" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___jurisdictionTextTrgm_idx" ON "ConceptMap" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___idnt_idx" ON "ConceptMap" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ConceptMap___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ConceptMap___idntTextTrgm_idx" ON "ConceptMap" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___sharedTokens_idx" ON "Condition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___sharedTokensTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition____tag_idx" ON "Condition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Condition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition____tagTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___code_idx" ON "Condition" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___codeTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___idnt_idx" ON "Condition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___idntTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___category_idx" ON "Condition" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___categoryTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___clinicalStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___clinicalStatus_idx" ON "Condition" USING gin ("__clinicalStatus")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___clinicalStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___clinicalStatusTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__clinicalStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___severity_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___severity_idx" ON "Condition" USING gin ("__severity")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___severityTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___severityTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__severityText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___stage_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___stage_idx" ON "Condition" USING gin ("__stage")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___stageTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___stageTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__stageText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Condition___verificationStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___verificationStatus_idx" ON "Condition" USING gin ("__verificationStatus")`);
  await fns.idempotentCreateIndex(client, results, 'Condition___verificationStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Condition___verificationStatusTextTrgm_idx" ON "Condition" USING gin (token_array_to_text("__verificationStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___sharedTokens_idx" ON "Consent" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___sharedTokensTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent____tag_idx" ON "Consent" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Consent____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent____tagTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___idnt_idx" ON "Consent" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___idntTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___action_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___action_idx" ON "Consent" USING gin ("__action")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___actionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___actionTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__actionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___category_idx" ON "Consent" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___categoryTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___purpose_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___purpose_idx" ON "Consent" USING gin ("__purpose")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___purposeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___purposeTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__purposeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___scope_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___scope_idx" ON "Consent" USING gin ("__scope")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___scopeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___scopeTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__scopeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Consent___securityLabel_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___securityLabel_idx" ON "Consent" USING gin ("__securityLabel")`);
  await fns.idempotentCreateIndex(client, results, 'Consent___securityLabelTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Consent___securityLabelTextTrgm_idx" ON "Consent" USING gin (token_array_to_text("__securityLabelText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Contract___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract___sharedTokens_idx" ON "Contract" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Contract___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract___sharedTokensTextTrgm_idx" ON "Contract" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Contract____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract____tag_idx" ON "Contract" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Contract____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract____tagTextTrgm_idx" ON "Contract" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Contract___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract___idnt_idx" ON "Contract" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Contract___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Contract___idntTextTrgm_idx" ON "Contract" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___sharedTokens_idx" ON "Coverage" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___sharedTokensTextTrgm_idx" ON "Coverage" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Coverage____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage____tag_idx" ON "Coverage" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Coverage____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage____tagTextTrgm_idx" ON "Coverage" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___classType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___classType_idx" ON "Coverage" USING gin ("__classType")`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___classTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___classTypeTextTrgm_idx" ON "Coverage" USING gin (token_array_to_text("__classTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___idnt_idx" ON "Coverage" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___idntTextTrgm_idx" ON "Coverage" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___type_idx" ON "Coverage" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Coverage___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Coverage___typeTextTrgm_idx" ON "Coverage" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest___sharedTokens_idx" ON "CoverageEligibilityRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest___sharedTokensTextTrgm_idx" ON "CoverageEligibilityRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest____tag_idx" ON "CoverageEligibilityRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest____tagTextTrgm_idx" ON "CoverageEligibilityRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest___idnt_idx" ON "CoverageEligibilityRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityRequest___idntTextTrgm_idx" ON "CoverageEligibilityRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse___sharedTokens_idx" ON "CoverageEligibilityResponse" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse___sharedTokensTextTrgm_idx" ON "CoverageEligibilityResponse" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse____tag_idx" ON "CoverageEligibilityResponse" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse____tagTextTrgm_idx" ON "CoverageEligibilityResponse" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse___idnt_idx" ON "CoverageEligibilityResponse" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'CoverageEligibilityResponse___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "CoverageEligibilityResponse___idntTextTrgm_idx" ON "CoverageEligibilityResponse" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue___sharedTokens_idx" ON "DetectedIssue" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue___sharedTokensTextTrgm_idx" ON "DetectedIssue" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue____tag_idx" ON "DetectedIssue" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue____tagTextTrgm_idx" ON "DetectedIssue" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue___idnt_idx" ON "DetectedIssue" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue___idntTextTrgm_idx" ON "DetectedIssue" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue___code_idx" ON "DetectedIssue" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'DetectedIssue___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DetectedIssue___codeTextTrgm_idx" ON "DetectedIssue" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Device___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device___sharedTokens_idx" ON "Device" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Device___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device___sharedTokensTextTrgm_idx" ON "Device" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Device____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device____tag_idx" ON "Device" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Device____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device____tagTextTrgm_idx" ON "Device" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Device___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device___idnt_idx" ON "Device" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Device___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device___idntTextTrgm_idx" ON "Device" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Device___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device___type_idx" ON "Device" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Device___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Device___typeTextTrgm_idx" ON "Device" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___sharedTokens_idx" ON "DeviceDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___sharedTokensTextTrgm_idx" ON "DeviceDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition____tag_idx" ON "DeviceDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition____tagTextTrgm_idx" ON "DeviceDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___idnt_idx" ON "DeviceDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___idntTextTrgm_idx" ON "DeviceDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___type_idx" ON "DeviceDefinition" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___typeTextTrgm_idx" ON "DeviceDefinition" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___classification_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___classification_idx" ON "DeviceDefinition" USING gin ("__classification")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceDefinition___classificationTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceDefinition___classificationTextTrgm_idx" ON "DeviceDefinition" USING gin (token_array_to_text("__classificationText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric___sharedTokens_idx" ON "DeviceMetric" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric___sharedTokensTextTrgm_idx" ON "DeviceMetric" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric____tag_idx" ON "DeviceMetric" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric____tagTextTrgm_idx" ON "DeviceMetric" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric___idnt_idx" ON "DeviceMetric" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric___idntTextTrgm_idx" ON "DeviceMetric" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric___type_idx" ON "DeviceMetric" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceMetric___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceMetric___typeTextTrgm_idx" ON "DeviceMetric" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___sharedTokens_idx" ON "DeviceRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___sharedTokensTextTrgm_idx" ON "DeviceRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest____tag_idx" ON "DeviceRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest____tagTextTrgm_idx" ON "DeviceRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___code_idx" ON "DeviceRequest" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___codeTextTrgm_idx" ON "DeviceRequest" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___idnt_idx" ON "DeviceRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___idntTextTrgm_idx" ON "DeviceRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___groupIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___groupIdnt_idx" ON "DeviceRequest" USING gin ("__groupIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceRequest___groupIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceRequest___groupIdntTextTrgm_idx" ON "DeviceRequest" USING gin (token_array_to_text("__groupIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement___sharedTokens_idx" ON "DeviceUseStatement" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement___sharedTokensTextTrgm_idx" ON "DeviceUseStatement" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement____tag_idx" ON "DeviceUseStatement" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement____tagTextTrgm_idx" ON "DeviceUseStatement" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement___idnt_idx" ON "DeviceUseStatement" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DeviceUseStatement___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DeviceUseStatement___idntTextTrgm_idx" ON "DeviceUseStatement" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___sharedTokens_idx" ON "DiagnosticReport" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___sharedTokensTextTrgm_idx" ON "DiagnosticReport" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport____tag_idx" ON "DiagnosticReport" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport____tagTextTrgm_idx" ON "DiagnosticReport" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___code_idx" ON "DiagnosticReport" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___codeTextTrgm_idx" ON "DiagnosticReport" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___idnt_idx" ON "DiagnosticReport" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___idntTextTrgm_idx" ON "DiagnosticReport" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___category_idx" ON "DiagnosticReport" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___categoryTextTrgm_idx" ON "DiagnosticReport" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___resultIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___resultIdnt_idx" ON "DiagnosticReport" USING gin ("__resultIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'DiagnosticReport___resultIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DiagnosticReport___resultIdntTextTrgm_idx" ON "DiagnosticReport" USING gin (token_array_to_text("__resultIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___sharedTokens_idx" ON "DocumentManifest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___sharedTokensTextTrgm_idx" ON "DocumentManifest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest____tag_idx" ON "DocumentManifest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest____tagTextTrgm_idx" ON "DocumentManifest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___idnt_idx" ON "DocumentManifest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___idntTextTrgm_idx" ON "DocumentManifest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___type_idx" ON "DocumentManifest" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___typeTextTrgm_idx" ON "DocumentManifest" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___relatedId_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___relatedId_idx" ON "DocumentManifest" USING gin ("__relatedId")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentManifest___relatedIdTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentManifest___relatedIdTextTrgm_idx" ON "DocumentManifest" USING gin (token_array_to_text("__relatedIdText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___sharedTokens_idx" ON "DocumentReference" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___sharedTokensTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference____tag_idx" ON "DocumentReference" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference____tagTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___idnt_idx" ON "DocumentReference" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___idntTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___type_idx" ON "DocumentReference" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___typeTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___category_idx" ON "DocumentReference" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___categoryTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___facility_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___facility_idx" ON "DocumentReference" USING gin ("__facility")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___facilityTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___facilityTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__facilityText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___format_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___format_idx" ON "DocumentReference" USING gin ("__format")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___formatTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___formatTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__formatText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___securityLabel_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___securityLabel_idx" ON "DocumentReference" USING gin ("__securityLabel")`);
  await fns.idempotentCreateIndex(client, results, 'DocumentReference___securityLabelTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DocumentReference___securityLabelTextTrgm_idx" ON "DocumentReference" USING gin (token_array_to_text("__securityLabelText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___sharedTokens_idx" ON "EffectEvidenceSynthesis" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___sharedTokensTextTrgm_idx" ON "EffectEvidenceSynthesis" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis____tag_idx" ON "EffectEvidenceSynthesis" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis____tagTextTrgm_idx" ON "EffectEvidenceSynthesis" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___context_idx" ON "EffectEvidenceSynthesis" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___contextTextTrgm_idx" ON "EffectEvidenceSynthesis" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___contextType_idx" ON "EffectEvidenceSynthesis" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___contextTypeTextTrgm_idx" ON "EffectEvidenceSynthesis" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___idnt_idx" ON "EffectEvidenceSynthesis" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___idntTextTrgm_idx" ON "EffectEvidenceSynthesis" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___jurisdiction_idx" ON "EffectEvidenceSynthesis" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'EffectEvidenceSynthesis___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EffectEvidenceSynthesis___jurisdictionTextTrgm_idx" ON "EffectEvidenceSynthesis" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___sharedTokens_idx" ON "Encounter" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___sharedTokensTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter____tag_idx" ON "Encounter" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter____tagTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___idnt_idx" ON "Encounter" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___idntTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___type_idx" ON "Encounter" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___typeTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___class_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___class_idx" ON "Encounter" USING gin ("__class")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___classTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___classTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__classText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___participantType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___participantType_idx" ON "Encounter" USING gin ("__participantType")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___participantTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___participantTypeTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__participantTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___reasonCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___reasonCode_idx" ON "Encounter" USING gin ("__reasonCode")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___reasonCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___reasonCodeTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__reasonCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___dischargeDisposition_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___dischargeDisposition_idx" ON "Encounter" USING gin ("__dischargeDisposition")`);
  await fns.idempotentCreateIndex(client, results, 'Encounter___dischargeDispositionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Encounter___dischargeDispositionTextTrgm_idx" ON "Encounter" USING gin (token_array_to_text("__dischargeDispositionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___sharedTokens_idx" ON "Endpoint" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___sharedTokensTextTrgm_idx" ON "Endpoint" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint____tag_idx" ON "Endpoint" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint____tagTextTrgm_idx" ON "Endpoint" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___connectionType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___connectionType_idx" ON "Endpoint" USING gin ("__connectionType")`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___connectionTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___connectionTypeTextTrgm_idx" ON "Endpoint" USING gin (token_array_to_text("__connectionTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___idnt_idx" ON "Endpoint" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___idntTextTrgm_idx" ON "Endpoint" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___payloadType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___payloadType_idx" ON "Endpoint" USING gin ("__payloadType")`);
  await fns.idempotentCreateIndex(client, results, 'Endpoint___payloadTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Endpoint___payloadTypeTextTrgm_idx" ON "Endpoint" USING gin (token_array_to_text("__payloadTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest___sharedTokens_idx" ON "EnrollmentRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest___sharedTokensTextTrgm_idx" ON "EnrollmentRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest____tag_idx" ON "EnrollmentRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest____tagTextTrgm_idx" ON "EnrollmentRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest___idnt_idx" ON "EnrollmentRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentRequest___idntTextTrgm_idx" ON "EnrollmentRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse___sharedTokens_idx" ON "EnrollmentResponse" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse___sharedTokensTextTrgm_idx" ON "EnrollmentResponse" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse____tag_idx" ON "EnrollmentResponse" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse____tagTextTrgm_idx" ON "EnrollmentResponse" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse___idnt_idx" ON "EnrollmentResponse" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'EnrollmentResponse___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EnrollmentResponse___idntTextTrgm_idx" ON "EnrollmentResponse" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare___sharedTokens_idx" ON "EpisodeOfCare" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare___sharedTokensTextTrgm_idx" ON "EpisodeOfCare" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare____tag_idx" ON "EpisodeOfCare" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare____tagTextTrgm_idx" ON "EpisodeOfCare" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare___idnt_idx" ON "EpisodeOfCare" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare___idntTextTrgm_idx" ON "EpisodeOfCare" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare___type_idx" ON "EpisodeOfCare" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'EpisodeOfCare___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EpisodeOfCare___typeTextTrgm_idx" ON "EpisodeOfCare" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___sharedTokens_idx" ON "EventDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___sharedTokensTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition____tag_idx" ON "EventDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition____tagTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___context_idx" ON "EventDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___contextTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___contextType_idx" ON "EventDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___contextTypeTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___idnt_idx" ON "EventDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___idntTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___jurisdiction_idx" ON "EventDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___jurisdictionTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___topic_idx" ON "EventDefinition" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'EventDefinition___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EventDefinition___topicTextTrgm_idx" ON "EventDefinition" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___sharedTokens_idx" ON "Evidence" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___sharedTokensTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence____tag_idx" ON "Evidence" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence____tagTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___context_idx" ON "Evidence" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___contextTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___contextType_idx" ON "Evidence" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___contextTypeTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___idnt_idx" ON "Evidence" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___idntTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___jurisdiction_idx" ON "Evidence" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___jurisdictionTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___topic_idx" ON "Evidence" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'Evidence___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Evidence___topicTextTrgm_idx" ON "Evidence" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable___sharedTokens_idx" ON "EvidenceVariable" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable___sharedTokensTextTrgm_idx" ON "EvidenceVariable" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable____tag_idx" ON "EvidenceVariable" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable____tagTextTrgm_idx" ON "EvidenceVariable" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable___idnt_idx" ON "EvidenceVariable" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable___idntTextTrgm_idx" ON "EvidenceVariable" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable___characteristicType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable___characteristicType_idx" ON "EvidenceVariable" USING gin ("__characteristicType")`);
  await fns.idempotentCreateIndex(client, results, 'EvidenceVariable___characteristicTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "EvidenceVariable___characteristicTypeTextTrgm_idx" ON "EvidenceVariable" USING gin (token_array_to_text("__characteristicTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___sharedTokens_idx" ON "ExampleScenario" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___sharedTokensTextTrgm_idx" ON "ExampleScenario" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario____tag_idx" ON "ExampleScenario" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario____tagTextTrgm_idx" ON "ExampleScenario" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___context_idx" ON "ExampleScenario" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___contextTextTrgm_idx" ON "ExampleScenario" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___contextType_idx" ON "ExampleScenario" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___contextTypeTextTrgm_idx" ON "ExampleScenario" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___idnt_idx" ON "ExampleScenario" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___idntTextTrgm_idx" ON "ExampleScenario" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___jurisdiction_idx" ON "ExampleScenario" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ExampleScenario___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExampleScenario___jurisdictionTextTrgm_idx" ON "ExampleScenario" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit___sharedTokens_idx" ON "ExplanationOfBenefit" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit___sharedTokensTextTrgm_idx" ON "ExplanationOfBenefit" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit____tag_idx" ON "ExplanationOfBenefit" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit____tagTextTrgm_idx" ON "ExplanationOfBenefit" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit___idnt_idx" ON "ExplanationOfBenefit" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ExplanationOfBenefit___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ExplanationOfBenefit___idntTextTrgm_idx" ON "ExplanationOfBenefit" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___sharedTokens_idx" ON "FamilyMemberHistory" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___sharedTokensTextTrgm_idx" ON "FamilyMemberHistory" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory____tag_idx" ON "FamilyMemberHistory" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory____tagTextTrgm_idx" ON "FamilyMemberHistory" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___code_idx" ON "FamilyMemberHistory" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___codeTextTrgm_idx" ON "FamilyMemberHistory" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___idnt_idx" ON "FamilyMemberHistory" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___idntTextTrgm_idx" ON "FamilyMemberHistory" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___relationship_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___relationship_idx" ON "FamilyMemberHistory" USING gin ("__relationship")`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___relationshipTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___relationshipTextTrgm_idx" ON "FamilyMemberHistory" USING gin (token_array_to_text("__relationshipText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___sex_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___sex_idx" ON "FamilyMemberHistory" USING gin ("__sex")`);
  await fns.idempotentCreateIndex(client, results, 'FamilyMemberHistory___sexTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "FamilyMemberHistory___sexTextTrgm_idx" ON "FamilyMemberHistory" USING gin (token_array_to_text("__sexText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Flag___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag___sharedTokens_idx" ON "Flag" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Flag___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag___sharedTokensTextTrgm_idx" ON "Flag" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Flag____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag____tag_idx" ON "Flag" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Flag____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag____tagTextTrgm_idx" ON "Flag" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Flag___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag___idnt_idx" ON "Flag" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Flag___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag___idntTextTrgm_idx" ON "Flag" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Flag___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag___category_idx" ON "Flag" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Flag___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Flag___categoryTextTrgm_idx" ON "Flag" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Goal___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___sharedTokens_idx" ON "Goal" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Goal___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___sharedTokensTextTrgm_idx" ON "Goal" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Goal____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal____tag_idx" ON "Goal" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Goal____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal____tagTextTrgm_idx" ON "Goal" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Goal___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___idnt_idx" ON "Goal" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Goal___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___idntTextTrgm_idx" ON "Goal" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Goal___achievementStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___achievementStatus_idx" ON "Goal" USING gin ("__achievementStatus")`);
  await fns.idempotentCreateIndex(client, results, 'Goal___achievementStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___achievementStatusTextTrgm_idx" ON "Goal" USING gin (token_array_to_text("__achievementStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Goal___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___category_idx" ON "Goal" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Goal___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___categoryTextTrgm_idx" ON "Goal" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Goal___description_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___description_idx" ON "Goal" USING gin ("__description")`);
  await fns.idempotentCreateIndex(client, results, 'Goal___descriptionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Goal___descriptionTextTrgm_idx" ON "Goal" USING gin (token_array_to_text("__descriptionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___sharedTokens_idx" ON "GraphDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___sharedTokensTextTrgm_idx" ON "GraphDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition____tag_idx" ON "GraphDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition____tagTextTrgm_idx" ON "GraphDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___context_idx" ON "GraphDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___contextTextTrgm_idx" ON "GraphDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___contextType_idx" ON "GraphDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___contextTypeTextTrgm_idx" ON "GraphDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___jurisdiction_idx" ON "GraphDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'GraphDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GraphDefinition___jurisdictionTextTrgm_idx" ON "GraphDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Group___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___sharedTokens_idx" ON "Group" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Group___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___sharedTokensTextTrgm_idx" ON "Group" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Group____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group____tag_idx" ON "Group" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Group____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group____tagTextTrgm_idx" ON "Group" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Group___characteristic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___characteristic_idx" ON "Group" USING gin ("__characteristic")`);
  await fns.idempotentCreateIndex(client, results, 'Group___characteristicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___characteristicTextTrgm_idx" ON "Group" USING gin (token_array_to_text("__characteristicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Group___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___code_idx" ON "Group" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Group___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___codeTextTrgm_idx" ON "Group" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Group___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___idnt_idx" ON "Group" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Group___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___idntTextTrgm_idx" ON "Group" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Group___value_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___value_idx" ON "Group" USING gin ("__value")`);
  await fns.idempotentCreateIndex(client, results, 'Group___valueTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Group___valueTextTrgm_idx" ON "Group" USING gin (token_array_to_text("__valueText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse___sharedTokens_idx" ON "GuidanceResponse" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse___sharedTokensTextTrgm_idx" ON "GuidanceResponse" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse____tag_idx" ON "GuidanceResponse" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse____tagTextTrgm_idx" ON "GuidanceResponse" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse___idnt_idx" ON "GuidanceResponse" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse___idntTextTrgm_idx" ON "GuidanceResponse" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse___request_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse___request_idx" ON "GuidanceResponse" USING gin ("__request")`);
  await fns.idempotentCreateIndex(client, results, 'GuidanceResponse___requestTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "GuidanceResponse___requestTextTrgm_idx" ON "GuidanceResponse" USING gin (token_array_to_text("__requestText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___sharedTokens_idx" ON "HealthcareService" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___sharedTokensTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService____tag_idx" ON "HealthcareService" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService____tagTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___characteristic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___characteristic_idx" ON "HealthcareService" USING gin ("__characteristic")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___characteristicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___characteristicTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__characteristicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___idnt_idx" ON "HealthcareService" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___idntTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___program_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___program_idx" ON "HealthcareService" USING gin ("__program")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___programTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___programTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__programText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___serviceCategory_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___serviceCategory_idx" ON "HealthcareService" USING gin ("__serviceCategory")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___serviceCategoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___serviceCategoryTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__serviceCategoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___serviceType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___serviceType_idx" ON "HealthcareService" USING gin ("__serviceType")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___serviceTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___serviceTypeTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__serviceTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___specialty_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___specialty_idx" ON "HealthcareService" USING gin ("__specialty")`);
  await fns.idempotentCreateIndex(client, results, 'HealthcareService___specialtyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "HealthcareService___specialtyTextTrgm_idx" ON "HealthcareService" USING gin (token_array_to_text("__specialtyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___sharedTokens_idx" ON "ImagingStudy" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___sharedTokensTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy____tag_idx" ON "ImagingStudy" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy____tagTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___idnt_idx" ON "ImagingStudy" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___idntTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___bodysite_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___bodysite_idx" ON "ImagingStudy" USING gin ("__bodysite")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___bodysiteTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___bodysiteTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("__bodysiteText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___dicomClass_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___dicomClass_idx" ON "ImagingStudy" USING gin ("__dicomClass")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___dicomClassTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___dicomClassTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("__dicomClassText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___modality_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___modality_idx" ON "ImagingStudy" USING gin ("__modality")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___modalityTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___modalityTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("__modalityText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___reason_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___reason_idx" ON "ImagingStudy" USING gin ("__reason")`);
  await fns.idempotentCreateIndex(client, results, 'ImagingStudy___reasonTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImagingStudy___reasonTextTrgm_idx" ON "ImagingStudy" USING gin (token_array_to_text("__reasonText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___sharedTokens_idx" ON "Immunization" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___sharedTokensTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization____tag_idx" ON "Immunization" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization____tagTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___idnt_idx" ON "Immunization" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___idntTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___reasonCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___reasonCode_idx" ON "Immunization" USING gin ("__reasonCode")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___reasonCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___reasonCodeTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("__reasonCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___statusReason_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___statusReason_idx" ON "Immunization" USING gin ("__statusReason")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___statusReasonTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___statusReasonTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("__statusReasonText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___targetDisease_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___targetDisease_idx" ON "Immunization" USING gin ("__targetDisease")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___targetDiseaseTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___targetDiseaseTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("__targetDiseaseText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___vaccineCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___vaccineCode_idx" ON "Immunization" USING gin ("__vaccineCode")`);
  await fns.idempotentCreateIndex(client, results, 'Immunization___vaccineCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Immunization___vaccineCodeTextTrgm_idx" ON "Immunization" USING gin (token_array_to_text("__vaccineCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___sharedTokens_idx" ON "ImmunizationEvaluation" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___sharedTokensTextTrgm_idx" ON "ImmunizationEvaluation" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation____tag_idx" ON "ImmunizationEvaluation" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation____tagTextTrgm_idx" ON "ImmunizationEvaluation" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___doseStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___doseStatus_idx" ON "ImmunizationEvaluation" USING gin ("__doseStatus")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___doseStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___doseStatusTextTrgm_idx" ON "ImmunizationEvaluation" USING gin (token_array_to_text("__doseStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___idnt_idx" ON "ImmunizationEvaluation" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___idntTextTrgm_idx" ON "ImmunizationEvaluation" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___targetDisease_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___targetDisease_idx" ON "ImmunizationEvaluation" USING gin ("__targetDisease")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationEvaluation___targetDiseaseTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationEvaluation___targetDiseaseTextTrgm_idx" ON "ImmunizationEvaluation" USING gin (token_array_to_text("__targetDiseaseText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___sharedTokens_idx" ON "ImmunizationRecommendation" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___sharedTokensTextTrgm_idx" ON "ImmunizationRecommendation" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation____tag_idx" ON "ImmunizationRecommendation" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation____tagTextTrgm_idx" ON "ImmunizationRecommendation" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___idnt_idx" ON "ImmunizationRecommendation" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___idntTextTrgm_idx" ON "ImmunizationRecommendation" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___status_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___status_idx" ON "ImmunizationRecommendation" USING gin ("__status")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___statusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___statusTextTrgm_idx" ON "ImmunizationRecommendation" USING gin (token_array_to_text("__statusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___targetDisease_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___targetDisease_idx" ON "ImmunizationRecommendation" USING gin ("__targetDisease")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___targetDiseaseTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___targetDiseaseTextTrgm_idx" ON "ImmunizationRecommendation" USING gin (token_array_to_text("__targetDiseaseText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___vaccineType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___vaccineType_idx" ON "ImmunizationRecommendation" USING gin ("__vaccineType")`);
  await fns.idempotentCreateIndex(client, results, 'ImmunizationRecommendation___vaccineTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImmunizationRecommendation___vaccineTypeTextTrgm_idx" ON "ImmunizationRecommendation" USING gin (token_array_to_text("__vaccineTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___sharedTokens_idx" ON "ImplementationGuide" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___sharedTokensTextTrgm_idx" ON "ImplementationGuide" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide____tag_idx" ON "ImplementationGuide" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide____tagTextTrgm_idx" ON "ImplementationGuide" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___context_idx" ON "ImplementationGuide" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___contextTextTrgm_idx" ON "ImplementationGuide" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___contextType_idx" ON "ImplementationGuide" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___contextTypeTextTrgm_idx" ON "ImplementationGuide" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___jurisdiction_idx" ON "ImplementationGuide" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ImplementationGuide___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ImplementationGuide___jurisdictionTextTrgm_idx" ON "ImplementationGuide" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan___sharedTokens_idx" ON "InsurancePlan" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan___sharedTokensTextTrgm_idx" ON "InsurancePlan" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan____tag_idx" ON "InsurancePlan" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan____tagTextTrgm_idx" ON "InsurancePlan" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan___idnt_idx" ON "InsurancePlan" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan___idntTextTrgm_idx" ON "InsurancePlan" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan___type_idx" ON "InsurancePlan" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'InsurancePlan___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "InsurancePlan___typeTextTrgm_idx" ON "InsurancePlan" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___sharedTokens_idx" ON "Invoice" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___sharedTokensTextTrgm_idx" ON "Invoice" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Invoice____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice____tag_idx" ON "Invoice" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Invoice____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice____tagTextTrgm_idx" ON "Invoice" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___idnt_idx" ON "Invoice" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___idntTextTrgm_idx" ON "Invoice" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___participantRole_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___participantRole_idx" ON "Invoice" USING gin ("__participantRole")`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___participantRoleTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___participantRoleTextTrgm_idx" ON "Invoice" USING gin (token_array_to_text("__participantRoleText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___type_idx" ON "Invoice" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Invoice___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Invoice___typeTextTrgm_idx" ON "Invoice" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___sharedTokens_idx" ON "Library" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Library___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___sharedTokensTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library____tag_idx" ON "Library" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Library____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library____tagTextTrgm_idx" ON "Library" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___context_idx" ON "Library" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'Library___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___contextTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___contextType_idx" ON "Library" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'Library___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___contextTypeTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___idnt_idx" ON "Library" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Library___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___idntTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___jurisdiction_idx" ON "Library" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'Library___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___jurisdictionTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___topic_idx" ON "Library" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'Library___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___topicTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Library___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___type_idx" ON "Library" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Library___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Library___typeTextTrgm_idx" ON "Library" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Linkage___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage___sharedTokens_idx" ON "Linkage" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Linkage___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage___sharedTokensTextTrgm_idx" ON "Linkage" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Linkage____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage____tag_idx" ON "Linkage" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Linkage____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Linkage____tagTextTrgm_idx" ON "Linkage" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'List___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___sharedTokens_idx" ON "List" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'List___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___sharedTokensTextTrgm_idx" ON "List" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'List____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List____tag_idx" ON "List" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'List____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List____tagTextTrgm_idx" ON "List" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'List___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___code_idx" ON "List" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'List___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___codeTextTrgm_idx" ON "List" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'List___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___idnt_idx" ON "List" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'List___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___idntTextTrgm_idx" ON "List" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'List___emptyReason_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___emptyReason_idx" ON "List" USING gin ("__emptyReason")`);
  await fns.idempotentCreateIndex(client, results, 'List___emptyReasonTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "List___emptyReasonTextTrgm_idx" ON "List" USING gin (token_array_to_text("__emptyReasonText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Location___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___sharedTokens_idx" ON "Location" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Location___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___sharedTokensTextTrgm_idx" ON "Location" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Location____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location____tag_idx" ON "Location" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Location____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location____tagTextTrgm_idx" ON "Location" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Location___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___idnt_idx" ON "Location" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Location___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___idntTextTrgm_idx" ON "Location" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Location___operationalStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___operationalStatus_idx" ON "Location" USING gin ("__operationalStatus")`);
  await fns.idempotentCreateIndex(client, results, 'Location___operationalStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___operationalStatusTextTrgm_idx" ON "Location" USING gin (token_array_to_text("__operationalStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Location___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___type_idx" ON "Location" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Location___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___typeTextTrgm_idx" ON "Location" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Location___physicalType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___physicalType_idx" ON "Location" USING gin ("__physicalType")`);
  await fns.idempotentCreateIndex(client, results, 'Location___physicalTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Location___physicalTypeTextTrgm_idx" ON "Location" USING gin (token_array_to_text("__physicalTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___sharedTokens_idx" ON "Measure" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Measure___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___sharedTokensTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure____tag_idx" ON "Measure" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Measure____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure____tagTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___context_idx" ON "Measure" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'Measure___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___contextTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___contextType_idx" ON "Measure" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'Measure___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___contextTypeTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___idnt_idx" ON "Measure" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Measure___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___idntTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___jurisdiction_idx" ON "Measure" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'Measure___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___jurisdictionTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Measure___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___topic_idx" ON "Measure" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'Measure___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Measure___topicTextTrgm_idx" ON "Measure" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport___sharedTokens_idx" ON "MeasureReport" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport___sharedTokensTextTrgm_idx" ON "MeasureReport" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport____tag_idx" ON "MeasureReport" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport____tagTextTrgm_idx" ON "MeasureReport" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport___idnt_idx" ON "MeasureReport" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MeasureReport___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MeasureReport___idntTextTrgm_idx" ON "MeasureReport" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___sharedTokens_idx" ON "Media" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Media___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___sharedTokensTextTrgm_idx" ON "Media" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media____tag_idx" ON "Media" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Media____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media____tagTextTrgm_idx" ON "Media" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___idnt_idx" ON "Media" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Media___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___idntTextTrgm_idx" ON "Media" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media___modality_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___modality_idx" ON "Media" USING gin ("__modality")`);
  await fns.idempotentCreateIndex(client, results, 'Media___modalityTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___modalityTextTrgm_idx" ON "Media" USING gin (token_array_to_text("__modalityText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media___site_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___site_idx" ON "Media" USING gin ("__site")`);
  await fns.idempotentCreateIndex(client, results, 'Media___siteTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___siteTextTrgm_idx" ON "Media" USING gin (token_array_to_text("__siteText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___type_idx" ON "Media" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Media___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___typeTextTrgm_idx" ON "Media" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Media___view_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___view_idx" ON "Media" USING gin ("__view")`);
  await fns.idempotentCreateIndex(client, results, 'Media___viewTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Media___viewTextTrgm_idx" ON "Media" USING gin (token_array_to_text("__viewText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Medication___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___sharedTokens_idx" ON "Medication" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Medication___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___sharedTokensTextTrgm_idx" ON "Medication" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Medication____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication____tag_idx" ON "Medication" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Medication____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication____tagTextTrgm_idx" ON "Medication" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Medication___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___code_idx" ON "Medication" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Medication___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___codeTextTrgm_idx" ON "Medication" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Medication___form_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___form_idx" ON "Medication" USING gin ("__form")`);
  await fns.idempotentCreateIndex(client, results, 'Medication___formTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___formTextTrgm_idx" ON "Medication" USING gin (token_array_to_text("__formText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Medication___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___idnt_idx" ON "Medication" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Medication___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___idntTextTrgm_idx" ON "Medication" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Medication___ingredientCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___ingredientCode_idx" ON "Medication" USING gin ("__ingredientCode")`);
  await fns.idempotentCreateIndex(client, results, 'Medication___ingredientCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Medication___ingredientCodeTextTrgm_idx" ON "Medication" USING gin (token_array_to_text("__ingredientCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___sharedTokens_idx" ON "MedicationAdministration" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___sharedTokensTextTrgm_idx" ON "MedicationAdministration" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration____tag_idx" ON "MedicationAdministration" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration____tagTextTrgm_idx" ON "MedicationAdministration" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___code_idx" ON "MedicationAdministration" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___codeTextTrgm_idx" ON "MedicationAdministration" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___idnt_idx" ON "MedicationAdministration" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___idntTextTrgm_idx" ON "MedicationAdministration" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___reasonGiven_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___reasonGiven_idx" ON "MedicationAdministration" USING gin ("__reasonGiven")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___reasonGivenTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___reasonGivenTextTrgm_idx" ON "MedicationAdministration" USING gin (token_array_to_text("__reasonGivenText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___reasonNotGiven_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___reasonNotGiven_idx" ON "MedicationAdministration" USING gin ("__reasonNotGiven")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationAdministration___reasonNotGivenTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationAdministration___reasonNotGivenTextTrgm_idx" ON "MedicationAdministration" USING gin (token_array_to_text("__reasonNotGivenText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___sharedTokens_idx" ON "MedicationDispense" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___sharedTokensTextTrgm_idx" ON "MedicationDispense" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense____tag_idx" ON "MedicationDispense" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense____tagTextTrgm_idx" ON "MedicationDispense" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___code_idx" ON "MedicationDispense" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___codeTextTrgm_idx" ON "MedicationDispense" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___idnt_idx" ON "MedicationDispense" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___idntTextTrgm_idx" ON "MedicationDispense" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___type_idx" ON "MedicationDispense" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationDispense___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationDispense___typeTextTrgm_idx" ON "MedicationDispense" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___sharedTokens_idx" ON "MedicationKnowledge" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___sharedTokensTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge____tag_idx" ON "MedicationKnowledge" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge____tagTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___classification_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___classification_idx" ON "MedicationKnowledge" USING gin ("__classification")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___classificationTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___classificationTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__classificationText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___classificationType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___classificationType_idx" ON "MedicationKnowledge" USING gin ("__classificationType")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___classificationTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___classificationTypeTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__classificationTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___code_idx" ON "MedicationKnowledge" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___codeTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___doseform_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___doseform_idx" ON "MedicationKnowledge" USING gin ("__doseform")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___doseformTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___doseformTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__doseformText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___ingredientCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___ingredientCode_idx" ON "MedicationKnowledge" USING gin ("__ingredientCode")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___ingredientCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___ingredientCodeTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__ingredientCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___monitoringProgramType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___monitoringProgramType_idx" ON "MedicationKnowledge" USING gin ("__monitoringProgramType")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___monitoringProgramTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___monitoringProgramTypeTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__monitoringProgramTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___monographType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___monographType_idx" ON "MedicationKnowledge" USING gin ("__monographType")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationKnowledge___monographTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationKnowledge___monographTypeTextTrgm_idx" ON "MedicationKnowledge" USING gin (token_array_to_text("__monographTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___sharedTokens_idx" ON "MedicationRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___sharedTokensTextTrgm_idx" ON "MedicationRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest____tag_idx" ON "MedicationRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest____tagTextTrgm_idx" ON "MedicationRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___code_idx" ON "MedicationRequest" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___codeTextTrgm_idx" ON "MedicationRequest" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___idnt_idx" ON "MedicationRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___idntTextTrgm_idx" ON "MedicationRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___category_idx" ON "MedicationRequest" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationRequest___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationRequest___categoryTextTrgm_idx" ON "MedicationRequest" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___sharedTokens_idx" ON "MedicationStatement" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___sharedTokensTextTrgm_idx" ON "MedicationStatement" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement____tag_idx" ON "MedicationStatement" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement____tagTextTrgm_idx" ON "MedicationStatement" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___code_idx" ON "MedicationStatement" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___codeTextTrgm_idx" ON "MedicationStatement" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___idnt_idx" ON "MedicationStatement" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___idntTextTrgm_idx" ON "MedicationStatement" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___category_idx" ON "MedicationStatement" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'MedicationStatement___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicationStatement___categoryTextTrgm_idx" ON "MedicationStatement" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct___sharedTokens_idx" ON "MedicinalProduct" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct___sharedTokensTextTrgm_idx" ON "MedicinalProduct" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct____tag_idx" ON "MedicinalProduct" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct____tagTextTrgm_idx" ON "MedicinalProduct" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct___idnt_idx" ON "MedicinalProduct" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct___idntTextTrgm_idx" ON "MedicinalProduct" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct___nameLanguage_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct___nameLanguage_idx" ON "MedicinalProduct" USING gin ("__nameLanguage")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProduct___nameLanguageTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProduct___nameLanguageTextTrgm_idx" ON "MedicinalProduct" USING gin (token_array_to_text("__nameLanguageText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPA___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___sharedTokens_idx" ON "MedicinalProductAuthorization" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MPA___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___sharedTokensTextTrgm_idx" ON "MedicinalProductAuthorization" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPA____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA____tag_idx" ON "MedicinalProductAuthorization" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MPA____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA____tagTextTrgm_idx" ON "MedicinalProductAuthorization" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPA___country_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___country_idx" ON "MedicinalProductAuthorization" USING gin ("__country")`);
  await fns.idempotentCreateIndex(client, results, 'MPA___countryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___countryTextTrgm_idx" ON "MedicinalProductAuthorization" USING gin (token_array_to_text("__countryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPA___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___idnt_idx" ON "MedicinalProductAuthorization" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MPA___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___idntTextTrgm_idx" ON "MedicinalProductAuthorization" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPA___status_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___status_idx" ON "MedicinalProductAuthorization" USING gin ("__status")`);
  await fns.idempotentCreateIndex(client, results, 'MPA___statusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPA___statusTextTrgm_idx" ON "MedicinalProductAuthorization" USING gin (token_array_to_text("__statusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPC___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPC___sharedTokens_idx" ON "MedicinalProductContraindication" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MPC___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPC___sharedTokensTextTrgm_idx" ON "MedicinalProductContraindication" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPC____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPC____tag_idx" ON "MedicinalProductContraindication" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MPC____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPC____tagTextTrgm_idx" ON "MedicinalProductContraindication" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIndication___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIndication___sharedTokens_idx" ON "MedicinalProductIndication" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIndication___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIndication___sharedTokensTextTrgm_idx" ON "MedicinalProductIndication" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIndication____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIndication____tag_idx" ON "MedicinalProductIndication" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIndication____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIndication____tagTextTrgm_idx" ON "MedicinalProductIndication" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIngredient___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIngredient___sharedTokens_idx" ON "MedicinalProductIngredient" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIngredient___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIngredient___sharedTokensTextTrgm_idx" ON "MedicinalProductIngredient" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIngredient____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIngredient____tag_idx" ON "MedicinalProductIngredient" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductIngredient____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductIngredient____tagTextTrgm_idx" ON "MedicinalProductIngredient" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductInteraction___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductInteraction___sharedTokens_idx" ON "MedicinalProductInteraction" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductInteraction___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductInteraction___sharedTokensTextTrgm_idx" ON "MedicinalProductInteraction" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductInteraction____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductInteraction____tag_idx" ON "MedicinalProductInteraction" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductInteraction____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductInteraction____tagTextTrgm_idx" ON "MedicinalProductInteraction" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductManufactured___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductManufactured___sharedTokens_idx" ON "MedicinalProductManufactured" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductManufactured___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductManufactured___sharedTokensTextTrgm_idx" ON "MedicinalProductManufactured" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductManufactured____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductManufactured____tag_idx" ON "MedicinalProductManufactured" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductManufactured____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductManufactured____tagTextTrgm_idx" ON "MedicinalProductManufactured" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged___sharedTokens_idx" ON "MedicinalProductPackaged" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged___sharedTokensTextTrgm_idx" ON "MedicinalProductPackaged" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged____tag_idx" ON "MedicinalProductPackaged" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged____tagTextTrgm_idx" ON "MedicinalProductPackaged" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged___idnt_idx" ON "MedicinalProductPackaged" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MedicinalProductPackaged___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MedicinalProductPackaged___idntTextTrgm_idx" ON "MedicinalProductPackaged" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPP___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___sharedTokens_idx" ON "MedicinalProductPharmaceutical" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MPP___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___sharedTokensTextTrgm_idx" ON "MedicinalProductPharmaceutical" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPP____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP____tag_idx" ON "MedicinalProductPharmaceutical" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MPP____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP____tagTextTrgm_idx" ON "MedicinalProductPharmaceutical" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPP___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___idnt_idx" ON "MedicinalProductPharmaceutical" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MPP___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___idntTextTrgm_idx" ON "MedicinalProductPharmaceutical" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPP___route_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___route_idx" ON "MedicinalProductPharmaceutical" USING gin ("__route")`);
  await fns.idempotentCreateIndex(client, results, 'MPP___routeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___routeTextTrgm_idx" ON "MedicinalProductPharmaceutical" USING gin (token_array_to_text("__routeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPP___targetSpecies_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___targetSpecies_idx" ON "MedicinalProductPharmaceutical" USING gin ("__targetSpecies")`);
  await fns.idempotentCreateIndex(client, results, 'MPP___targetSpeciesTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPP___targetSpeciesTextTrgm_idx" ON "MedicinalProductPharmaceutical" USING gin (token_array_to_text("__targetSpeciesText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPUE___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPUE___sharedTokens_idx" ON "MedicinalProductUndesirableEffect" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MPUE___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPUE___sharedTokensTextTrgm_idx" ON "MedicinalProductUndesirableEffect" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MPUE____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPUE____tag_idx" ON "MedicinalProductUndesirableEffect" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MPUE____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MPUE____tagTextTrgm_idx" ON "MedicinalProductUndesirableEffect" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___sharedTokens_idx" ON "MessageDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___sharedTokensTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition____tag_idx" ON "MessageDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition____tagTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___context_idx" ON "MessageDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___contextTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___contextType_idx" ON "MessageDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___contextTypeTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___jurisdiction_idx" ON "MessageDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___jurisdictionTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___idnt_idx" ON "MessageDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___idntTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___event_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___event_idx" ON "MessageDefinition" USING gin ("__event")`);
  await fns.idempotentCreateIndex(client, results, 'MessageDefinition___eventTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageDefinition___eventTextTrgm_idx" ON "MessageDefinition" USING gin (token_array_to_text("__eventText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader___sharedTokens_idx" ON "MessageHeader" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader___sharedTokensTextTrgm_idx" ON "MessageHeader" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader____tag_idx" ON "MessageHeader" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader____tagTextTrgm_idx" ON "MessageHeader" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader___event_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader___event_idx" ON "MessageHeader" USING gin ("__event")`);
  await fns.idempotentCreateIndex(client, results, 'MessageHeader___eventTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MessageHeader___eventTextTrgm_idx" ON "MessageHeader" USING gin (token_array_to_text("__eventText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___sharedTokens_idx" ON "MolecularSequence" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___sharedTokensTextTrgm_idx" ON "MolecularSequence" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence____tag_idx" ON "MolecularSequence" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence____tagTextTrgm_idx" ON "MolecularSequence" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___chromosome_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___chromosome_idx" ON "MolecularSequence" USING gin ("__chromosome")`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___chromosomeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___chromosomeTextTrgm_idx" ON "MolecularSequence" USING gin (token_array_to_text("__chromosomeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___idnt_idx" ON "MolecularSequence" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___idntTextTrgm_idx" ON "MolecularSequence" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___referenceseqid_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___referenceseqid_idx" ON "MolecularSequence" USING gin ("__referenceseqid")`);
  await fns.idempotentCreateIndex(client, results, 'MolecularSequence___referenceseqidTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "MolecularSequence___referenceseqidTextTrgm_idx" ON "MolecularSequence" USING gin (token_array_to_text("__referenceseqidText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___sharedTokens_idx" ON "NamingSystem" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___sharedTokensTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem____tag_idx" ON "NamingSystem" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem____tagTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___context_idx" ON "NamingSystem" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___contextTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___contextType_idx" ON "NamingSystem" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___contextTypeTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___jurisdiction_idx" ON "NamingSystem" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___jurisdictionTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___telecom_idx" ON "NamingSystem" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___telecomTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___type_idx" ON "NamingSystem" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'NamingSystem___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NamingSystem___typeTextTrgm_idx" ON "NamingSystem" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___sharedTokens_idx" ON "NutritionOrder" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___sharedTokensTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder____tag_idx" ON "NutritionOrder" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder____tagTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___idnt_idx" ON "NutritionOrder" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___idntTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___additive_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___additive_idx" ON "NutritionOrder" USING gin ("__additive")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___additiveTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___additiveTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("__additiveText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___formula_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___formula_idx" ON "NutritionOrder" USING gin ("__formula")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___formulaTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___formulaTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("__formulaText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___oraldiet_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___oraldiet_idx" ON "NutritionOrder" USING gin ("__oraldiet")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___oraldietTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___oraldietTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("__oraldietText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___supplement_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___supplement_idx" ON "NutritionOrder" USING gin ("__supplement")`);
  await fns.idempotentCreateIndex(client, results, 'NutritionOrder___supplementTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "NutritionOrder___supplementTextTrgm_idx" ON "NutritionOrder" USING gin (token_array_to_text("__supplementText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___sharedTokens_idx" ON "Observation" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___sharedTokensTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation____tag_idx" ON "Observation" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Observation____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation____tagTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___code_idx" ON "Observation" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___codeTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___idnt_idx" ON "Observation" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___idntTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___category_idx" ON "Observation" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___categoryTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___comboCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___comboCode_idx" ON "Observation" USING gin ("__comboCode")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___comboCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___comboCodeTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__comboCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___comboDataAbsentReason_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___comboDataAbsentReason_idx" ON "Observation" USING gin ("__comboDataAbsentReason")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___comboDataAbsentReasonTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___comboDataAbsentReasonTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__comboDataAbsentReasonText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___comboValueConcept_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___comboValueConcept_idx" ON "Observation" USING gin ("__comboValueConcept")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___comboValueConceptTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___comboValueConceptTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__comboValueConceptText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___componentCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___componentCode_idx" ON "Observation" USING gin ("__componentCode")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___componentCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___componentCodeTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__componentCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___componentValueConcept_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___componentValueConcept_idx" ON "Observation" USING gin ("__componentValueConcept")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___componentValueConceptTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___componentValueConceptTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__componentValueConceptText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___dataAbsentReason_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___dataAbsentReason_idx" ON "Observation" USING gin ("__dataAbsentReason")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___dataAbsentReasonTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___dataAbsentReasonTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__dataAbsentReasonText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___method_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___method_idx" ON "Observation" USING gin ("__method")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___methodTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___methodTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__methodText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___valueConcept_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___valueConcept_idx" ON "Observation" USING gin ("__valueConcept")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___valueConceptTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___valueConceptTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__valueConceptText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___patientIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___patientIdnt_idx" ON "Observation" USING gin ("__patientIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___patientIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___patientIdntTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__patientIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___performerIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___performerIdnt_idx" ON "Observation" USING gin ("__performerIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___performerIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___performerIdntTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__performerIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Observation___subjectIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___subjectIdnt_idx" ON "Observation" USING gin ("__subjectIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'Observation___subjectIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Observation___subjectIdntTextTrgm_idx" ON "Observation" USING gin (token_array_to_text("__subjectIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition___sharedTokens_idx" ON "ObservationDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition___sharedTokensTextTrgm_idx" ON "ObservationDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition____tag_idx" ON "ObservationDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition____tagTextTrgm_idx" ON "ObservationDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition___code_idx" ON "ObservationDefinition" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'ObservationDefinition___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ObservationDefinition___codeTextTrgm_idx" ON "ObservationDefinition" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___sharedTokens_idx" ON "OperationDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___sharedTokensTextTrgm_idx" ON "OperationDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition____tag_idx" ON "OperationDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition____tagTextTrgm_idx" ON "OperationDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___context_idx" ON "OperationDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___contextTextTrgm_idx" ON "OperationDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___contextType_idx" ON "OperationDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___contextTypeTextTrgm_idx" ON "OperationDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___jurisdiction_idx" ON "OperationDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'OperationDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationDefinition___jurisdictionTextTrgm_idx" ON "OperationDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationOutcome___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationOutcome___sharedTokens_idx" ON "OperationOutcome" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'OperationOutcome___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationOutcome___sharedTokensTextTrgm_idx" ON "OperationOutcome" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OperationOutcome____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationOutcome____tag_idx" ON "OperationOutcome" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'OperationOutcome____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OperationOutcome____tagTextTrgm_idx" ON "OperationOutcome" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Organization___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization___sharedTokens_idx" ON "Organization" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Organization___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization___sharedTokensTextTrgm_idx" ON "Organization" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Organization____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization____tag_idx" ON "Organization" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Organization____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization____tagTextTrgm_idx" ON "Organization" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Organization___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization___idnt_idx" ON "Organization" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Organization___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization___idntTextTrgm_idx" ON "Organization" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Organization___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization___type_idx" ON "Organization" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Organization___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Organization___typeTextTrgm_idx" ON "Organization" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___sharedTokens_idx" ON "OrganizationAffiliation" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___sharedTokensTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation____tag_idx" ON "OrganizationAffiliation" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation____tagTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___email_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___email_idx" ON "OrganizationAffiliation" USING gin ("__email")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___emailTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___emailTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__emailText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___idnt_idx" ON "OrganizationAffiliation" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___idntTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___phone_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___phone_idx" ON "OrganizationAffiliation" USING gin ("__phone")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___phoneTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___phoneTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__phoneText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___role_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___role_idx" ON "OrganizationAffiliation" USING gin ("__role")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___roleTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___roleTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__roleText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___specialty_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___specialty_idx" ON "OrganizationAffiliation" USING gin ("__specialty")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___specialtyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___specialtyTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__specialtyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___telecom_idx" ON "OrganizationAffiliation" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'OrganizationAffiliation___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "OrganizationAffiliation___telecomTextTrgm_idx" ON "OrganizationAffiliation" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Parameters___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Parameters___sharedTokens_idx" ON "Parameters" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Parameters___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Parameters___sharedTokensTextTrgm_idx" ON "Parameters" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Parameters____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Parameters____tag_idx" ON "Parameters" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Parameters____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Parameters____tagTextTrgm_idx" ON "Parameters" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___sharedTokens_idx" ON "Patient" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Patient___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___sharedTokensTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient____tag_idx" ON "Patient" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Patient____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient____tagTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient___email_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___email_idx" ON "Patient" USING gin ("__email")`);
  await fns.idempotentCreateIndex(client, results, 'Patient___emailTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___emailTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("__emailText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___idnt_idx" ON "Patient" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Patient___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___idntTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient___language_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___language_idx" ON "Patient" USING gin ("__language")`);
  await fns.idempotentCreateIndex(client, results, 'Patient___languageTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___languageTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("__languageText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient___phone_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___phone_idx" ON "Patient" USING gin ("__phone")`);
  await fns.idempotentCreateIndex(client, results, 'Patient___phoneTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___phoneTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("__phoneText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Patient___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___telecom_idx" ON "Patient" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'Patient___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Patient___telecomTextTrgm_idx" ON "Patient" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice___sharedTokens_idx" ON "PaymentNotice" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice___sharedTokensTextTrgm_idx" ON "PaymentNotice" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice____tag_idx" ON "PaymentNotice" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice____tagTextTrgm_idx" ON "PaymentNotice" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice___idnt_idx" ON "PaymentNotice" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice___idntTextTrgm_idx" ON "PaymentNotice" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice___paymentStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice___paymentStatus_idx" ON "PaymentNotice" USING gin ("__paymentStatus")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentNotice___paymentStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentNotice___paymentStatusTextTrgm_idx" ON "PaymentNotice" USING gin (token_array_to_text("__paymentStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation___sharedTokens_idx" ON "PaymentReconciliation" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation___sharedTokensTextTrgm_idx" ON "PaymentReconciliation" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation____tag_idx" ON "PaymentReconciliation" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation____tagTextTrgm_idx" ON "PaymentReconciliation" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation___idnt_idx" ON "PaymentReconciliation" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'PaymentReconciliation___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PaymentReconciliation___idntTextTrgm_idx" ON "PaymentReconciliation" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Person___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___sharedTokens_idx" ON "Person" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Person___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___sharedTokensTextTrgm_idx" ON "Person" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Person____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person____tag_idx" ON "Person" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Person____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person____tagTextTrgm_idx" ON "Person" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Person___email_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___email_idx" ON "Person" USING gin ("__email")`);
  await fns.idempotentCreateIndex(client, results, 'Person___emailTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___emailTextTrgm_idx" ON "Person" USING gin (token_array_to_text("__emailText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Person___phone_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___phone_idx" ON "Person" USING gin ("__phone")`);
  await fns.idempotentCreateIndex(client, results, 'Person___phoneTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___phoneTextTrgm_idx" ON "Person" USING gin (token_array_to_text("__phoneText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Person___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___telecom_idx" ON "Person" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'Person___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___telecomTextTrgm_idx" ON "Person" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Person___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___idnt_idx" ON "Person" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Person___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Person___idntTextTrgm_idx" ON "Person" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___sharedTokens_idx" ON "PlanDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___sharedTokensTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition____tag_idx" ON "PlanDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition____tagTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___context_idx" ON "PlanDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___contextTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___contextType_idx" ON "PlanDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___contextTypeTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___idnt_idx" ON "PlanDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___idntTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___jurisdiction_idx" ON "PlanDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___jurisdictionTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___topic_idx" ON "PlanDefinition" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___topicTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___type_idx" ON "PlanDefinition" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'PlanDefinition___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PlanDefinition___typeTextTrgm_idx" ON "PlanDefinition" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___sharedTokens_idx" ON "Practitioner" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___sharedTokensTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner____tag_idx" ON "Practitioner" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner____tagTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___email_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___email_idx" ON "Practitioner" USING gin ("__email")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___emailTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___emailTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__emailText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___phone_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___phone_idx" ON "Practitioner" USING gin ("__phone")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___phoneTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___phoneTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__phoneText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___telecom_idx" ON "Practitioner" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___telecomTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___communication_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___communication_idx" ON "Practitioner" USING gin ("__communication")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___communicationTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___communicationTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__communicationText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___idnt_idx" ON "Practitioner" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___idntTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___qualificationCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___qualificationCode_idx" ON "Practitioner" USING gin ("__qualificationCode")`);
  await fns.idempotentCreateIndex(client, results, 'Practitioner___qualificationCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Practitioner___qualificationCodeTextTrgm_idx" ON "Practitioner" USING gin (token_array_to_text("__qualificationCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___sharedTokens_idx" ON "PractitionerRole" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___sharedTokensTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole____tag_idx" ON "PractitionerRole" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole____tagTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___email_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___email_idx" ON "PractitionerRole" USING gin ("__email")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___emailTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___emailTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__emailText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___phone_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___phone_idx" ON "PractitionerRole" USING gin ("__phone")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___phoneTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___phoneTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__phoneText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___telecom_idx" ON "PractitionerRole" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___telecomTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___idnt_idx" ON "PractitionerRole" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___idntTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___role_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___role_idx" ON "PractitionerRole" USING gin ("__role")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___roleTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___roleTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__roleText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___specialty_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___specialty_idx" ON "PractitionerRole" USING gin ("__specialty")`);
  await fns.idempotentCreateIndex(client, results, 'PractitionerRole___specialtyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PractitionerRole___specialtyTextTrgm_idx" ON "PractitionerRole" USING gin (token_array_to_text("__specialtyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___sharedTokens_idx" ON "Procedure" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___sharedTokensTextTrgm_idx" ON "Procedure" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure____tag_idx" ON "Procedure" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Procedure____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure____tagTextTrgm_idx" ON "Procedure" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___code_idx" ON "Procedure" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___codeTextTrgm_idx" ON "Procedure" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___idnt_idx" ON "Procedure" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___idntTextTrgm_idx" ON "Procedure" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___category_idx" ON "Procedure" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___categoryTextTrgm_idx" ON "Procedure" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___reasonCode_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___reasonCode_idx" ON "Procedure" USING gin ("__reasonCode")`);
  await fns.idempotentCreateIndex(client, results, 'Procedure___reasonCodeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Procedure___reasonCodeTextTrgm_idx" ON "Procedure" USING gin (token_array_to_text("__reasonCodeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___sharedTokens_idx" ON "Provenance" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___sharedTokensTextTrgm_idx" ON "Provenance" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Provenance____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance____tag_idx" ON "Provenance" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Provenance____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance____tagTextTrgm_idx" ON "Provenance" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___agentRole_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___agentRole_idx" ON "Provenance" USING gin ("__agentRole")`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___agentRoleTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___agentRoleTextTrgm_idx" ON "Provenance" USING gin (token_array_to_text("__agentRoleText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___agentType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___agentType_idx" ON "Provenance" USING gin ("__agentType")`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___agentTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___agentTypeTextTrgm_idx" ON "Provenance" USING gin (token_array_to_text("__agentTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___signatureType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___signatureType_idx" ON "Provenance" USING gin ("__signatureType")`);
  await fns.idempotentCreateIndex(client, results, 'Provenance___signatureTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Provenance___signatureTypeTextTrgm_idx" ON "Provenance" USING gin (token_array_to_text("__signatureTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___sharedTokens_idx" ON "Questionnaire" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___sharedTokensTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire____tag_idx" ON "Questionnaire" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire____tagTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___code_idx" ON "Questionnaire" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___codeTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___context_idx" ON "Questionnaire" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___contextTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___contextType_idx" ON "Questionnaire" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___contextTypeTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___idnt_idx" ON "Questionnaire" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___idntTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___jurisdiction_idx" ON "Questionnaire" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'Questionnaire___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Questionnaire___jurisdictionTextTrgm_idx" ON "Questionnaire" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse___sharedTokens_idx" ON "QuestionnaireResponse" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse___sharedTokensTextTrgm_idx" ON "QuestionnaireResponse" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse____tag_idx" ON "QuestionnaireResponse" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse____tagTextTrgm_idx" ON "QuestionnaireResponse" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse___idnt_idx" ON "QuestionnaireResponse" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'QuestionnaireResponse___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "QuestionnaireResponse___idntTextTrgm_idx" ON "QuestionnaireResponse" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___sharedTokens_idx" ON "RelatedPerson" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___sharedTokensTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson____tag_idx" ON "RelatedPerson" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson____tagTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___email_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___email_idx" ON "RelatedPerson" USING gin ("__email")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___emailTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___emailTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("__emailText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___phone_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___phone_idx" ON "RelatedPerson" USING gin ("__phone")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___phoneTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___phoneTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("__phoneText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___telecom_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___telecom_idx" ON "RelatedPerson" USING gin ("__telecom")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___telecomTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___telecomTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("__telecomText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___idnt_idx" ON "RelatedPerson" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___idntTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___relationship_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___relationship_idx" ON "RelatedPerson" USING gin ("__relationship")`);
  await fns.idempotentCreateIndex(client, results, 'RelatedPerson___relationshipTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RelatedPerson___relationshipTextTrgm_idx" ON "RelatedPerson" USING gin (token_array_to_text("__relationshipText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___sharedTokens_idx" ON "RequestGroup" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___sharedTokensTextTrgm_idx" ON "RequestGroup" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup____tag_idx" ON "RequestGroup" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup____tagTextTrgm_idx" ON "RequestGroup" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___code_idx" ON "RequestGroup" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___codeTextTrgm_idx" ON "RequestGroup" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___groupIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___groupIdnt_idx" ON "RequestGroup" USING gin ("__groupIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___groupIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___groupIdntTextTrgm_idx" ON "RequestGroup" USING gin (token_array_to_text("__groupIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___idnt_idx" ON "RequestGroup" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'RequestGroup___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RequestGroup___idntTextTrgm_idx" ON "RequestGroup" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___sharedTokens_idx" ON "ResearchDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___sharedTokensTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition____tag_idx" ON "ResearchDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition____tagTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___context_idx" ON "ResearchDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___contextTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___contextType_idx" ON "ResearchDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___contextTypeTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___idnt_idx" ON "ResearchDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___idntTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___jurisdiction_idx" ON "ResearchDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___jurisdictionTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___topic_idx" ON "ResearchDefinition" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchDefinition___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchDefinition___topicTextTrgm_idx" ON "ResearchDefinition" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___sharedTokens_idx" ON "ResearchElementDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___sharedTokensTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition____tag_idx" ON "ResearchElementDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition____tagTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___context_idx" ON "ResearchElementDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___contextTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___contextType_idx" ON "ResearchElementDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___contextTypeTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___idnt_idx" ON "ResearchElementDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___idntTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___jurisdiction_idx" ON "ResearchElementDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___jurisdictionTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___topic_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___topic_idx" ON "ResearchElementDefinition" USING gin ("__topic")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchElementDefinition___topicTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchElementDefinition___topicTextTrgm_idx" ON "ResearchElementDefinition" USING gin (token_array_to_text("__topicText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___sharedTokens_idx" ON "ResearchStudy" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___sharedTokensTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy____tag_idx" ON "ResearchStudy" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy____tagTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___idnt_idx" ON "ResearchStudy" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___idntTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___keyword_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___keyword_idx" ON "ResearchStudy" USING gin ("__keyword")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___keywordTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___keywordTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__keywordText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___condition_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___condition_idx" ON "ResearchStudy" USING gin ("__condition")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___conditionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___conditionTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__conditionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___phase_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___phase_idx" ON "ResearchStudy" USING gin ("__phase")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___phaseTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___phaseTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__phaseText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___studyDesign_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___studyDesign_idx" ON "ResearchStudy" USING gin ("__studyDesign")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___studyDesignTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___studyDesignTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__studyDesignText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___eligibilityIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___eligibilityIdnt_idx" ON "ResearchStudy" USING gin ("__eligibilityIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchStudy___eligibilityIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchStudy___eligibilityIdntTextTrgm_idx" ON "ResearchStudy" USING gin (token_array_to_text("__eligibilityIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject___sharedTokens_idx" ON "ResearchSubject" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject___sharedTokensTextTrgm_idx" ON "ResearchSubject" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject____tag_idx" ON "ResearchSubject" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject____tagTextTrgm_idx" ON "ResearchSubject" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject___idnt_idx" ON "ResearchSubject" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ResearchSubject___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ResearchSubject___idntTextTrgm_idx" ON "ResearchSubject" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___sharedTokens_idx" ON "RiskAssessment" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___sharedTokensTextTrgm_idx" ON "RiskAssessment" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment____tag_idx" ON "RiskAssessment" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment____tagTextTrgm_idx" ON "RiskAssessment" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___idnt_idx" ON "RiskAssessment" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___idntTextTrgm_idx" ON "RiskAssessment" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___method_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___method_idx" ON "RiskAssessment" USING gin ("__method")`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___methodTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___methodTextTrgm_idx" ON "RiskAssessment" USING gin (token_array_to_text("__methodText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___risk_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___risk_idx" ON "RiskAssessment" USING gin ("__risk")`);
  await fns.idempotentCreateIndex(client, results, 'RiskAssessment___riskTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskAssessment___riskTextTrgm_idx" ON "RiskAssessment" USING gin (token_array_to_text("__riskText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___sharedTokens_idx" ON "RiskEvidenceSynthesis" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___sharedTokensTextTrgm_idx" ON "RiskEvidenceSynthesis" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis____tag_idx" ON "RiskEvidenceSynthesis" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis____tagTextTrgm_idx" ON "RiskEvidenceSynthesis" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___context_idx" ON "RiskEvidenceSynthesis" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___contextTextTrgm_idx" ON "RiskEvidenceSynthesis" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___contextType_idx" ON "RiskEvidenceSynthesis" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___contextTypeTextTrgm_idx" ON "RiskEvidenceSynthesis" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___idnt_idx" ON "RiskEvidenceSynthesis" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___idntTextTrgm_idx" ON "RiskEvidenceSynthesis" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___jurisdiction_idx" ON "RiskEvidenceSynthesis" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'RiskEvidenceSynthesis___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "RiskEvidenceSynthesis___jurisdictionTextTrgm_idx" ON "RiskEvidenceSynthesis" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___sharedTokens_idx" ON "Schedule" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___sharedTokensTextTrgm_idx" ON "Schedule" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule____tag_idx" ON "Schedule" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Schedule____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule____tagTextTrgm_idx" ON "Schedule" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___idnt_idx" ON "Schedule" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___idntTextTrgm_idx" ON "Schedule" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___serviceCategory_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___serviceCategory_idx" ON "Schedule" USING gin ("__serviceCategory")`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___serviceCategoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___serviceCategoryTextTrgm_idx" ON "Schedule" USING gin (token_array_to_text("__serviceCategoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___serviceType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___serviceType_idx" ON "Schedule" USING gin ("__serviceType")`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___serviceTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___serviceTypeTextTrgm_idx" ON "Schedule" USING gin (token_array_to_text("__serviceTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___specialty_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___specialty_idx" ON "Schedule" USING gin ("__specialty")`);
  await fns.idempotentCreateIndex(client, results, 'Schedule___specialtyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Schedule___specialtyTextTrgm_idx" ON "Schedule" USING gin (token_array_to_text("__specialtyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___sharedTokens_idx" ON "SearchParameter" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___sharedTokensTextTrgm_idx" ON "SearchParameter" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter____tag_idx" ON "SearchParameter" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter____tagTextTrgm_idx" ON "SearchParameter" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___context_idx" ON "SearchParameter" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___contextTextTrgm_idx" ON "SearchParameter" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___contextType_idx" ON "SearchParameter" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___contextTypeTextTrgm_idx" ON "SearchParameter" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___jurisdiction_idx" ON "SearchParameter" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'SearchParameter___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SearchParameter___jurisdictionTextTrgm_idx" ON "SearchParameter" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___sharedTokens_idx" ON "ServiceRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___sharedTokensTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest____tag_idx" ON "ServiceRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest____tagTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___code_idx" ON "ServiceRequest" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___codeTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___idnt_idx" ON "ServiceRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___idntTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___category_idx" ON "ServiceRequest" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___categoryTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___performerType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___performerType_idx" ON "ServiceRequest" USING gin ("__performerType")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___performerTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___performerTypeTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__performerTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___requisition_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___requisition_idx" ON "ServiceRequest" USING gin ("__requisition")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___requisitionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___requisitionTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__requisitionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___subjectIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___subjectIdnt_idx" ON "ServiceRequest" USING gin ("__subjectIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'ServiceRequest___subjectIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ServiceRequest___subjectIdntTextTrgm_idx" ON "ServiceRequest" USING gin (token_array_to_text("__subjectIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___sharedTokens_idx" ON "Slot" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Slot___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___sharedTokensTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot____tag_idx" ON "Slot" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Slot____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot____tagTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot___appointmentType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___appointmentType_idx" ON "Slot" USING gin ("__appointmentType")`);
  await fns.idempotentCreateIndex(client, results, 'Slot___appointmentTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___appointmentTypeTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("__appointmentTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___idnt_idx" ON "Slot" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Slot___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___idntTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot___serviceCategory_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___serviceCategory_idx" ON "Slot" USING gin ("__serviceCategory")`);
  await fns.idempotentCreateIndex(client, results, 'Slot___serviceCategoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___serviceCategoryTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("__serviceCategoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot___serviceType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___serviceType_idx" ON "Slot" USING gin ("__serviceType")`);
  await fns.idempotentCreateIndex(client, results, 'Slot___serviceTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___serviceTypeTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("__serviceTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Slot___specialty_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___specialty_idx" ON "Slot" USING gin ("__specialty")`);
  await fns.idempotentCreateIndex(client, results, 'Slot___specialtyTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Slot___specialtyTextTrgm_idx" ON "Slot" USING gin (token_array_to_text("__specialtyText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___sharedTokens_idx" ON "Specimen" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___sharedTokensTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen____tag_idx" ON "Specimen" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen____tagTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___accession_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___accession_idx" ON "Specimen" USING gin ("__accession")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___accessionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___accessionTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__accessionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___bodysite_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___bodysite_idx" ON "Specimen" USING gin ("__bodysite")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___bodysiteTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___bodysiteTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__bodysiteText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___container_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___container_idx" ON "Specimen" USING gin ("__container")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___containerTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___containerTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__containerText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___containerId_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___containerId_idx" ON "Specimen" USING gin ("__containerId")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___containerIdTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___containerIdTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__containerIdText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___idnt_idx" ON "Specimen" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___idntTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___type_idx" ON "Specimen" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'Specimen___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Specimen___typeTextTrgm_idx" ON "Specimen" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___sharedTokens_idx" ON "SpecimenDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___sharedTokensTextTrgm_idx" ON "SpecimenDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition____tag_idx" ON "SpecimenDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition____tagTextTrgm_idx" ON "SpecimenDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___container_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___container_idx" ON "SpecimenDefinition" USING gin ("__container")`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___containerTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___containerTextTrgm_idx" ON "SpecimenDefinition" USING gin (token_array_to_text("__containerText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___idnt_idx" ON "SpecimenDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___idntTextTrgm_idx" ON "SpecimenDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___type_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___type_idx" ON "SpecimenDefinition" USING gin ("__type")`);
  await fns.idempotentCreateIndex(client, results, 'SpecimenDefinition___typeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SpecimenDefinition___typeTextTrgm_idx" ON "SpecimenDefinition" USING gin (token_array_to_text("__typeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___sharedTokens_idx" ON "StructureDefinition" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___sharedTokensTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition____tag_idx" ON "StructureDefinition" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition____tagTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___context_idx" ON "StructureDefinition" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___contextTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___contextType_idx" ON "StructureDefinition" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___contextTypeTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___jurisdiction_idx" ON "StructureDefinition" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___jurisdictionTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___idnt_idx" ON "StructureDefinition" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___idntTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___keyword_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___keyword_idx" ON "StructureDefinition" USING gin ("__keyword")`);
  await fns.idempotentCreateIndex(client, results, 'StructureDefinition___keywordTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureDefinition___keywordTextTrgm_idx" ON "StructureDefinition" USING gin (token_array_to_text("__keywordText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___sharedTokens_idx" ON "StructureMap" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___sharedTokensTextTrgm_idx" ON "StructureMap" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap____tag_idx" ON "StructureMap" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap____tagTextTrgm_idx" ON "StructureMap" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___context_idx" ON "StructureMap" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___contextTextTrgm_idx" ON "StructureMap" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___contextType_idx" ON "StructureMap" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___contextTypeTextTrgm_idx" ON "StructureMap" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___jurisdiction_idx" ON "StructureMap" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___jurisdictionTextTrgm_idx" ON "StructureMap" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___idnt_idx" ON "StructureMap" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'StructureMap___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "StructureMap___idntTextTrgm_idx" ON "StructureMap" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Subscription___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription___sharedTokens_idx" ON "Subscription" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Subscription___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription___sharedTokensTextTrgm_idx" ON "Subscription" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Subscription____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription____tag_idx" ON "Subscription" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Subscription____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription____tagTextTrgm_idx" ON "Subscription" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Subscription___contact_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription___contact_idx" ON "Subscription" USING gin ("__contact")`);
  await fns.idempotentCreateIndex(client, results, 'Subscription___contactTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Subscription___contactTextTrgm_idx" ON "Subscription" USING gin (token_array_to_text("__contactText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubscriptionStatus___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubscriptionStatus___sharedTokens_idx" ON "SubscriptionStatus" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubscriptionStatus___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubscriptionStatus___sharedTokensTextTrgm_idx" ON "SubscriptionStatus" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubscriptionStatus____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubscriptionStatus____tag_idx" ON "SubscriptionStatus" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubscriptionStatus____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubscriptionStatus____tagTextTrgm_idx" ON "SubscriptionStatus" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Substance___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___sharedTokens_idx" ON "Substance" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Substance___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___sharedTokensTextTrgm_idx" ON "Substance" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Substance____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance____tag_idx" ON "Substance" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Substance____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance____tagTextTrgm_idx" ON "Substance" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Substance___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___category_idx" ON "Substance" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Substance___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___categoryTextTrgm_idx" ON "Substance" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Substance___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___code_idx" ON "Substance" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Substance___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___codeTextTrgm_idx" ON "Substance" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Substance___containerIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___containerIdnt_idx" ON "Substance" USING gin ("__containerIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'Substance___containerIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___containerIdntTextTrgm_idx" ON "Substance" USING gin (token_array_to_text("__containerIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Substance___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___idnt_idx" ON "Substance" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Substance___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Substance___idntTextTrgm_idx" ON "Substance" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceNucleicAcid___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceNucleicAcid___sharedTokens_idx" ON "SubstanceNucleicAcid" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceNucleicAcid___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceNucleicAcid___sharedTokensTextTrgm_idx" ON "SubstanceNucleicAcid" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceNucleicAcid____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceNucleicAcid____tag_idx" ON "SubstanceNucleicAcid" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceNucleicAcid____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceNucleicAcid____tagTextTrgm_idx" ON "SubstanceNucleicAcid" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstancePolymer___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstancePolymer___sharedTokens_idx" ON "SubstancePolymer" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubstancePolymer___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstancePolymer___sharedTokensTextTrgm_idx" ON "SubstancePolymer" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstancePolymer____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstancePolymer____tag_idx" ON "SubstancePolymer" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubstancePolymer____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstancePolymer____tagTextTrgm_idx" ON "SubstancePolymer" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceProtein___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceProtein___sharedTokens_idx" ON "SubstanceProtein" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceProtein___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceProtein___sharedTokensTextTrgm_idx" ON "SubstanceProtein" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceProtein____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceProtein____tag_idx" ON "SubstanceProtein" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceProtein____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceProtein____tagTextTrgm_idx" ON "SubstanceProtein" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceReferenceInformation___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceReferenceInformation___sharedTokens_idx" ON "SubstanceReferenceInformation" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceReferenceInformation___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceReferenceInformation___sharedTokensTextTrgm_idx" ON "SubstanceReferenceInformation" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceReferenceInformation____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceReferenceInformation____tag_idx" ON "SubstanceReferenceInformation" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceReferenceInformation____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceReferenceInformation____tagTextTrgm_idx" ON "SubstanceReferenceInformation" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSourceMaterial___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSourceMaterial___sharedTokens_idx" ON "SubstanceSourceMaterial" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSourceMaterial___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSourceMaterial___sharedTokensTextTrgm_idx" ON "SubstanceSourceMaterial" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSourceMaterial____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSourceMaterial____tag_idx" ON "SubstanceSourceMaterial" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSourceMaterial____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSourceMaterial____tagTextTrgm_idx" ON "SubstanceSourceMaterial" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification___sharedTokens_idx" ON "SubstanceSpecification" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification___sharedTokensTextTrgm_idx" ON "SubstanceSpecification" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification____tag_idx" ON "SubstanceSpecification" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification____tagTextTrgm_idx" ON "SubstanceSpecification" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification___code_idx" ON "SubstanceSpecification" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'SubstanceSpecification___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SubstanceSpecification___codeTextTrgm_idx" ON "SubstanceSpecification" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery___sharedTokens_idx" ON "SupplyDelivery" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery___sharedTokensTextTrgm_idx" ON "SupplyDelivery" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery____tag_idx" ON "SupplyDelivery" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery____tagTextTrgm_idx" ON "SupplyDelivery" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery___idnt_idx" ON "SupplyDelivery" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyDelivery___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyDelivery___idntTextTrgm_idx" ON "SupplyDelivery" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest___sharedTokens_idx" ON "SupplyRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest___sharedTokensTextTrgm_idx" ON "SupplyRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest____tag_idx" ON "SupplyRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest____tagTextTrgm_idx" ON "SupplyRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest___idnt_idx" ON "SupplyRequest" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest___idntTextTrgm_idx" ON "SupplyRequest" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest___category_idx" ON "SupplyRequest" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'SupplyRequest___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SupplyRequest___categoryTextTrgm_idx" ON "SupplyRequest" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___sharedTokens_idx" ON "Task" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Task___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___sharedTokensTextTrgm_idx" ON "Task" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task____tag_idx" ON "Task" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Task____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task____tagTextTrgm_idx" ON "Task" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task___businessStatus_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___businessStatus_idx" ON "Task" USING gin ("__businessStatus")`);
  await fns.idempotentCreateIndex(client, results, 'Task___businessStatusTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___businessStatusTextTrgm_idx" ON "Task" USING gin (token_array_to_text("__businessStatusText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task___code_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___code_idx" ON "Task" USING gin ("__code")`);
  await fns.idempotentCreateIndex(client, results, 'Task___codeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___codeTextTrgm_idx" ON "Task" USING gin (token_array_to_text("__codeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task___groupIdnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___groupIdnt_idx" ON "Task" USING gin ("__groupIdentifier")`);
  await fns.idempotentCreateIndex(client, results, 'Task___groupIdntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___groupIdntTextTrgm_idx" ON "Task" USING gin (token_array_to_text("__groupIdentifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___idnt_idx" ON "Task" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Task___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___idntTextTrgm_idx" ON "Task" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Task___performer_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___performer_idx" ON "Task" USING gin ("__performer")`);
  await fns.idempotentCreateIndex(client, results, 'Task___performerTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Task___performerTextTrgm_idx" ON "Task" USING gin (token_array_to_text("__performerText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___sharedTokens_idx" ON "TerminologyCapabilities" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___sharedTokensTextTrgm_idx" ON "TerminologyCapabilities" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities____tag_idx" ON "TerminologyCapabilities" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities____tagTextTrgm_idx" ON "TerminologyCapabilities" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___context_idx" ON "TerminologyCapabilities" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___contextTextTrgm_idx" ON "TerminologyCapabilities" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___contextType_idx" ON "TerminologyCapabilities" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___contextTypeTextTrgm_idx" ON "TerminologyCapabilities" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___jurisdiction_idx" ON "TerminologyCapabilities" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'TerminologyCapabilities___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TerminologyCapabilities___jurisdictionTextTrgm_idx" ON "TerminologyCapabilities" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestReport___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport___sharedTokens_idx" ON "TestReport" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'TestReport___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport___sharedTokensTextTrgm_idx" ON "TestReport" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestReport____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport____tag_idx" ON "TestReport" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'TestReport____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport____tagTextTrgm_idx" ON "TestReport" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestReport___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport___idnt_idx" ON "TestReport" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'TestReport___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestReport___idntTextTrgm_idx" ON "TestReport" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___sharedTokens_idx" ON "TestScript" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___sharedTokensTextTrgm_idx" ON "TestScript" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript____tag_idx" ON "TestScript" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'TestScript____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript____tagTextTrgm_idx" ON "TestScript" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___context_idx" ON "TestScript" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___contextTextTrgm_idx" ON "TestScript" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___contextType_idx" ON "TestScript" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___contextTypeTextTrgm_idx" ON "TestScript" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___idnt_idx" ON "TestScript" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___idntTextTrgm_idx" ON "TestScript" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___jurisdiction_idx" ON "TestScript" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'TestScript___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "TestScript___jurisdictionTextTrgm_idx" ON "TestScript" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___sharedTokens_idx" ON "ValueSet" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___sharedTokensTextTrgm_idx" ON "ValueSet" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet____tag_idx" ON "ValueSet" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet____tagTextTrgm_idx" ON "ValueSet" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___context_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___context_idx" ON "ValueSet" USING gin ("__context")`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___contextTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___contextTextTrgm_idx" ON "ValueSet" USING gin (token_array_to_text("__contextText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___contextType_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___contextType_idx" ON "ValueSet" USING gin ("__contextType")`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___contextTypeTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___contextTypeTextTrgm_idx" ON "ValueSet" USING gin (token_array_to_text("__contextTypeText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___jurisdiction_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___jurisdiction_idx" ON "ValueSet" USING gin ("__jurisdiction")`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___jurisdictionTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___jurisdictionTextTrgm_idx" ON "ValueSet" USING gin (token_array_to_text("__jurisdictionText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___idnt_idx" ON "ValueSet" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'ValueSet___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ValueSet___idntTextTrgm_idx" ON "ValueSet" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'VerificationResult___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VerificationResult___sharedTokens_idx" ON "VerificationResult" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'VerificationResult___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VerificationResult___sharedTokensTextTrgm_idx" ON "VerificationResult" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'VerificationResult____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VerificationResult____tag_idx" ON "VerificationResult" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'VerificationResult____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VerificationResult____tagTextTrgm_idx" ON "VerificationResult" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription___sharedTokens_idx" ON "VisionPrescription" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription___sharedTokensTextTrgm_idx" ON "VisionPrescription" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription____tag_idx" ON "VisionPrescription" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription____tagTextTrgm_idx" ON "VisionPrescription" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription___idnt_idx" ON "VisionPrescription" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'VisionPrescription___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "VisionPrescription___idntTextTrgm_idx" ON "VisionPrescription" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Project___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project___sharedTokens_idx" ON "Project" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Project___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project___sharedTokensTextTrgm_idx" ON "Project" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Project____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project____tag_idx" ON "Project" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Project____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project____tagTextTrgm_idx" ON "Project" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Project___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project___idnt_idx" ON "Project" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Project___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Project___idntTextTrgm_idx" ON "Project" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClientApplication___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClientApplication___sharedTokens_idx" ON "ClientApplication" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ClientApplication___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClientApplication___sharedTokensTextTrgm_idx" ON "ClientApplication" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ClientApplication____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClientApplication____tag_idx" ON "ClientApplication" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ClientApplication____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ClientApplication____tagTextTrgm_idx" ON "ClientApplication" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'User___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User___sharedTokens_idx" ON "User" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'User___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User___sharedTokensTextTrgm_idx" ON "User" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'User____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User____tag_idx" ON "User" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'User____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User____tagTextTrgm_idx" ON "User" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'User___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User___idnt_idx" ON "User" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'User___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "User___idntTextTrgm_idx" ON "User" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ProjectMembership___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership___sharedTokens_idx" ON "ProjectMembership" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'ProjectMembership___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership___sharedTokensTextTrgm_idx" ON "ProjectMembership" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'ProjectMembership____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership____tag_idx" ON "ProjectMembership" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'ProjectMembership____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "ProjectMembership____tagTextTrgm_idx" ON "ProjectMembership" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bot___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot___sharedTokens_idx" ON "Bot" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Bot___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot___sharedTokensTextTrgm_idx" ON "Bot" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bot____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot____tag_idx" ON "Bot" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Bot____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot____tagTextTrgm_idx" ON "Bot" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bot___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot___idnt_idx" ON "Bot" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Bot___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot___idntTextTrgm_idx" ON "Bot" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Bot___category_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot___category_idx" ON "Bot" USING gin ("__category")`);
  await fns.idempotentCreateIndex(client, results, 'Bot___categoryTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Bot___categoryTextTrgm_idx" ON "Bot" USING gin (token_array_to_text("__categoryText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Login___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login___sharedTokens_idx" ON "Login" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Login___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login___sharedTokensTextTrgm_idx" ON "Login" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Login____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login____tag_idx" ON "Login" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Login____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Login____tagTextTrgm_idx" ON "Login" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PasswordChangeRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PasswordChangeRequest___sharedTokens_idx" ON "PasswordChangeRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'PasswordChangeRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PasswordChangeRequest___sharedTokensTextTrgm_idx" ON "PasswordChangeRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'PasswordChangeRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PasswordChangeRequest____tag_idx" ON "PasswordChangeRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'PasswordChangeRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "PasswordChangeRequest____tagTextTrgm_idx" ON "PasswordChangeRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'UserSecurityRequest___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserSecurityRequest___sharedTokens_idx" ON "UserSecurityRequest" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'UserSecurityRequest___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserSecurityRequest___sharedTokensTextTrgm_idx" ON "UserSecurityRequest" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'UserSecurityRequest____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserSecurityRequest____tag_idx" ON "UserSecurityRequest" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'UserSecurityRequest____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserSecurityRequest____tagTextTrgm_idx" ON "UserSecurityRequest" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'JsonWebKey___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "JsonWebKey___sharedTokens_idx" ON "JsonWebKey" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'JsonWebKey___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "JsonWebKey___sharedTokensTextTrgm_idx" ON "JsonWebKey" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'JsonWebKey____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "JsonWebKey____tag_idx" ON "JsonWebKey" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'JsonWebKey____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "JsonWebKey____tagTextTrgm_idx" ON "JsonWebKey" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AccessPolicy___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AccessPolicy___sharedTokens_idx" ON "AccessPolicy" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'AccessPolicy___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AccessPolicy___sharedTokensTextTrgm_idx" ON "AccessPolicy" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AccessPolicy____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AccessPolicy____tag_idx" ON "AccessPolicy" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'AccessPolicy____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AccessPolicy____tagTextTrgm_idx" ON "AccessPolicy" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'UserConfiguration___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserConfiguration___sharedTokens_idx" ON "UserConfiguration" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'UserConfiguration___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserConfiguration___sharedTokensTextTrgm_idx" ON "UserConfiguration" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'UserConfiguration____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserConfiguration____tag_idx" ON "UserConfiguration" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'UserConfiguration____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "UserConfiguration____tagTextTrgm_idx" ON "UserConfiguration" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BulkDataExport___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BulkDataExport___sharedTokens_idx" ON "BulkDataExport" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'BulkDataExport___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BulkDataExport___sharedTokensTextTrgm_idx" ON "BulkDataExport" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'BulkDataExport____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BulkDataExport____tag_idx" ON "BulkDataExport" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'BulkDataExport____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "BulkDataExport____tagTextTrgm_idx" ON "BulkDataExport" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SmartAppLaunch___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SmartAppLaunch___sharedTokens_idx" ON "SmartAppLaunch" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'SmartAppLaunch___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SmartAppLaunch___sharedTokensTextTrgm_idx" ON "SmartAppLaunch" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'SmartAppLaunch____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SmartAppLaunch____tag_idx" ON "SmartAppLaunch" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'SmartAppLaunch____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "SmartAppLaunch____tagTextTrgm_idx" ON "SmartAppLaunch" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DomainConfiguration___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DomainConfiguration___sharedTokens_idx" ON "DomainConfiguration" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'DomainConfiguration___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DomainConfiguration___sharedTokensTextTrgm_idx" ON "DomainConfiguration" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'DomainConfiguration____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DomainConfiguration____tag_idx" ON "DomainConfiguration" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'DomainConfiguration____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "DomainConfiguration____tagTextTrgm_idx" ON "DomainConfiguration" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AsyncJob___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AsyncJob___sharedTokens_idx" ON "AsyncJob" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'AsyncJob___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AsyncJob___sharedTokensTextTrgm_idx" ON "AsyncJob" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'AsyncJob____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AsyncJob____tag_idx" ON "AsyncJob" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'AsyncJob____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "AsyncJob____tagTextTrgm_idx" ON "AsyncJob" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Agent___sharedTokens_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent___sharedTokens_idx" ON "Agent" USING gin ("__sharedTokens")`);
  await fns.idempotentCreateIndex(client, results, 'Agent___sharedTokensTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent___sharedTokensTextTrgm_idx" ON "Agent" USING gin (token_array_to_text("__sharedTokensText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Agent____tag_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent____tag_idx" ON "Agent" USING gin ("___tag")`);
  await fns.idempotentCreateIndex(client, results, 'Agent____tagTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent____tagTextTrgm_idx" ON "Agent" USING gin (token_array_to_text("___tagText") gin_trgm_ops)`);
  await fns.idempotentCreateIndex(client, results, 'Agent___idnt_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent___idnt_idx" ON "Agent" USING gin ("__identifier")`);
  await fns.idempotentCreateIndex(client, results, 'Agent___idntTextTrgm_idx', `CREATE INDEX CONCURRENTLY IF NOT EXISTS "Agent___idntTextTrgm_idx" ON "Agent" USING gin (token_array_to_text("__identifierText") gin_trgm_ops)`);
}
