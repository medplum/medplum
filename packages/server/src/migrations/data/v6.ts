import { PoolClient } from 'pg';
import { CustomMigrationAction, CustomPostDeployMigration } from './types';
import * as fns from '../migrate-functions';
import { prepareCustomMigrationJobData, runCustomMigration } from '../../workers/post-deploy-migration';
import { withLongRunningDatabaseClient } from '../migration-utils';

export const migration: CustomPostDeployMigration = {
  type: 'custom',
  prepareJobData: (asyncJob) => prepareCustomMigrationJobData(asyncJob),
  run: async (repo, job, jobData) => {
    return runCustomMigration(repo, job, jobData, async () => {
      return withLongRunningDatabaseClient(async (client) => {
        const actions: CustomMigrationAction[] = [];
        await run(client, actions);
        return { actions };
      });
    });
  },
};

// prettier-ignore
async function run(client: PoolClient, actions: CustomMigrationAction[]): Promise<void> {
  await fns.analyzeTable(client, actions, 'Account');
  await fns.analyzeTable(client, actions, 'ActivityDefinition');
  await fns.analyzeTable(client, actions, 'AdverseEvent');
  await fns.analyzeTable(client, actions, 'AllergyIntolerance');
  await fns.analyzeTable(client, actions, 'Appointment');
  await fns.analyzeTable(client, actions, 'AppointmentResponse');
  await fns.analyzeTable(client, actions, 'AuditEvent');
  await fns.analyzeTable(client, actions, 'Basic');
  await fns.analyzeTable(client, actions, 'Binary');
  await fns.analyzeTable(client, actions, 'BiologicallyDerivedProduct');
  await fns.analyzeTable(client, actions, 'BodyStructure');
  await fns.analyzeTable(client, actions, 'Bundle');
  await fns.analyzeTable(client, actions, 'CapabilityStatement');
  await fns.analyzeTable(client, actions, 'CarePlan');
  await fns.analyzeTable(client, actions, 'CareTeam');
  await fns.analyzeTable(client, actions, 'CatalogEntry');
  await fns.analyzeTable(client, actions, 'ChargeItem');
  await fns.analyzeTable(client, actions, 'ChargeItemDefinition');
  await fns.analyzeTable(client, actions, 'Claim');
  await fns.analyzeTable(client, actions, 'ClaimResponse');
  await fns.analyzeTable(client, actions, 'ClinicalImpression');
  await fns.analyzeTable(client, actions, 'CodeSystem');
  await fns.analyzeTable(client, actions, 'Communication');
  await fns.analyzeTable(client, actions, 'CommunicationRequest');
  await fns.analyzeTable(client, actions, 'CompartmentDefinition');
  await fns.analyzeTable(client, actions, 'Composition');
  await fns.analyzeTable(client, actions, 'ConceptMap');
  await fns.analyzeTable(client, actions, 'Condition');
  await fns.analyzeTable(client, actions, 'Consent');
  await fns.analyzeTable(client, actions, 'Contract');
  await fns.analyzeTable(client, actions, 'Coverage');
  await fns.analyzeTable(client, actions, 'CoverageEligibilityRequest');
  await fns.analyzeTable(client, actions, 'CoverageEligibilityResponse');
  await fns.analyzeTable(client, actions, 'DetectedIssue');
  await fns.analyzeTable(client, actions, 'Device');
  await fns.analyzeTable(client, actions, 'DeviceDefinition');
  await fns.analyzeTable(client, actions, 'DeviceMetric');
  await fns.analyzeTable(client, actions, 'DeviceRequest');
  await fns.analyzeTable(client, actions, 'DeviceUseStatement');
  await fns.analyzeTable(client, actions, 'DiagnosticReport');
  await fns.analyzeTable(client, actions, 'DocumentManifest');
  await fns.analyzeTable(client, actions, 'DocumentReference');
  await fns.analyzeTable(client, actions, 'EffectEvidenceSynthesis');
  await fns.analyzeTable(client, actions, 'Encounter');
  await fns.analyzeTable(client, actions, 'Endpoint');
  await fns.analyzeTable(client, actions, 'EnrollmentRequest');
  await fns.analyzeTable(client, actions, 'EnrollmentResponse');
  await fns.analyzeTable(client, actions, 'EpisodeOfCare');
  await fns.analyzeTable(client, actions, 'EventDefinition');
  await fns.analyzeTable(client, actions, 'Evidence');
  await fns.analyzeTable(client, actions, 'EvidenceVariable');
  await fns.analyzeTable(client, actions, 'ExampleScenario');
  await fns.analyzeTable(client, actions, 'ExplanationOfBenefit');
  await fns.analyzeTable(client, actions, 'FamilyMemberHistory');
  await fns.analyzeTable(client, actions, 'Flag');
  await fns.analyzeTable(client, actions, 'Goal');
  await fns.analyzeTable(client, actions, 'GraphDefinition');
  await fns.analyzeTable(client, actions, 'Group');
  await fns.analyzeTable(client, actions, 'GuidanceResponse');
  await fns.analyzeTable(client, actions, 'HealthcareService');
  await fns.analyzeTable(client, actions, 'ImagingStudy');
  await fns.analyzeTable(client, actions, 'Immunization');
  await fns.analyzeTable(client, actions, 'ImmunizationEvaluation');
  await fns.analyzeTable(client, actions, 'ImmunizationRecommendation');
  await fns.analyzeTable(client, actions, 'ImplementationGuide');
  await fns.analyzeTable(client, actions, 'InsurancePlan');
  await fns.analyzeTable(client, actions, 'Invoice');
  await fns.analyzeTable(client, actions, 'Library');
  await fns.analyzeTable(client, actions, 'Linkage');
  await fns.analyzeTable(client, actions, 'List');
  await fns.analyzeTable(client, actions, 'Location');
  await fns.analyzeTable(client, actions, 'Measure');
  await fns.analyzeTable(client, actions, 'MeasureReport');
  await fns.analyzeTable(client, actions, 'Media');
  await fns.analyzeTable(client, actions, 'Medication');
  await fns.analyzeTable(client, actions, 'MedicationAdministration');
  await fns.analyzeTable(client, actions, 'MedicationDispense');
  await fns.analyzeTable(client, actions, 'MedicationKnowledge');
  await fns.analyzeTable(client, actions, 'MedicationRequest');
  await fns.analyzeTable(client, actions, 'MedicationStatement');
  await fns.analyzeTable(client, actions, 'MedicinalProduct');
  await fns.analyzeTable(client, actions, 'MedicinalProductAuthorization');
  await fns.analyzeTable(client, actions, 'MedicinalProductContraindication');
  await fns.analyzeTable(client, actions, 'MedicinalProductIndication');
  await fns.analyzeTable(client, actions, 'MedicinalProductIngredient');
  await fns.analyzeTable(client, actions, 'MedicinalProductInteraction');
  await fns.analyzeTable(client, actions, 'MedicinalProductManufactured');
  await fns.analyzeTable(client, actions, 'MedicinalProductPackaged');
  await fns.analyzeTable(client, actions, 'MedicinalProductPharmaceutical');
  await fns.analyzeTable(client, actions, 'MedicinalProductUndesirableEffect');
  await fns.analyzeTable(client, actions, 'MessageDefinition');
  await fns.analyzeTable(client, actions, 'MessageHeader');
  await fns.analyzeTable(client, actions, 'MolecularSequence');
  await fns.analyzeTable(client, actions, 'NamingSystem');
  await fns.analyzeTable(client, actions, 'NutritionOrder');
  await fns.analyzeTable(client, actions, 'Observation');
  await fns.analyzeTable(client, actions, 'ObservationDefinition');
  await fns.analyzeTable(client, actions, 'OperationDefinition');
  await fns.analyzeTable(client, actions, 'OperationOutcome');
  await fns.analyzeTable(client, actions, 'Organization');
  await fns.analyzeTable(client, actions, 'OrganizationAffiliation');
  await fns.analyzeTable(client, actions, 'Parameters');
  await fns.analyzeTable(client, actions, 'Patient');
  await fns.analyzeTable(client, actions, 'PaymentNotice');
  await fns.analyzeTable(client, actions, 'PaymentReconciliation');
  await fns.analyzeTable(client, actions, 'Person');
  await fns.analyzeTable(client, actions, 'PlanDefinition');
  await fns.analyzeTable(client, actions, 'Practitioner');
  await fns.analyzeTable(client, actions, 'PractitionerRole');
  await fns.analyzeTable(client, actions, 'Procedure');
  await fns.analyzeTable(client, actions, 'Provenance');
  await fns.analyzeTable(client, actions, 'Questionnaire');
  await fns.analyzeTable(client, actions, 'QuestionnaireResponse');
  await fns.analyzeTable(client, actions, 'RelatedPerson');
  await fns.analyzeTable(client, actions, 'RequestGroup');
  await fns.analyzeTable(client, actions, 'ResearchDefinition');
  await fns.analyzeTable(client, actions, 'ResearchElementDefinition');
  await fns.analyzeTable(client, actions, 'ResearchStudy');
  await fns.analyzeTable(client, actions, 'ResearchSubject');
  await fns.analyzeTable(client, actions, 'RiskAssessment');
  await fns.analyzeTable(client, actions, 'RiskEvidenceSynthesis');
  await fns.analyzeTable(client, actions, 'Schedule');
  await fns.analyzeTable(client, actions, 'SearchParameter');
  await fns.analyzeTable(client, actions, 'ServiceRequest');
  await fns.analyzeTable(client, actions, 'Slot');
  await fns.analyzeTable(client, actions, 'Specimen');
  await fns.analyzeTable(client, actions, 'SpecimenDefinition');
  await fns.analyzeTable(client, actions, 'StructureDefinition');
  await fns.analyzeTable(client, actions, 'StructureMap');
  await fns.analyzeTable(client, actions, 'Subscription');
  await fns.analyzeTable(client, actions, 'SubscriptionStatus');
  await fns.analyzeTable(client, actions, 'Substance');
  await fns.analyzeTable(client, actions, 'SubstanceNucleicAcid');
  await fns.analyzeTable(client, actions, 'SubstancePolymer');
  await fns.analyzeTable(client, actions, 'SubstanceProtein');
  await fns.analyzeTable(client, actions, 'SubstanceReferenceInformation');
  await fns.analyzeTable(client, actions, 'SubstanceSourceMaterial');
  await fns.analyzeTable(client, actions, 'SubstanceSpecification');
  await fns.analyzeTable(client, actions, 'SupplyDelivery');
  await fns.analyzeTable(client, actions, 'SupplyRequest');
  await fns.analyzeTable(client, actions, 'Task');
  await fns.analyzeTable(client, actions, 'TerminologyCapabilities');
  await fns.analyzeTable(client, actions, 'TestReport');
  await fns.analyzeTable(client, actions, 'TestScript');
  await fns.analyzeTable(client, actions, 'ValueSet');
  await fns.analyzeTable(client, actions, 'VerificationResult');
  await fns.analyzeTable(client, actions, 'VisionPrescription');
  await fns.analyzeTable(client, actions, 'Project');
  await fns.analyzeTable(client, actions, 'ClientApplication');
  await fns.analyzeTable(client, actions, 'User');
  await fns.analyzeTable(client, actions, 'ProjectMembership');
  await fns.analyzeTable(client, actions, 'Bot');
  await fns.analyzeTable(client, actions, 'Login');
  await fns.analyzeTable(client, actions, 'PasswordChangeRequest');
  await fns.analyzeTable(client, actions, 'UserSecurityRequest');
  await fns.analyzeTable(client, actions, 'JsonWebKey');
  await fns.analyzeTable(client, actions, 'AccessPolicy');
  await fns.analyzeTable(client, actions, 'UserConfiguration');
  await fns.analyzeTable(client, actions, 'BulkDataExport');
  await fns.analyzeTable(client, actions, 'SmartAppLaunch');
  await fns.analyzeTable(client, actions, 'DomainConfiguration');
  await fns.analyzeTable(client, actions, 'AsyncJob');
  await fns.analyzeTable(client, actions, 'Agent');
}
