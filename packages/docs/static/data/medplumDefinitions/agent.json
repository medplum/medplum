{
  "name": "Agent",
  "location": "medplum",
  "description": "Configuration details for an instance of the Medplum agent application.",
  "properties": [
    {
      "name": "Agent",
      "depth": 0,
      "types": [
        {
          "datatype": ""
        }
      ],
      "path": "Agent",
      "min": 0,
      "max": "*",
      "short": "Configuration details for an instance of the Medplum agent application.",
      "definition": "Configuration details for an instance of the Medplum agent application.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Agent.id",
      "min": 0,
      "max": "1",
      "short": "Logical id of this artifact",
      "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "meta",
      "depth": 1,
      "types": [
        {
          "datatype": "Meta",
          "documentLocation": "datatype"
        }
      ],
      "path": "Agent.meta",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "implicitRules",
      "depth": 1,
      "types": [
        {
          "datatype": "uri"
        }
      ],
      "path": "Agent.implicitRules",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "language",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Agent.language",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The base language in which the resource is written.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "text",
      "depth": 1,
      "types": [
        {
          "datatype": "Narrative",
          "documentLocation": "datatype"
        }
      ],
      "path": "Agent.text",
      "min": 0,
      "max": "1",
      "short": "Text summary of the resource, for human interpretation",
      "definition": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
      "comment": "",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "contained",
      "depth": 1,
      "types": [
        {
          "datatype": "Resource"
        }
      ],
      "path": "Agent.contained",
      "min": 0,
      "max": "*",
      "short": "Contained, inline Resources",
      "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "comment": "",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "extension",
      "depth": 1,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Agent.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "modifierExtension",
      "depth": 1,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Agent.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored",
      "definition": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "identifier",
      "depth": 1,
      "types": [
        {
          "datatype": "Identifier",
          "documentLocation": "datatype"
        }
      ],
      "path": "Agent.identifier",
      "min": 0,
      "max": "*",
      "short": "An identifier for this agent",
      "definition": "An identifier for this agent.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "name",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Agent.name",
      "min": 1,
      "max": "1",
      "short": "The human readable friendly name of the agent.",
      "definition": "The human readable friendly name of the agent.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "status",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Agent.status",
      "min": 1,
      "max": "1",
      "short": "active | off | error",
      "definition": "The status of the agent.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "device",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Device",
          "documentLocation": "resource"
        }
      ],
      "path": "Agent.device",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "Optional device resource representing the device running the agent.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "setting",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Agent.setting",
      "min": 0,
      "max": "*",
      "short": "",
      "definition": "The settings for the agent.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "name",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Agent.setting.name",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The setting name.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "value[x]",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        },
        {
          "datatype": "boolean"
        },
        {
          "datatype": "decimal"
        },
        {
          "datatype": "integer"
        }
      ],
      "path": "Agent.setting.value[x]",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The setting value.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "channel",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Agent.channel",
      "min": 0,
      "max": "*",
      "short": "The channel on which to report matches to the criteria",
      "definition": "Details where to send notifications when resources are received that meet the criteria.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "name",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Agent.channel.name",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The channel name.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "endpoint",
      "depth": 2,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Endpoint",
          "documentLocation": "resource"
        }
      ],
      "path": "Agent.channel.endpoint",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The channel endpoint definition including protocol and network binding details.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "target[x]",
      "depth": 2,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        },
        {
          "datatype": "url"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Bot",
          "documentLocation": "medplum"
        }
      ],
      "path": "Agent.channel.target[x]",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The target resource where channel messages will be delivered.",
      "comment": "",
      "inherited": false
    }
  ],
  "searchParameters": [
    {
      "name": "identifier",
      "type": "token",
      "description": "The identifier of the agent",
      "expression": "Agent.identifier"
    },
    {
      "name": "name",
      "type": "string",
      "description": "Search for Agent by name",
      "expression": "Agent.name"
    },
    {
      "name": "status",
      "type": "token",
      "description": "Search for Agent by status",
      "expression": "Agent.status"
    }
  ]
}
