{
  "name": "Project",
  "location": "medplum",
  "description": "",
  "properties": [
    {
      "name": "Project",
      "depth": 0,
      "types": [
        {
          "datatype": ""
        }
      ],
      "path": "Project",
      "min": 0,
      "max": "*",
      "short": "Encapsulation of resources for a specific project or organization.",
      "definition": "Encapsulation of resources for a specific project or organization.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.id",
      "min": 0,
      "max": "1",
      "short": "Logical id of this artifact",
      "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "meta",
      "depth": 1,
      "types": [
        {
          "datatype": "Meta",
          "documentLocation": "datatype"
        }
      ],
      "path": "Project.meta",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "implicitRules",
      "depth": 1,
      "types": [
        {
          "datatype": "uri"
        }
      ],
      "path": "Project.implicitRules",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "language",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Project.language",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The base language in which the resource is written.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "name",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.name",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "A name associated with the Project.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "description",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.description",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "A summary, characterization or explanation of the Project.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "superAdmin",
      "depth": 1,
      "types": [
        {
          "datatype": "boolean"
        }
      ],
      "path": "Project.superAdmin",
      "min": 0,
      "max": "1",
      "short": "Whether this project is the super administrator project.",
      "definition": "Whether this project is the super administrator project. A super administrator is a user who has complete access to all resources in all projects.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "strictMode",
      "depth": 1,
      "types": [
        {
          "datatype": "boolean"
        }
      ],
      "path": "Project.strictMode",
      "min": 0,
      "max": "1",
      "short": "Whether this project uses strict FHIR validation.",
      "definition": "Whether this project uses strict FHIR validation.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "checkReferencesOnWrite",
      "depth": 1,
      "types": [
        {
          "datatype": "boolean"
        }
      ],
      "path": "Project.checkReferencesOnWrite",
      "min": 0,
      "max": "1",
      "short": "Whether this project uses referential integrity on write operations such as 'create' and 'update'.",
      "definition": "Whether this project uses referential integrity on write operations such as 'create' and 'update'.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "owner",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "User",
          "documentLocation": "medplum"
        }
      ],
      "path": "Project.owner",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The user who owns the project.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "features",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Project.features",
      "min": 0,
      "max": "*",
      "short": "",
      "definition": "A list of optional features that are enabled for the project.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "defaultPatientAccessPolicy",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "AccessPolicy",
          "documentLocation": "medplum"
        }
      ],
      "path": "Project.defaultPatientAccessPolicy",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The default access policy for patients using open registration.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "secret",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Project.secret",
      "min": 0,
      "max": "*",
      "short": "",
      "definition": "Secure environment variable that can be used to store secrets for bots.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "name",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.secret.name",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The secret name.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "value[x]",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        },
        {
          "datatype": "boolean"
        },
        {
          "datatype": "decimal"
        },
        {
          "datatype": "integer"
        }
      ],
      "path": "Project.secret.value[x]",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "The secret value.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "site",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Project.site",
      "min": 0,
      "max": "*",
      "short": "",
      "definition": "Web application or web site that is associated with the project.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "name",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.site.name",
      "min": 1,
      "max": "1",
      "short": "",
      "definition": "Friendly name that will make it easy for you to identify the site in the future.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "domain",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.site.domain",
      "min": 1,
      "max": "*",
      "short": "",
      "definition": "The list of domain names associated with the site. User authentication will be restricted to the domains you enter here, plus any subdomains. In other words, a registration for example.com also registers subdomain.example.com. A valid domain requires a host and must not include any path, port, query or fragment.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "googleClientId",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.site.googleClientId",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The publicly visible Google Client ID for the site. This is used to authenticate users with Google. This value is available in the Google Developer Console.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "googleClientSecret",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.site.googleClientSecret",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The private Google Client Secret for the site. This value is available in the Google Developer Console.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "recaptchaSiteKey",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.site.recaptchaSiteKey",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The publicly visible reCAPTCHA site key. This value is generated when you create a new reCAPTCHA site in the reCAPTCHA admin console. Use this site key in the HTML code your site serves to users.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "recaptchaSecretKey",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Project.site.recaptchaSecretKey",
      "min": 0,
      "max": "1",
      "short": "",
      "definition": "The private reCAPTCHA secret key. This value is generated when you create a new reCAPTCHA site in the reCAPTCHA admin console. Use this secret key for communication between your site and reCAPTCHA.",
      "comment": "",
      "inherited": false
    }
  ],
  "searchParameters": [
    {
      "name": "name",
      "type": "string",
      "description": "The name of the project",
      "expression": "Project.name"
    },
    {
      "name": "name",
      "type": "reference",
      "description": "The user who owns the project",
      "expression": "Project.owner"
    },
    {
      "name": "name",
      "type": "token",
      "description": "The Google Client ID of the project",
      "expression": "Project.site.googleClientId"
    },
    {
      "name": "name",
      "type": "token",
      "description": "The reCAPTCHA site key of the project",
      "expression": "Project.site.recaptchaSiteKey"
    }
  ]
}