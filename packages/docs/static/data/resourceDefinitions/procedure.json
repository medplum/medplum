{
  "name": "Procedure",
  "location": "resource",
  "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.",
  "properties": [
    {
      "name": "Procedure",
      "depth": 0,
      "types": [
        {
          "datatype": ""
        }
      ],
      "path": "Procedure",
      "min": 0,
      "max": "*",
      "short": "An action that is being or was performed on a patient",
      "definition": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Procedure.id",
      "min": 0,
      "max": "1",
      "short": "Logical id of this artifact",
      "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
      "comment": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation.",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "meta",
      "depth": 1,
      "types": [
        {
          "datatype": "Meta",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.meta",
      "min": 0,
      "max": "1",
      "short": "Metadata about the resource",
      "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "implicitRules",
      "depth": 1,
      "types": [
        {
          "datatype": "uri"
        }
      ],
      "path": "Procedure.implicitRules",
      "min": 0,
      "max": "1",
      "short": "A set of rules under which this content was created",
      "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      "comment": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "language",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Procedure.language",
      "min": 0,
      "max": "1",
      "short": "Language of the resource content",
      "definition": "The base language in which the resource is written.",
      "comment": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "text",
      "depth": 1,
      "types": [
        {
          "datatype": "Narrative",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.text",
      "min": 0,
      "max": "1",
      "short": "Text summary of the resource, for human interpretation",
      "definition": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
      "comment": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a \"text blob\" or where text is additionally entered raw or narrated and encoded information is added later.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "contained",
      "depth": 1,
      "types": [
        {
          "datatype": "Resource"
        }
      ],
      "path": "Procedure.contained",
      "min": 0,
      "max": "*",
      "short": "Contained, inline Resources",
      "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "comment": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "extension",
      "depth": 1,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "modifierExtension",
      "depth": 1,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored",
      "definition": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "identifier",
      "depth": 1,
      "types": [
        {
          "datatype": "Identifier",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.identifier",
      "min": 0,
      "max": "*",
      "short": "External Identifiers for this procedure",
      "definition": "Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server.",
      "comment": "This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and Person resource instances might share the same social insurance number.",
      "inherited": false
    },
    {
      "name": "instantiatesCanonical",
      "depth": 1,
      "types": [
        {
          "datatype": "canonical"
        }
      ],
      "path": "Procedure.instantiatesCanonical",
      "min": 0,
      "max": "*",
      "short": "Instantiates FHIR protocol or definition",
      "definition": "The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "instantiatesUri",
      "depth": 1,
      "types": [
        {
          "datatype": "uri"
        }
      ],
      "path": "Procedure.instantiatesUri",
      "min": 0,
      "max": "*",
      "short": "Instantiates external protocol or definition",
      "definition": "The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
      "comment": "This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.",
      "inherited": false
    },
    {
      "name": "basedOn",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "CarePlan",
          "documentLocation": "resource"
        },
        {
          "datatype": "ServiceRequest",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.basedOn",
      "min": 0,
      "max": "*",
      "short": "A request for this procedure",
      "definition": "A reference to a resource that contains details of the request for this procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "partOf",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Procedure",
          "documentLocation": "resource"
        },
        {
          "datatype": "Observation",
          "documentLocation": "resource"
        },
        {
          "datatype": "MedicationAdministration",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.partOf",
      "min": 0,
      "max": "*",
      "short": "Part of referenced event",
      "definition": "A larger event of which this particular procedure is a component or step.",
      "comment": "The MedicationAdministration resource has a partOf reference to Procedure, but this is not a circular reference.   For example, the anesthesia MedicationAdministration is part of the surgical Procedure (MedicationAdministration.partOf = Procedure).  For example, the procedure to insert the IV port for an IV medication administration is part of the medication administration (Procedure.partOf = MedicationAdministration).",
      "inherited": false
    },
    {
      "name": "status",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Procedure.status",
      "min": 1,
      "max": "1",
      "short": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
      "definition": "A code specifying the state of the procedure. Generally, this will be the in-progress or completed state.",
      "comment": "The \"unknown\" code is not to be used to convey other statuses.  The \"unknown\" code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the procedure.\n\nThis element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      "inherited": false
    },
    {
      "name": "statusReason",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.statusReason",
      "min": 0,
      "max": "1",
      "short": "Reason for current status",
      "definition": "Captures the reason for the current state of the procedure.",
      "comment": "This is generally only used for \"exception\" statuses such as \"not-done\", \"suspended\" or \"aborted\". The reason for performing the event at all is captured in reasonCode, not here.",
      "inherited": false
    },
    {
      "name": "category",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.category",
      "min": 0,
      "max": "1",
      "short": "Classification of the procedure",
      "definition": "A code that classifies the procedure for searching, sorting and display purposes (e.g. \"Surgical Procedure\").",
      "comment": "",
      "inherited": false
    },
    {
      "name": "code",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.code",
      "min": 0,
      "max": "1",
      "short": "Identification of the procedure",
      "definition": "The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. \"Laparoscopic Appendectomy\").",
      "comment": "",
      "inherited": false
    },
    {
      "name": "subject",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Patient",
          "documentLocation": "resource"
        },
        {
          "datatype": "Group",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.subject",
      "min": 1,
      "max": "1",
      "short": "Who the procedure was performed on",
      "definition": "The person, animal or group on which the procedure was performed.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "encounter",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Encounter",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.encounter",
      "min": 0,
      "max": "1",
      "short": "Encounter created as part of",
      "definition": "The Encounter during which this Procedure was created or performed or to which the creation of this record is tightly associated.",
      "comment": "This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.",
      "inherited": false
    },
    {
      "name": "performed[x]",
      "depth": 1,
      "types": [
        {
          "datatype": "dateTime"
        },
        {
          "datatype": "Period",
          "documentLocation": "datatype"
        },
        {
          "datatype": "string"
        },
        {
          "datatype": "Age",
          "documentLocation": "datatype"
        },
        {
          "datatype": "Range",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.performed[x]",
      "min": 0,
      "max": "1",
      "short": "When the procedure was performed",
      "definition": "Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
      "comment": "Age is generally used when the patient reports an age at which the procedure was performed. Range is generally used when the patient reports an age range when the procedure was performed, such as sometime between 20-25 years old.  dateTime supports a range of precision due to some procedures being reported as past procedures that might not have millisecond precision while other procedures performed and documented during the encounter might have more precise UTC timestamps with timezone.",
      "inherited": false
    },
    {
      "name": "recorder",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Patient",
          "documentLocation": "resource"
        },
        {
          "datatype": "RelatedPerson",
          "documentLocation": "resource"
        },
        {
          "datatype": "Practitioner",
          "documentLocation": "resource"
        },
        {
          "datatype": "PractitionerRole",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.recorder",
      "min": 0,
      "max": "1",
      "short": "Who recorded the procedure",
      "definition": "Individual who recorded the record and takes responsibility for its content.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "asserter",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Patient",
          "documentLocation": "resource"
        },
        {
          "datatype": "RelatedPerson",
          "documentLocation": "resource"
        },
        {
          "datatype": "Practitioner",
          "documentLocation": "resource"
        },
        {
          "datatype": "PractitionerRole",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.asserter",
      "min": 0,
      "max": "1",
      "short": "Person who asserts this procedure",
      "definition": "Individual who is making the procedure statement.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "performer",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Procedure.performer",
      "min": 0,
      "max": "*",
      "short": "The people who performed the procedure",
      "definition": "Limited to \"real\" people rather than equipment.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Procedure.performer.id",
      "min": 0,
      "max": "1",
      "short": "Unique id for inter-element referencing",
      "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
      "comment": "",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "extension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.performer.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "modifierExtension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.performer.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored even if unrecognized",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "BackboneElement"
    },
    {
      "name": "function",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.performer.function",
      "min": 0,
      "max": "1",
      "short": "Type of performance",
      "definition": "Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "actor",
      "depth": 2,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Practitioner",
          "documentLocation": "resource"
        },
        {
          "datatype": "PractitionerRole",
          "documentLocation": "resource"
        },
        {
          "datatype": "Organization",
          "documentLocation": "resource"
        },
        {
          "datatype": "Patient",
          "documentLocation": "resource"
        },
        {
          "datatype": "RelatedPerson",
          "documentLocation": "resource"
        },
        {
          "datatype": "Device",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.performer.actor",
      "min": 1,
      "max": "1",
      "short": "The reference to the practitioner",
      "definition": "The practitioner who was involved in the procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "onBehalfOf",
      "depth": 2,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Organization",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.performer.onBehalfOf",
      "min": 0,
      "max": "1",
      "short": "Organization the device or practitioner was acting for",
      "definition": "The organization the device or practitioner was acting on behalf of.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "location",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Location",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.location",
      "min": 0,
      "max": "1",
      "short": "Where the procedure happened",
      "definition": "The location where the procedure actually happened.  E.g. a newborn at home, a tracheostomy at a restaurant.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "reasonCode",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.reasonCode",
      "min": 0,
      "max": "*",
      "short": "Coded reason procedure performed",
      "definition": "The coded reason why the procedure was performed. This may be a coded entity of some type, or may simply be present as text.",
      "comment": "Use Procedure.reasonCode when a code sufficiently describes the reason.  Use Procedure.reasonReference when referencing a resource, which allows more information to be conveyed, such as onset date. Procedure.reasonCode and Procedure.reasonReference are not meant to be duplicative.  For a single reason, either Procedure.reasonCode or Procedure.reasonReference can be used.  Procedure.reasonCode may be a summary code, or Procedure.reasonReference may be used to reference a very precise definition of the reason using Condition | Observation | Procedure | DiagnosticReport | DocumentReference.  Both Procedure.reasonCode and Procedure.reasonReference can be used if they are describing different reasons for the procedure.",
      "inherited": false
    },
    {
      "name": "reasonReference",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Condition",
          "documentLocation": "resource"
        },
        {
          "datatype": "Observation",
          "documentLocation": "resource"
        },
        {
          "datatype": "Procedure",
          "documentLocation": "resource"
        },
        {
          "datatype": "DiagnosticReport",
          "documentLocation": "resource"
        },
        {
          "datatype": "DocumentReference",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.reasonReference",
      "min": 0,
      "max": "*",
      "short": "The justification that the procedure was performed",
      "definition": "The justification of why the procedure was performed.",
      "comment": "It is possible for a procedure to be a reason (such as C-Section) for another procedure (such as an epidural). Other examples include endoscopy for dilatation and biopsy (a combination of diagnostic and therapeutic use). \nUse Procedure.reasonCode when a code sufficiently describes the reason.  Use Procedure.reasonReference when referencing a resource, which allows more information to be conveyed, such as onset date. Procedure.reasonCode and Procedure.reasonReference are not meant to be duplicative.  For a single reason, either Procedure.reasonCode or Procedure.reasonReference can be used.  Procedure.reasonCode may be a summary code, or Procedure.reasonReference may be used to reference a very precise definition of the reason using Condition | Observation | Procedure | DiagnosticReport | DocumentReference.  Both Procedure.reasonCode and Procedure.reasonReference can be used if they are describing different reasons for the procedure.",
      "inherited": false
    },
    {
      "name": "bodySite",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.bodySite",
      "min": 0,
      "max": "*",
      "short": "Target body sites",
      "definition": "Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion.",
      "comment": "If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [procedure-targetbodystructure](extension-procedure-targetbodystructure.html).",
      "inherited": false
    },
    {
      "name": "outcome",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.outcome",
      "min": 0,
      "max": "1",
      "short": "The result of procedure",
      "definition": "The outcome of the procedure - did it resolve the reasons for the procedure being performed?",
      "comment": "If outcome contains narrative text only, it can be captured using the CodeableConcept.text.",
      "inherited": false
    },
    {
      "name": "report",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "DiagnosticReport",
          "documentLocation": "resource"
        },
        {
          "datatype": "DocumentReference",
          "documentLocation": "resource"
        },
        {
          "datatype": "Composition",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.report",
      "min": 0,
      "max": "*",
      "short": "Any report resulting from the procedure",
      "definition": "This could be a histology result, pathology report, surgical report, etc.",
      "comment": "There could potentially be multiple reports - e.g. if this was a procedure which took multiple biopsies resulting in a number of anatomical pathology reports.",
      "inherited": false
    },
    {
      "name": "complication",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.complication",
      "min": 0,
      "max": "*",
      "short": "Complication following the procedure",
      "definition": "Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues.",
      "comment": "If complications are only expressed by the narrative text, they can be captured using the CodeableConcept.text.",
      "inherited": false
    },
    {
      "name": "complicationDetail",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Condition",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.complicationDetail",
      "min": 0,
      "max": "*",
      "short": "A condition that is a result of the procedure",
      "definition": "Any complications that occurred during the procedure, or in the immediate post-performance period.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "followUp",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.followUp",
      "min": 0,
      "max": "*",
      "short": "Instructions for follow up",
      "definition": "If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "note",
      "depth": 1,
      "types": [
        {
          "datatype": "Annotation",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.note",
      "min": 0,
      "max": "*",
      "short": "Additional information about the procedure",
      "definition": "Any other notes and comments about the procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "focalDevice",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Procedure.focalDevice",
      "min": 0,
      "max": "*",
      "short": "Manipulated, implanted, or removed device",
      "definition": "A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Procedure.focalDevice.id",
      "min": 0,
      "max": "1",
      "short": "Unique id for inter-element referencing",
      "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
      "comment": "",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "extension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.focalDevice.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "modifierExtension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.focalDevice.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored even if unrecognized",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "BackboneElement"
    },
    {
      "name": "action",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.focalDevice.action",
      "min": 0,
      "max": "1",
      "short": "Kind of change to device",
      "definition": "The kind of change that happened to the device during the procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "manipulated",
      "depth": 2,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Device",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.focalDevice.manipulated",
      "min": 1,
      "max": "1",
      "short": "Device that was changed",
      "definition": "The device that was manipulated (changed) during the procedure.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "usedReference",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Device",
          "documentLocation": "resource"
        },
        {
          "datatype": "Medication",
          "documentLocation": "resource"
        },
        {
          "datatype": "Substance",
          "documentLocation": "resource"
        }
      ],
      "path": "Procedure.usedReference",
      "min": 0,
      "max": "*",
      "short": "Items used during procedure",
      "definition": "Identifies medications, devices and any other substance used as part of the procedure.",
      "comment": "For devices actually implanted or removed, use Procedure.device.",
      "inherited": false
    },
    {
      "name": "usedCode",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Procedure.usedCode",
      "min": 0,
      "max": "*",
      "short": "Coded items used during the procedure",
      "definition": "Identifies coded items that were used as part of the procedure.",
      "comment": "For devices actually implanted or removed, use Procedure.device.",
      "inherited": false
    }
  ],
  "searchParameters": [
    {
      "name": "code",
      "type": "token",
      "description": " A code to identify a  procedure\r",
      "expression": "Procedure.code"
    },
    {
      "name": "date",
      "type": "date",
      "description": " When the procedure was performed\r",
      "expression": "Procedure.performed"
    },
    {
      "name": "identifier",
      "type": "token",
      "description": " A unique identifier for a procedure\r",
      "expression": "Procedure.identifier"
    },
    {
      "name": "patient",
      "type": "reference",
      "description": " Search by subject - a patient\r",
      "expression": "Procedure.subject.where(resolve() is Patient)"
    },
    {
      "name": "encounter",
      "type": "reference",
      "description": " Encounter created as part of\r",
      "expression": "Procedure.encounter"
    },
    {
      "name": "based-on",
      "type": "reference",
      "description": "A request for this procedure",
      "expression": "Procedure.basedOn"
    },
    {
      "name": "category",
      "type": "token",
      "description": "Classification of the procedure",
      "expression": "Procedure.category"
    },
    {
      "name": "instantiates-canonical",
      "type": "reference",
      "description": "Instantiates FHIR protocol or definition",
      "expression": "Procedure.instantiatesCanonical"
    },
    {
      "name": "instantiates-uri",
      "type": "uri",
      "description": "Instantiates external protocol or definition",
      "expression": "Procedure.instantiatesUri"
    },
    {
      "name": "location",
      "type": "reference",
      "description": "Where the procedure happened",
      "expression": "Procedure.location"
    },
    {
      "name": "part-of",
      "type": "reference",
      "description": "Part of referenced event",
      "expression": "Procedure.partOf"
    },
    {
      "name": "performer",
      "type": "reference",
      "description": "The reference to the practitioner",
      "expression": "Procedure.performer.actor"
    },
    {
      "name": "reason-code",
      "type": "token",
      "description": "Coded reason procedure performed",
      "expression": "Procedure.reasonCode"
    },
    {
      "name": "reason-reference",
      "type": "reference",
      "description": "The justification that the procedure was performed",
      "expression": "Procedure.reasonReference"
    },
    {
      "name": "status",
      "type": "token",
      "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
      "expression": "Procedure.status"
    },
    {
      "name": "subject",
      "type": "reference",
      "description": "Search by subject",
      "expression": "Procedure.subject"
    }
  ]
}