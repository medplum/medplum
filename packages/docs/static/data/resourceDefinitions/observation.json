{
  "name": "Observation",
  "location": "resource",
  "description": "Measurements and simple assertions made about a patient, device or other subject.",
  "properties": [
    {
      "name": "Observation",
      "depth": 0,
      "types": [
        {
          "datatype": ""
        }
      ],
      "path": "Observation",
      "min": 0,
      "max": "*",
      "short": "Measurements and simple assertions",
      "definition": "Measurements and simple assertions made about a patient, device or other subject.",
      "comment": "Used for simple observations such as device measurements, laboratory atomic results, vital signs, height, weight, smoking status, comments, etc.  Other resources are used to provide context for observations such as laboratory reports, etc.",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 1,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Observation.id",
      "min": 0,
      "max": "1",
      "short": "Logical id of this artifact",
      "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
      "comment": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation.",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "meta",
      "depth": 1,
      "types": [
        {
          "datatype": "Meta",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.meta",
      "min": 0,
      "max": "1",
      "short": "Metadata about the resource",
      "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "comment": "",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "implicitRules",
      "depth": 1,
      "types": [
        {
          "datatype": "uri"
        }
      ],
      "path": "Observation.implicitRules",
      "min": 0,
      "max": "1",
      "short": "A set of rules under which this content was created",
      "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      "comment": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "language",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Observation.language",
      "min": 0,
      "max": "1",
      "short": "Language of the resource content",
      "definition": "The base language in which the resource is written.",
      "comment": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      "inherited": true,
      "base": "Resource"
    },
    {
      "name": "text",
      "depth": 1,
      "types": [
        {
          "datatype": "Narrative",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.text",
      "min": 0,
      "max": "1",
      "short": "Text summary of the resource, for human interpretation",
      "definition": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
      "comment": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a \"text blob\" or where text is additionally entered raw or narrated and encoded information is added later.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "contained",
      "depth": 1,
      "types": [
        {
          "datatype": "Resource"
        }
      ],
      "path": "Observation.contained",
      "min": 0,
      "max": "*",
      "short": "Contained, inline Resources",
      "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "comment": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "extension",
      "depth": 1,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "modifierExtension",
      "depth": 1,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored",
      "definition": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "DomainResource"
    },
    {
      "name": "identifier",
      "depth": 1,
      "types": [
        {
          "datatype": "Identifier",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.identifier",
      "min": 0,
      "max": "*",
      "short": "Business Identifier for observation",
      "definition": "A unique identifier assigned to this observation.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "basedOn",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "CarePlan",
          "documentLocation": "resource"
        },
        {
          "datatype": "DeviceRequest",
          "documentLocation": "resource"
        },
        {
          "datatype": "ImmunizationRecommendation",
          "documentLocation": "resource"
        },
        {
          "datatype": "MedicationRequest",
          "documentLocation": "resource"
        },
        {
          "datatype": "NutritionOrder",
          "documentLocation": "resource"
        },
        {
          "datatype": "ServiceRequest",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.basedOn",
      "min": 0,
      "max": "*",
      "short": "Fulfills plan, proposal or order",
      "definition": "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "partOf",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "MedicationAdministration",
          "documentLocation": "resource"
        },
        {
          "datatype": "MedicationDispense",
          "documentLocation": "resource"
        },
        {
          "datatype": "MedicationStatement",
          "documentLocation": "resource"
        },
        {
          "datatype": "Procedure",
          "documentLocation": "resource"
        },
        {
          "datatype": "Immunization",
          "documentLocation": "resource"
        },
        {
          "datatype": "ImagingStudy",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.partOf",
      "min": 0,
      "max": "*",
      "short": "Part of referenced event",
      "definition": "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure.",
      "comment": "To link an Observation to an Encounter use `encounter`.  See the  [Notes](observation.html#obsgrouping) below for guidance on referencing another Observation.",
      "inherited": false
    },
    {
      "name": "status",
      "depth": 1,
      "types": [
        {
          "datatype": "code"
        }
      ],
      "path": "Observation.status",
      "min": 1,
      "max": "1",
      "short": "registered | preliminary | final | amended +",
      "definition": "The status of the result value.",
      "comment": "This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      "inherited": false
    },
    {
      "name": "category",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.category",
      "min": 0,
      "max": "*",
      "short": "Classification of  type of observation",
      "definition": "A code that classifies the general type of observation being made.",
      "comment": "In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set.",
      "inherited": false
    },
    {
      "name": "code",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.code",
      "min": 1,
      "max": "1",
      "short": "Type of observation (code / type)",
      "definition": "Describes what was observed. Sometimes this is called the observation \"name\".",
      "comment": "*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation.",
      "inherited": false
    },
    {
      "name": "subject",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Patient",
          "documentLocation": "resource"
        },
        {
          "datatype": "Group",
          "documentLocation": "resource"
        },
        {
          "datatype": "Device",
          "documentLocation": "resource"
        },
        {
          "datatype": "Location",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.subject",
      "min": 0,
      "max": "1",
      "short": "Who and/or what the observation is about",
      "definition": "The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation.",
      "comment": "One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated.",
      "inherited": false
    },
    {
      "name": "focus",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Resource"
        }
      ],
      "path": "Observation.focus",
      "min": 0,
      "max": "*",
      "short": "What the observation is about, when it is not about the subject of record",
      "definition": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.",
      "comment": "Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., \"Blood Glucose\") and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](extension-observation-focuscode.html).",
      "inherited": false
    },
    {
      "name": "encounter",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Encounter",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.encounter",
      "min": 0,
      "max": "1",
      "short": "Healthcare event during which this observation is made",
      "definition": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made.",
      "comment": "This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests).",
      "inherited": false
    },
    {
      "name": "effective[x]",
      "depth": 1,
      "types": [
        {
          "datatype": "dateTime"
        },
        {
          "datatype": "Period",
          "documentLocation": "datatype"
        },
        {
          "datatype": "Timing",
          "documentLocation": "datatype"
        },
        {
          "datatype": "instant"
        }
      ],
      "path": "Observation.effective[x]",
      "min": 0,
      "max": "1",
      "short": "Clinically relevant time/time-period for observation",
      "definition": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
      "comment": "At least a date should be present unless this observation is a historical report.  For recording imprecise or \"fuzzy\" times (For example, a blood glucose measurement taken \"after breakfast\") use the [Timing](datatypes.html#timing) datatype which allow the measurement to be tied to regular life events.",
      "inherited": false
    },
    {
      "name": "issued",
      "depth": 1,
      "types": [
        {
          "datatype": "instant"
        }
      ],
      "path": "Observation.issued",
      "min": 0,
      "max": "1",
      "short": "Date/Time this version was made available",
      "definition": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.",
      "comment": "For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again.",
      "inherited": false
    },
    {
      "name": "performer",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Practitioner",
          "documentLocation": "resource"
        },
        {
          "datatype": "PractitionerRole",
          "documentLocation": "resource"
        },
        {
          "datatype": "Organization",
          "documentLocation": "resource"
        },
        {
          "datatype": "CareTeam",
          "documentLocation": "resource"
        },
        {
          "datatype": "Patient",
          "documentLocation": "resource"
        },
        {
          "datatype": "RelatedPerson",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.performer",
      "min": 0,
      "max": "*",
      "short": "Who is responsible for the observation",
      "definition": "Who was responsible for asserting the observed value as \"true\".",
      "comment": "",
      "inherited": false
    },
    {
      "name": "value[x]",
      "depth": 1,
      "types": [
        {
          "datatype": "Quantity",
          "documentLocation": "datatype"
        },
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        },
        {
          "datatype": "string"
        },
        {
          "datatype": "boolean"
        },
        {
          "datatype": "integer"
        },
        {
          "datatype": "Range",
          "documentLocation": "datatype"
        },
        {
          "datatype": "Ratio",
          "documentLocation": "datatype"
        },
        {
          "datatype": "SampledData",
          "documentLocation": "datatype"
        },
        {
          "datatype": "time"
        },
        {
          "datatype": "dateTime"
        },
        {
          "datatype": "Period",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.value[x]",
      "min": 0,
      "max": "1",
      "short": "Actual result",
      "definition": "The information determined as a result of making the observation, if the information has a simple value.",
      "comment": "An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](observation.html#notes) below.",
      "inherited": false
    },
    {
      "name": "dataAbsentReason",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.dataAbsentReason",
      "min": 0,
      "max": "1",
      "short": "Why the result is missing",
      "definition": "Provides a reason why the expected value in the element Observation.value[x] is missing.",
      "comment": "Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  \"detected\", \"not detected\", \"inconclusive\", or  \"specimen unsatisfactory\".   \n\nThe alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code \"error\" could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when > 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.",
      "inherited": false
    },
    {
      "name": "interpretation",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.interpretation",
      "min": 0,
      "max": "*",
      "short": "High, low, normal, etc.",
      "definition": "A categorical assessment of an observation value.  For example, high, low, normal.",
      "comment": "Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.",
      "inherited": false
    },
    {
      "name": "note",
      "depth": 1,
      "types": [
        {
          "datatype": "Annotation",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.note",
      "min": 0,
      "max": "*",
      "short": "Comments about the observation",
      "definition": "Comments about the observation or the results.",
      "comment": "May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.",
      "inherited": false
    },
    {
      "name": "bodySite",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.bodySite",
      "min": 0,
      "max": "1",
      "short": "Observed body part",
      "definition": "Indicates the site on the subject's body where the observation was made (i.e. the target site).",
      "comment": "Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   \n\nIf the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](extension-bodysite.html).",
      "inherited": false
    },
    {
      "name": "method",
      "depth": 1,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.method",
      "min": 0,
      "max": "1",
      "short": "How it was done",
      "definition": "Indicates the mechanism used to perform the observation.",
      "comment": "Only used if not implicit in code for Observation.code.",
      "inherited": false
    },
    {
      "name": "specimen",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Specimen",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.specimen",
      "min": 0,
      "max": "1",
      "short": "Specimen used for this observation",
      "definition": "The specimen that was used when this observation was made.",
      "comment": "Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report).",
      "inherited": false
    },
    {
      "name": "device",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Device",
          "documentLocation": "resource"
        },
        {
          "datatype": "DeviceMetric",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.device",
      "min": 0,
      "max": "1",
      "short": "(Measurement) Device",
      "definition": "The device used to generate the observation data.",
      "comment": "Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant.",
      "inherited": false
    },
    {
      "name": "referenceRange",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Observation.referenceRange",
      "min": 0,
      "max": "*",
      "short": "Provides guide for interpretation",
      "definition": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used.",
      "comment": "Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Observation.referenceRange.id",
      "min": 0,
      "max": "1",
      "short": "Unique id for inter-element referencing",
      "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
      "comment": "",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "extension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "modifierExtension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored even if unrecognized",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "BackboneElement"
    },
    {
      "name": "low",
      "depth": 2,
      "types": [
        {
          "datatype": "Quantity",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.low",
      "min": 0,
      "max": "1",
      "short": "Low Range, if relevant",
      "definition": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).",
      "comment": "",
      "inherited": false
    },
    {
      "name": "high",
      "depth": 2,
      "types": [
        {
          "datatype": "Quantity",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.high",
      "min": 0,
      "max": "1",
      "short": "High Range, if relevant",
      "definition": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).",
      "comment": "",
      "inherited": false
    },
    {
      "name": "type",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.type",
      "min": 0,
      "max": "1",
      "short": "Reference range qualifier",
      "definition": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
      "comment": "This SHOULD be populated if there is more than one range.  If this element is not present then the normal range is assumed.",
      "inherited": false
    },
    {
      "name": "appliesTo",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.appliesTo",
      "min": 0,
      "max": "*",
      "short": "Reference range population",
      "definition": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
      "comment": "This SHOULD be populated if there is more than one range.  If this element is not present then the normal population is assumed.",
      "inherited": false
    },
    {
      "name": "age",
      "depth": 2,
      "types": [
        {
          "datatype": "Range",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.referenceRange.age",
      "min": 0,
      "max": "1",
      "short": "Applicable age range, if relevant",
      "definition": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
      "comment": "",
      "inherited": false
    },
    {
      "name": "text",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Observation.referenceRange.text",
      "min": 0,
      "max": "1",
      "short": "Text based reference range in an observation",
      "definition": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\".",
      "comment": "",
      "inherited": false
    },
    {
      "name": "hasMember",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "Observation",
          "documentLocation": "resource"
        },
        {
          "datatype": "QuestionnaireResponse",
          "documentLocation": "resource"
        },
        {
          "datatype": "MolecularSequence",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.hasMember",
      "min": 0,
      "max": "*",
      "short": "Related resource that belongs to the Observation group",
      "definition": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
      "comment": "When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](questionnaireresponse.html)  into a final score and represent the score as an Observation.",
      "inherited": false
    },
    {
      "name": "derivedFrom",
      "depth": 1,
      "types": [
        {
          "datatype": "Reference",
          "documentLocation": "datatype"
        }
      ],
      "referenceTypes": [
        {
          "datatype": "DocumentReference",
          "documentLocation": "resource"
        },
        {
          "datatype": "ImagingStudy",
          "documentLocation": "resource"
        },
        {
          "datatype": "Media",
          "documentLocation": "resource"
        },
        {
          "datatype": "QuestionnaireResponse",
          "documentLocation": "resource"
        },
        {
          "datatype": "Observation",
          "documentLocation": "resource"
        },
        {
          "datatype": "MolecularSequence",
          "documentLocation": "resource"
        }
      ],
      "path": "Observation.derivedFrom",
      "min": 0,
      "max": "*",
      "short": "Related measurements the observation is made from",
      "definition": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.",
      "comment": "All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](observation.html#obsgrouping) below.",
      "inherited": false
    },
    {
      "name": "component",
      "depth": 1,
      "types": [
        {
          "datatype": "BackboneElement"
        }
      ],
      "path": "Observation.component",
      "min": 0,
      "max": "*",
      "short": "Component results",
      "definition": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
      "comment": "For a discussion on the ways Observations can be assembled in groups together see [Notes](observation.html#notes) below.",
      "inherited": false
    },
    {
      "name": "id",
      "depth": 2,
      "types": [
        {
          "datatype": "string"
        }
      ],
      "path": "Observation.component.id",
      "min": 0,
      "max": "1",
      "short": "Unique id for inter-element referencing",
      "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
      "comment": "",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "extension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.component.extension",
      "min": 0,
      "max": "*",
      "short": "Additional content defined by implementations",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "Element"
    },
    {
      "name": "modifierExtension",
      "depth": 2,
      "types": [
        {
          "datatype": "Extension",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.component.modifierExtension",
      "min": 0,
      "max": "*",
      "short": "Extensions that cannot be ignored even if unrecognized",
      "definition": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
      "inherited": true,
      "base": "BackboneElement"
    },
    {
      "name": "code",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.component.code",
      "min": 1,
      "max": "1",
      "short": "Type of component observation (code / type)",
      "definition": "Describes what was observed. Sometimes this is called the observation \"code\".",
      "comment": "*All* code-value and  component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation.",
      "inherited": false
    },
    {
      "name": "value[x]",
      "depth": 2,
      "types": [
        {
          "datatype": "Quantity",
          "documentLocation": "datatype"
        },
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        },
        {
          "datatype": "string"
        },
        {
          "datatype": "boolean"
        },
        {
          "datatype": "integer"
        },
        {
          "datatype": "Range",
          "documentLocation": "datatype"
        },
        {
          "datatype": "Ratio",
          "documentLocation": "datatype"
        },
        {
          "datatype": "SampledData",
          "documentLocation": "datatype"
        },
        {
          "datatype": "time"
        },
        {
          "datatype": "dateTime"
        },
        {
          "datatype": "Period",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.component.value[x]",
      "min": 0,
      "max": "1",
      "short": "Actual component result",
      "definition": "The information determined as a result of making the observation, if the information has a simple value.",
      "comment": "Used when observation has a set of component observations. An observation may have both a value (e.g. an  Apgar score)  and component observations (the observations from which the Apgar score was derived). If a value is present, the datatype for this element should be determined by Observation.code. A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](observation.html#notes) below.",
      "inherited": false
    },
    {
      "name": "dataAbsentReason",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.component.dataAbsentReason",
      "min": 0,
      "max": "1",
      "short": "Why the component result is missing",
      "definition": "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
      "comment": "\"Null\" or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  \"detected\", \"not detected\", \"inconclusive\", or  \"test not done\". \n\nThe alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code \"error\" could be used when the measurement was not completed.  Because of these options, use-case agreements are required to interpret general observations for exceptional values.",
      "inherited": false
    },
    {
      "name": "interpretation",
      "depth": 2,
      "types": [
        {
          "datatype": "CodeableConcept",
          "documentLocation": "datatype"
        }
      ],
      "path": "Observation.component.interpretation",
      "min": 0,
      "max": "*",
      "short": "High, low, normal, etc.",
      "definition": "A categorical assessment of an observation value.  For example, high, low, normal.",
      "comment": "Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.",
      "inherited": false
    },
    {
      "name": "referenceRange",
      "depth": 2,
      "types": [
        {
          "datatype": ""
        }
      ],
      "path": "Observation.component.referenceRange",
      "min": 0,
      "max": "*",
      "short": "Provides guide for interpretation of component result",
      "definition": "Guidance on how to interpret the value by comparison to a normal or recommended range.",
      "comment": "Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.",
      "inherited": false
    }
  ],
  "searchParameters": [
    {
      "name": "code",
      "type": "token",
      "description": " The code of the observation type\r",
      "expression": "Observation.code"
    },
    {
      "name": "date",
      "type": "date",
      "description": " Obtained date/time. If the obtained element is a period, a date that falls in the period\r",
      "expression": "Observation.effective"
    },
    {
      "name": "identifier",
      "type": "token",
      "description": " The unique id for a particular observation\r",
      "expression": "Observation.identifier"
    },
    {
      "name": "patient",
      "type": "reference",
      "description": " The subject that the observation is about (if patient)\r",
      "expression": "Observation.subject.where(resolve() is Patient)"
    },
    {
      "name": "encounter",
      "type": "reference",
      "description": " Encounter related to the observation\r",
      "expression": "Observation.encounter"
    },
    {
      "name": "based-on",
      "type": "reference",
      "description": "Reference to the service request.",
      "expression": "Observation.basedOn"
    },
    {
      "name": "category",
      "type": "token",
      "description": "The classification of the type of observation",
      "expression": "Observation.category"
    },
    {
      "name": "combo-code",
      "type": "token",
      "description": "The code of the observation type or component type",
      "expression": "Observation.code | Observation.component.code"
    },
    {
      "name": "combo-data-absent-reason",
      "type": "token",
      "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing.",
      "expression": "Observation.dataAbsentReason | Observation.component.dataAbsentReason"
    },
    {
      "name": "combo-value-concept",
      "type": "token",
      "description": "The value or component value of the observation, if the value is a CodeableConcept",
      "expression": "Observation.value as CodeableConcept | Observation.component.value as CodeableConcept"
    },
    {
      "name": "combo-value-quantity",
      "type": "quantity",
      "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
      "expression": "Observation.value as Quantity | Observation.value as SampledData | Observation.component.value as Quantity | Observation.component.value as SampledData"
    },
    {
      "name": "component-code",
      "type": "token",
      "description": "The component code of the observation type",
      "expression": "Observation.component.code"
    },
    {
      "name": "component-data-absent-reason",
      "type": "token",
      "description": "The reason why the expected value in the element Observation.component.value[x] is missing.",
      "expression": "Observation.component.dataAbsentReason"
    },
    {
      "name": "component-value-concept",
      "type": "token",
      "description": "The value of the component observation, if the value is a CodeableConcept",
      "expression": "Observation.component.value as CodeableConcept"
    },
    {
      "name": "component-value-quantity",
      "type": "quantity",
      "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
      "expression": "Observation.component.value as Quantity | Observation.component.value as SampledData"
    },
    {
      "name": "data-absent-reason",
      "type": "token",
      "description": "The reason why the expected value in the element Observation.value[x] is missing.",
      "expression": "Observation.dataAbsentReason"
    },
    {
      "name": "derived-from",
      "type": "reference",
      "description": "Related measurements the observation is made from",
      "expression": "Observation.derivedFrom"
    },
    {
      "name": "device",
      "type": "reference",
      "description": "The Device that generated the observation data.",
      "expression": "Observation.device"
    },
    {
      "name": "focus",
      "type": "reference",
      "description": "The focus of an observation when the focus is not the patient of record.",
      "expression": "Observation.focus"
    },
    {
      "name": "has-member",
      "type": "reference",
      "description": "Related resource that belongs to the Observation group",
      "expression": "Observation.hasMember"
    },
    {
      "name": "method",
      "type": "token",
      "description": "The method used for the observation",
      "expression": "Observation.method"
    },
    {
      "name": "part-of",
      "type": "reference",
      "description": "Part of referenced event",
      "expression": "Observation.partOf"
    },
    {
      "name": "performer",
      "type": "reference",
      "description": "Who performed the observation",
      "expression": "Observation.performer"
    },
    {
      "name": "specimen",
      "type": "reference",
      "description": "Specimen used for this observation",
      "expression": "Observation.specimen"
    },
    {
      "name": "status",
      "type": "token",
      "description": "The status of the observation",
      "expression": "Observation.status"
    },
    {
      "name": "subject",
      "type": "reference",
      "description": "The subject that the observation is about",
      "expression": "Observation.subject"
    },
    {
      "name": "value-concept",
      "type": "token",
      "description": "The value of the observation, if the value is a CodeableConcept",
      "expression": "Observation.value as CodeableConcept"
    },
    {
      "name": "value-date",
      "type": "date",
      "description": "The value of the observation, if the value is a date or period of time",
      "expression": "Observation.value as dateTime | Observation.value as Period"
    },
    {
      "name": "value-quantity",
      "type": "quantity",
      "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)",
      "expression": "Observation.value as Quantity | Observation.value as SampledData"
    },
    {
      "name": "value-string",
      "type": "string",
      "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text",
      "expression": "Observation.value as string | Observation.value as CodeableConcept.text"
    },
    {
      "name": "code-value-concept",
      "type": "composite",
      "description": "Code and coded value parameter pair",
      "expression": ""
    },
    {
      "name": "code-value-date",
      "type": "composite",
      "description": "Code and date/time value parameter pair",
      "expression": ""
    },
    {
      "name": "code-value-quantity",
      "type": "composite",
      "description": "Code and quantity value parameter pair",
      "expression": ""
    },
    {
      "name": "code-value-string",
      "type": "composite",
      "description": "Code and string value parameter pair",
      "expression": ""
    },
    {
      "name": "combo-code-value-concept",
      "type": "composite",
      "description": "Code and coded value parameter pair, including in components",
      "expression": "Observation.component"
    },
    {
      "name": "combo-code-value-quantity",
      "type": "composite",
      "description": "Code and quantity value parameter pair, including in components",
      "expression": "Observation.component"
    },
    {
      "name": "component-code-value-concept",
      "type": "composite",
      "description": "Component code and component coded value parameter pair",
      "expression": "Observation.component"
    },
    {
      "name": "component-code-value-quantity",
      "type": "composite",
      "description": "Component code and component quantity value parameter pair",
      "expression": "Observation.component"
    }
  ]
}