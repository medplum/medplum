name: Build
# Limit a single job to run at a time for a given branch/PR to save resources and speed up CI
# see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ci-build-${{ github.ref_name == 'main' && github.sha || github.ref }}
  cancel-in-progress: true
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
    types: [checks_requested]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    strategy:
      matrix:
        node-version: [18, 20]
        pg-version: [12, 14]
    env:
      NODE_VERSION: ${{ matrix.node-version }}
      PG_VERSION: ${{ matrix.pg-version }}
      SECRETS_TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    services:
      postgres:
        image: postgres:${{ matrix.pg-version }}
        env:
          POSTGRES_DB: medplum_test
          POSTGRES_USER: medplum
          POSTGRES_PASSWORD: medplum
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup TurboRepo
        # Conditionally setup turborepo
        # In the past, turborepo would silently ignore empty environment variables
        # This is no longer the case, so we need to check if the secret is set
        # You cannot use `if: ${{ secrets.TURBO_TOKEN != '' }}` because secrets are not available in the `if` condition
        if: ${{ env.SECRETS_TURBO_TOKEN != '' }}
        run: |
          echo "TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}" >> $GITHUB_ENV
          echo "TURBO_TEAM=${{ secrets.TURBO_TEAM }}" >> $GITHUB_ENV
          echo "TURBO_REMOTE_ONLY=${{ secrets.TURBO_REMOTE_ONLY }}" >> $GITHUB_ENV
      - name: Build Project
        run: ./scripts/build.sh
        env:
          MEDPLUM_BASE_URL: '__MEDPLUM_BASE_URL__'
          MEDPLUM_CLIENT_ID: '__MEDPLUM_CLIENT_ID__'
          MEDPLUM_REGISTER_ENABLED: '__MEDPLUM_REGISTER_ENABLED__'
          GOOGLE_CLIENT_ID: '__GOOGLE_CLIENT_ID__'
          RECAPTCHA_SITE_KEY: '__RECAPTCHA_SITE_KEY__'
      - name: Test
        run: ./scripts/test.sh
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          REDIS_PASSWORD_DISABLED_IN_TESTS: 1
      - name: Upload code coverage
        if: ${{ matrix.node-version == 20 && matrix.pg-version == 14 }}
        uses: actions/upload-artifact@v4
        with:
          name: medplum-code-coverage
          path: coverage/lcov.info
      - name: Danger
        run: npx danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
