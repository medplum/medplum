name: Build
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: medplum_test
          POSTGRES_USER: medplum
          POSTGRES_PASSWORD: medplum
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build Project
        run: ./scripts/build.sh
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MEDPLUM_BASE_URL: ${{ secrets.MEDPLUM_BASE_URL }}
          MEDPLUM_CLIENT_ID: ${{ secrets.MEDPLUM_CLIENT_ID }}
          RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload code coverage
        uses: actions/upload-artifact@v3
        with:
          name: medplum-code-coverage
          path: coverage/lcov.info
      - name: Configure AWS Credentials
        if: github.repository == 'medplum/medplum' && github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Docker Hub
        if: github.repository == 'medplum/medplum' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup Docker Buildx
        if: github.repository == 'medplum/medplum' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v2
      - name: Deploy
        if: github.repository == 'medplum/medplum' && github.ref == 'refs/heads/main'
        run: ./scripts/cicd-deploy.sh
        env:
          APP_BUCKET: ${{ secrets.APP_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
