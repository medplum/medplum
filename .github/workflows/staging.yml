name: Staging

concurrency:
  group: ci-staging-${{ github.sha }}
  cancel-in-progress: false

on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    name: Staging
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write
    env:
      NODE_VERSION: '20'
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_CACHE: 'remote:rw'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:fast -- --force
        env:
          MEDPLUM_BASE_URL: '__MEDPLUM_BASE_URL__'
          MEDPLUM_CLIENT_ID: '__MEDPLUM_CLIENT_ID__'
          MEDPLUM_REGISTER_ENABLED: '__MEDPLUM_REGISTER_ENABLED__'
          MEDPLUM_AWS_TEXTRACT_ENABLED: '__MEDPLUM_AWS_TEXTRACT_ENABLED__'
          GOOGLE_CLIENT_ID: '__GOOGLE_CLIENT_ID__'
          RECAPTCHA_SITE_KEY: '__RECAPTCHA_SITE_KEY__'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df
        with:
          role-to-assume: ${{ secrets.STAGING_AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.STAGING_AWS_REGION }}
      - name: Login to Docker Hub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.STAGING_DOCKERHUB_USERNAME }}
          password: ${{ secrets.STAGING_DOCKERHUB_TOKEN }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

      - name: Build App Docker Image
        run: ./scripts/build-docker-app.sh
        env:
          APP_DOCKERHUB_REPOSITORY: ${{ secrets.STAGING_APP_DOCKERHUB_REPOSITORY }}

      - name: Deploy App
        run: ./scripts/deploy-app.sh
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.STAGING_GOOGLE_CLIENT_ID }}
          MEDPLUM_BASE_URL: ${{ secrets.STAGING_MEDPLUM_BASE_URL }}
          MEDPLUM_AWS_TEXTRACT_ENABLED: 'true'
          RECAPTCHA_SITE_KEY: ${{ secrets.STAGING_RECAPTCHA_SITE_KEY }}
          APP_BUCKET: ${{ secrets.STAGING_APP_BUCKET }}
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}

      - name: Build Server Docker Image
        run: ./scripts/build-docker-server.sh
        env:
          SERVER_DOCKERHUB_REPOSITORY: ${{ secrets.STAGING_DOCKERHUB_REPOSITORY }}

      - name: Deploy Server
        run: ./scripts/deploy-server.sh
        env:
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
          ECS_CLUSTER: ${{ secrets.STAGING_ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.STAGING_ECS_SERVICE }}
      - name: Deploy bot layer
        run: ./scripts/deploy-bot-layer.sh
        env:
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
