name: Docker Build and Push to Azure CR

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  workflow_dispatch:
    inputs:
      GIT_REPO_FULL_NAME:
        description: Select RepoName
        required: false
        type: choice
        options:
          - data2evidence/d2e-medplum
      GIT_BRANCH_NAME:
        default: main
        description: Enter BranchName
        required: true
        type: string

concurrency:
  group: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}-${{ github.event_name }}-docker-build
  cancel-in-progress: true

env: # workflow_dispatch || pull_request || push
  GIT_BRANCH_NAME: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}
  GIT_REPO_FULL_NAME: ${{ github.event.inputs.GIT_REPO_FULL_NAME || github.event.pull_request.head.repo.full_name || github.event.repository.full_name }}


jobs:
  build-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 1440
    strategy:
      fail-fast: false
      matrix:
        include:
          - AZ_REG_REPOSITORY: d2e-medplum
            DOCKER_BUILD_CONTEXT_PATH: .
            DOCKER_BUILD_FILE_PATH: ./Dockerfile
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with: 
          ref: ${{ env.GIT_BRANCH_NAME }}
          repository: ${{ env.GIT_REPO_FULL_NAME }}
    
      - name: Set up variables
        id: setup
        run: |
          ACR_IMAGE_PUSH=false
          if [ $GIT_BRANCH_NAME = 'main' ]; then
            ACR_IMAGE_PUSH=true
          fi

          if [ $GIT_BRANCH_NAME == "main" ]; then
            DOCKER_IMG_TAG_NAME=main 
          else
            DOCKER_IMG_TAG_NAME=$(echo $(git rev-parse --short HEAD))
          fi

          echo GIT_BRANCH_NAME="${GIT_BRANCH_NAME}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo GIT_REPO_FULL_NAME="${GIT_REPO_FULL_NAME}" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo GITHUB_SHA=$GITHUB_SHA | tee -a $GITHUB_STEP_SUMMARY
          
          echo "DOCKER_BUILD_PLATFORMS=linux/amd64" | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo "ACR_IMAGE_PUSH=$ACR_IMAGE_PUSH" | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

          echo AZ_REG_REPOSITORY=${{ matrix.AZ_REG_REPOSITORY }} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo DOCKER_IMG_TAG_NAME=$DOCKER_IMG_TAG_NAME | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo DOCKER_BUILD_CONTEXT_PATH=${{ matrix.DOCKER_BUILD_CONTEXT_PATH }} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo DOCKER_BUILD_FILE_PATH=${{ matrix.DOCKER_BUILD_FILE_PATH }} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder

      - name: Use Node.js - Project
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@data2evidence"
      
      - name: Install dependencies
        run: npm install
      
      - name: Build
        run: npm run build

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Run script to create tar file
        run: ./scripts/build-docker-server.sh --release
          
      - name: Build and push
        id: build-push2
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.builder.outputs.name }}
          context: ${{ matrix.DOCKER_BUILD_CONTEXT_PATH }}
          file: ${{ matrix.DOCKER_BUILD_FILE_PATH }}
          platforms: ${{ steps.setup.outputs.DOCKER_BUILD_PLATFORMS }}
          push: ${{ steps.setup.outputs.ACR_IMAGE_PUSH }}
          tags: ghcr.io/data2evidence/${{ matrix.AZ_REG_REPOSITORY }}:${{ env.DOCKER_IMG_TAG_NAME }}