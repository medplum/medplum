version: '3.8'

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=medplum
      - POSTGRES_PASSWORD=medplum
    command:
      # We use command line args instead of a postgres.conf to avoid additional setup out of the box
      - 'postgres'
      - '-c'
      - 'listen_addresses=*'
      - '-c'
      - 'statement_timeout=60000'
      - '-c'
      - 'default_transaction_isolation=REPEATABLE READ'
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U medplum']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    command: redis-server --requirepass medplum
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'medplum', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Medplum server container
  medplum-server:
    image: medplum/medplum-server:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '8103:8103'
    volumes:
      - ./medplum-server/medplum.config.json:/usr/src/medplum/packages/server/medplum.config.json
      - ./binary:/usr/src/medplum/binary
    healthcheck:
      test:
        # We use Node's fetch for healthcheck because this image doesn't have a curl or wget installed
        [
          'CMD',
          'node',
          '-e',
          'fetch("http://localhost:8103/healthcheck").then(r => r.json()).then(console.log).catch(() => { process.exit(1); })',
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Medplum app container (web UI)
  medplum-app:
    image: medplum/medplum-app:latest
    restart: always
    depends_on:
      medplum-server:
        condition: service_healthy
    ports:
      - '3000:3000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 10s
      timeout: 5s
      retries: 5
