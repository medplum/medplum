# Default values for medplum.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  #repository: your-region-docker.pkg.dev/your-project-id/medplum-repo/medplum-server
  repository: us-west1-docker.pkg.dev/medplum-zencore/medplum-repo/medplum-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

env:
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: postgresql-connection-string
        key: connection-string
  - name: REDIS_URL
    value: "redis://redis-instance-ip:6379"
  - name: POSTGRES_HOST
    valueFrom:
      secretKeyRef:
        name: postgresql-ip-address
        key: ip-address
  - name: POSTGRES_PORT
    value: "5432"
  - name: POSTGRES_USER
    value: "medplum"
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres-password
        key: password
  - name: POSTGRES_DB
    value: "your-database-name"
  - name: REDIS_HOST
    value: "MEMORYSTORE_PRIVATE_IP"
  - name: REDIS_PORT
    value: "6379"
  - name: REDIS_PASSWORD
    value: "medplum"

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "gce"
  hosts:
    - host: app.zencore.medplum.dev
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: medplum-app-service
              port:
                number: 5000
  tls:
    - secretName: tls-secret
      hosts:
        - app.zencore.medplum.dev


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations:
    iam.gke.io/gcp-service-account: medplum-server@medplum-zencore.iam.gserviceaccount.com
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
